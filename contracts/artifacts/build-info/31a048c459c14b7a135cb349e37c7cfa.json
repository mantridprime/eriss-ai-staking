{
	"id": "31a048c459c14b7a135cb349e37c7cfa",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.5.16",
	"solcLongVersion": "0.5.16+commit.9c3226ce",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/StakingRewards.sol": {
				"content": "pragma solidity ^0.5.16;\r\n\r\nimport \"openzeppelin-solidity-2.3.0/contracts/math/SafeMath.sol\";\r\nimport \"openzeppelin-solidity-2.3.0/contracts/token/ERC20/ERC20Detailed.sol\";\r\nimport \"openzeppelin-solidity-2.3.0/contracts/token/ERC20/SafeERC20.sol\";\r\nimport \"openzeppelin-solidity-2.3.0/contracts/utils/ReentrancyGuard.sol\";\r\n\r\n// Inheritance\r\nimport \"./interfaces/IStakingRewards.sol\";\r\nimport \"./RewardsDistributionRecipient.sol\";\r\nimport \"./Pausable.sol\";\r\n\r\n// https://docs.synthetix.io/contracts/source/contracts/stakingrewards\r\ncontract StakingRewards is IStakingRewards, RewardsDistributionRecipient, ReentrancyGuard, Pausable {\r\n    using SafeMath for uint256;\r\n    using SafeERC20 for IERC20;\r\n\r\n    /* ========== STATE VARIABLES ========== */\r\n\r\n    IERC20 public rewardsToken;\r\n    IERC20 public stakingToken;\r\n    uint256 public periodFinish = 0;\r\n    uint256 public rewardRate = 0;\r\n    uint256 public rewardsDuration = 7 days;\r\n    uint256 public lastUpdateTime;\r\n    uint256 public rewardPerTokenStored;\r\n\r\n    mapping(address => uint256) public userRewardPerTokenPaid;\r\n    mapping(address => uint256) public rewards;\r\n\r\n    uint256 private _totalSupply;\r\n    mapping(address => uint256) private _balances;\r\n\r\n    /* ========== CONSTRUCTOR ========== */\r\n\r\n    constructor(\r\n        address _owner,\r\n        address _rewardsDistribution,\r\n        address _rewardsToken,\r\n        address _stakingToken\r\n    ) public Owned(_owner) {\r\n        rewardsToken = IERC20(_rewardsToken);\r\n        stakingToken = IERC20(_stakingToken);\r\n        rewardsDistribution = _rewardsDistribution;\r\n    }\r\n\r\n    /* ========== VIEWS ========== */\r\n\r\n    function totalSupply() external view returns (uint256) {\r\n        return _totalSupply;\r\n    }\r\n\r\n    function balanceOf(address account) external view returns (uint256) {\r\n        return _balances[account];\r\n    }\r\n\r\n    function lastTimeRewardApplicable() public view returns (uint256) {\r\n        return block.timestamp < periodFinish ? block.timestamp : periodFinish;\r\n    }\r\n\r\n    function rewardPerToken() public view returns (uint256) {\r\n        if (_totalSupply == 0) {\r\n            return rewardPerTokenStored;\r\n        }\r\n        return\r\n            rewardPerTokenStored.add(\r\n                lastTimeRewardApplicable().sub(lastUpdateTime).mul(rewardRate).mul(1e18).div(_totalSupply)\r\n            );\r\n    }\r\n\r\n    function earned(address account) public view returns (uint256) {\r\n        return _balances[account].mul(rewardPerToken().sub(userRewardPerTokenPaid[account])).div(1e18).add(rewards[account]);\r\n    }\r\n\r\n    function getRewardForDuration() external view returns (uint256) {\r\n        return rewardRate.mul(rewardsDuration);\r\n    }\r\n\r\n    /* ========== MUTATIVE FUNCTIONS ========== */\r\n\r\n    function stake(uint256 amount) external nonReentrant notPaused updateReward(msg.sender) {\r\n        require(amount > 0, \"Cannot stake 0\");\r\n        _totalSupply = _totalSupply.add(amount);\r\n        _balances[msg.sender] = _balances[msg.sender].add(amount);\r\n        stakingToken.safeTransferFrom(msg.sender, address(this), amount);\r\n        emit Staked(msg.sender, amount);\r\n    }\r\n\r\n    function withdraw(uint256 amount) public nonReentrant updateReward(msg.sender) {\r\n        require(amount > 0, \"Cannot withdraw 0\");\r\n        _totalSupply = _totalSupply.sub(amount);\r\n        _balances[msg.sender] = _balances[msg.sender].sub(amount);\r\n        stakingToken.safeTransfer(msg.sender, amount);\r\n        emit Withdrawn(msg.sender, amount);\r\n    }\r\n\r\n    function getReward() public nonReentrant updateReward(msg.sender) {\r\n        uint256 reward = rewards[msg.sender];\r\n        if (reward > 0) {\r\n            rewards[msg.sender] = 0;\r\n            rewardsToken.safeTransfer(msg.sender, reward);\r\n            emit RewardPaid(msg.sender, reward);\r\n        }\r\n    }\r\n\r\n    function exit() external {\r\n        withdraw(_balances[msg.sender]);\r\n        getReward();\r\n    }\r\n\r\n    /* ========== RESTRICTED FUNCTIONS ========== */\r\n\r\n    function notifyRewardAmount(uint256 reward) external onlyRewardsDistribution updateReward(address(0)) {\r\n        if (block.timestamp >= periodFinish) {\r\n            rewardRate = reward.div(rewardsDuration);\r\n        } else {\r\n            uint256 remaining = periodFinish.sub(block.timestamp);\r\n            uint256 leftover = remaining.mul(rewardRate);\r\n            rewardRate = reward.add(leftover).div(rewardsDuration);\r\n        }\r\n\r\n        // Ensure the provided reward amount is not more than the balance in the contract.\r\n        // This keeps the reward rate in the right range, preventing overflows due to\r\n        // very high values of rewardRate in the earned and rewardsPerToken functions;\r\n        // Reward + leftover must be less than 2^256 / 10^18 to avoid overflow.\r\n        uint balance = rewardsToken.balanceOf(address(this));\r\n        require(rewardRate <= balance.div(rewardsDuration), \"Provided reward too high\");\r\n\r\n        lastUpdateTime = block.timestamp;\r\n        periodFinish = block.timestamp.add(rewardsDuration);\r\n        emit RewardAdded(reward);\r\n    }\r\n\r\n    // Added to support recovering LP Rewards from other systems such as BAL to be distributed to holders\r\n    function recoverERC20(address tokenAddress, uint256 tokenAmount) external onlyOwner {\r\n        require(tokenAddress != address(stakingToken), \"Cannot withdraw the staking token\");\r\n        IERC20(tokenAddress).safeTransfer(owner, tokenAmount);\r\n        emit Recovered(tokenAddress, tokenAmount);\r\n    }\r\n\r\n    function setRewardsDuration(uint256 _rewardsDuration) external onlyOwner {\r\n        require(\r\n            block.timestamp > periodFinish,\r\n            \"Previous rewards period must be complete before changing the duration for the new period\"\r\n        );\r\n        rewardsDuration = _rewardsDuration;\r\n        emit RewardsDurationUpdated(rewardsDuration);\r\n    }\r\n\r\n    /* ========== MODIFIERS ========== */\r\n\r\n    modifier updateReward(address account) {\r\n        rewardPerTokenStored = rewardPerToken();\r\n        lastUpdateTime = lastTimeRewardApplicable();\r\n        if (account != address(0)) {\r\n            rewards[account] = earned(account);\r\n            userRewardPerTokenPaid[account] = rewardPerTokenStored;\r\n        }\r\n        _;\r\n    }\r\n\r\n    /* ========== EVENTS ========== */\r\n\r\n    event RewardAdded(uint256 reward);\r\n    event Staked(address indexed user, uint256 amount);\r\n    event Withdrawn(address indexed user, uint256 amount);\r\n    event RewardPaid(address indexed user, uint256 reward);\r\n    event RewardsDurationUpdated(uint256 newDuration);\r\n    event Recovered(address token, uint256 amount);\r\n}"
			},
			"contracts/Pausable.sol": {
				"content": "pragma solidity ^0.5.16;\r\n\r\n// Inheritance\r\nimport \"./Owned.sol\";\r\n\r\n// https://docs.synthetix.io/contracts/source/contracts/pausable\r\ncontract Pausable is Owned {\r\n    uint public lastPauseTime;\r\n    bool public paused;\r\n\r\n    constructor() internal {\r\n        // This contract is abstract, and thus cannot be instantiated directly\r\n        require(owner != address(0), \"Owner must be set\");\r\n        // Paused will be false, and lastPauseTime will be 0 upon initialisation\r\n    }\r\n\r\n    /**\r\n     * @notice Change the paused state of the contract\r\n     * @dev Only the contract owner may call this.\r\n     */\r\n    function setPaused(bool _paused) external onlyOwner {\r\n        // Ensure we're actually changing the state before we do anything\r\n        if (_paused == paused) {\r\n            return;\r\n        }\r\n\r\n        // Set our paused state.\r\n        paused = _paused;\r\n\r\n        // If applicable, set the last pause time.\r\n        if (paused) {\r\n            lastPauseTime = now;\r\n        }\r\n\r\n        // Let everyone know that our pause state has changed.\r\n        emit PauseChanged(paused);\r\n    }\r\n\r\n    event PauseChanged(bool isPaused);\r\n\r\n    modifier notPaused {\r\n        require(!paused, \"This action cannot be performed while the contract is paused\");\r\n        _;\r\n    }\r\n}"
			},
			"contracts/RewardsDistributionRecipient.sol": {
				"content": "pragma solidity ^0.5.16;\r\n\r\n// Inheritance\r\nimport \"./Owned.sol\";\r\n\r\n// https://docs.synthetix.io/contracts/source/contracts/rewardsdistributionrecipient\r\ncontract RewardsDistributionRecipient is Owned {\r\n    address public rewardsDistribution;\r\n\r\n    function notifyRewardAmount(uint256 reward) external;\r\n\r\n    modifier onlyRewardsDistribution() {\r\n        require(msg.sender == rewardsDistribution, \"Caller is not RewardsDistribution contract\");\r\n        _;\r\n    }\r\n\r\n    function setRewardsDistribution(address _rewardsDistribution) external onlyOwner {\r\n        rewardsDistribution = _rewardsDistribution;\r\n    }\r\n}"
			},
			"contracts/interfaces/IStakingRewards.sol": {
				"content": "pragma solidity >=0.4.24;\r\n\r\n// https://docs.synthetix.io/contracts/source/interfaces/istakingrewards\r\ninterface IStakingRewards {\r\n    // Views\r\n\r\n    function balanceOf(address account) external view returns (uint256);\r\n\r\n    function earned(address account) external view returns (uint256);\r\n\r\n    function getRewardForDuration() external view returns (uint256);\r\n\r\n    function lastTimeRewardApplicable() external view returns (uint256);\r\n\r\n    function rewardPerToken() external view returns (uint256);\r\n\r\n    function rewardsDistribution() external view returns (address);\r\n\r\n    function rewardsToken() external view returns (address);\r\n\r\n    function totalSupply() external view returns (uint256);\r\n\r\n    // Mutative\r\n\r\n    function exit() external;\r\n\r\n    function getReward() external;\r\n\r\n    function stake(uint256 amount) external;\r\n\r\n    function withdraw(uint256 amount) external;\r\n}"
			},
			"openzeppelin-solidity-2.3.0/contracts/utils/ReentrancyGuard.sol": {
				"content": "pragma solidity ^0.5.0;\r\n\r\n/**\r\n * @dev Contract module that helps prevent reentrant calls to a function.\r\n *\r\n * Inheriting from `ReentrancyGuard` will make the `nonReentrant` modifier\r\n * available, which can be aplied to functions to make sure there are no nested\r\n * (reentrant) calls to them.\r\n *\r\n * Note that because there is a single `nonReentrant` guard, functions marked as\r\n * `nonReentrant` may not call one another. This can be worked around by making\r\n * those functions `private`, and then adding `external` `nonReentrant` entry\r\n * points to them.\r\n */\r\ncontract ReentrancyGuard {\r\n    /// @dev counter to allow mutex lock with only one SSTORE operation\r\n    uint256 private _guardCounter;\r\n\r\n    constructor () internal {\r\n        // The counter starts at one to prevent changing it from zero to a non-zero\r\n        // value, which is a more expensive operation.\r\n        _guardCounter = 1;\r\n    }\r\n\r\n    /**\r\n     * @dev Prevents a contract from calling itself, directly or indirectly.\r\n     * Calling a `nonReentrant` function from another `nonReentrant`\r\n     * function is not supported. It is possible to prevent this from happening\r\n     * by making the `nonReentrant` function external, and make it call a\r\n     * `private` function that does the actual work.\r\n     */\r\n    modifier nonReentrant() {\r\n        _guardCounter += 1;\r\n        uint256 localCounter = _guardCounter;\r\n        _;\r\n        require(localCounter == _guardCounter, \"ReentrancyGuard: reentrant call\");\r\n    }\r\n}"
			},
			"openzeppelin-solidity-2.3.0/contracts/token/ERC20/SafeERC20.sol": {
				"content": "pragma solidity ^0.5.0;\r\n\r\nimport \"./IERC20.sol\";\r\nimport \"../../math/SafeMath.sol\";\r\nimport \"../../utils/Address.sol\";\r\n\r\n/**\r\n * @title SafeERC20\r\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\r\n * contract returns false). Tokens that return no value (and instead revert or\r\n * throw on failure) are also supported, non-reverting calls are assumed to be\r\n * successful.\r\n * To use this library you can add a `using SafeERC20 for ERC20;` statement to your contract,\r\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\r\n */\r\nlibrary SafeERC20 {\r\n    using SafeMath for uint256;\r\n    using Address for address;\r\n\r\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\r\n        callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\r\n    }\r\n\r\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\r\n        callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\r\n    }\r\n\r\n    function safeApprove(IERC20 token, address spender, uint256 value) internal {\r\n        // safeApprove should only be called when setting an initial allowance,\r\n        // or when resetting it to zero. To increase and decrease it, use\r\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\r\n        // solhint-disable-next-line max-line-length\r\n        require((value == 0) || (token.allowance(address(this), spender) == 0),\r\n            \"SafeERC20: approve from non-zero to non-zero allowance\"\r\n        );\r\n        callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\r\n    }\r\n\r\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\r\n        uint256 newAllowance = token.allowance(address(this), spender).add(value);\r\n        callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\r\n    }\r\n\r\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 value) internal {\r\n        uint256 newAllowance = token.allowance(address(this), spender).sub(value);\r\n        callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\r\n    }\r\n\r\n    /**\r\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\r\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\r\n     * @param token The token targeted by the call.\r\n     * @param data The call data (encoded using abi.encode or one of its variants).\r\n     */\r\n    function callOptionalReturn(IERC20 token, bytes memory data) private {\r\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\r\n        // we're implementing it ourselves.\r\n\r\n        // A Solidity high level call has three parts:\r\n        //  1. The target address is checked to verify it contains contract code\r\n        //  2. The call itself is made, and success asserted\r\n        //  3. The return value is decoded, which in turn checks the size of the returned data.\r\n        // solhint-disable-next-line max-line-length\r\n        require(address(token).isContract(), \"SafeERC20: call to non-contract\");\r\n\r\n        // solhint-disable-next-line avoid-low-level-calls\r\n        (bool success, bytes memory returndata) = address(token).call(data);\r\n        require(success, \"SafeERC20: low-level call failed\");\r\n\r\n        if (returndata.length > 0) { // Return data is optional\r\n            // solhint-disable-next-line max-line-length\r\n            require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\");\r\n        }\r\n    }\r\n}"
			},
			"openzeppelin-solidity-2.3.0/contracts/token/ERC20/ERC20Detailed.sol": {
				"content": "pragma solidity ^0.5.0;\r\n\r\nimport \"./IERC20.sol\";\r\n\r\n/**\r\n * @dev Optional functions from the ERC20 standard.\r\n */\r\ncontract ERC20Detailed is IERC20 {\r\n    string private _name;\r\n    string private _symbol;\r\n    uint8 private _decimals;\r\n\r\n    /**\r\n     * @dev Sets the values for `name`, `symbol`, and `decimals`. All three of\r\n     * these values are immutable: they can only be set once during\r\n     * construction.\r\n     */\r\n    constructor (string memory name, string memory symbol, uint8 decimals) public {\r\n        _name = name;\r\n        _symbol = symbol;\r\n        _decimals = decimals;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the name of the token.\r\n     */\r\n    function name() public view returns (string memory) {\r\n        return _name;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the symbol of the token, usually a shorter version of the\r\n     * name.\r\n     */\r\n    function symbol() public view returns (string memory) {\r\n        return _symbol;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the number of decimals used to get its user representation.\r\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\r\n     * be displayed to a user as `5,05` (`505 / 10 ** 2`).\r\n     *\r\n     * Tokens usually opt for a value of 18, imitating the relationship between\r\n     * Ether and Wei.\r\n     *\r\n     * > Note that this information is only used for _display_ purposes: it in\r\n     * no way affects any of the arithmetic of the contract, including\r\n     * `IERC20.balanceOf` and `IERC20.transfer`.\r\n     */\r\n    function decimals() public view returns (uint8) {\r\n        return _decimals;\r\n    }\r\n}"
			},
			"openzeppelin-solidity-2.3.0/contracts/math/SafeMath.sol": {
				"content": "pragma solidity ^0.5.0;\r\n\r\n/**\r\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\r\n * checks.\r\n *\r\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\r\n * in bugs, because programmers usually assume that an overflow raises an\r\n * error, which is the standard behavior in high level programming languages.\r\n * `SafeMath` restores this intuition by reverting the transaction when an\r\n * operation overflows.\r\n *\r\n * Using this library instead of the unchecked operations eliminates an entire\r\n * class of bugs, so it's recommended to use it always.\r\n */\r\nlibrary SafeMath {\r\n    /**\r\n     * @dev Returns the addition of two unsigned integers, reverting on\r\n     * overflow.\r\n     *\r\n     * Counterpart to Solidity's `+` operator.\r\n     *\r\n     * Requirements:\r\n     * - Addition cannot overflow.\r\n     */\r\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        uint256 c = a + b;\r\n        require(c >= a, \"SafeMath: addition overflow\");\r\n\r\n        return c;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the subtraction of two unsigned integers, reverting on\r\n     * overflow (when the result is negative).\r\n     *\r\n     * Counterpart to Solidity's `-` operator.\r\n     *\r\n     * Requirements:\r\n     * - Subtraction cannot overflow.\r\n     */\r\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        require(b <= a, \"SafeMath: subtraction overflow\");\r\n        uint256 c = a - b;\r\n\r\n        return c;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the multiplication of two unsigned integers, reverting on\r\n     * overflow.\r\n     *\r\n     * Counterpart to Solidity's `*` operator.\r\n     *\r\n     * Requirements:\r\n     * - Multiplication cannot overflow.\r\n     */\r\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\r\n        // benefit is lost if 'b' is also tested.\r\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\r\n        if (a == 0) {\r\n            return 0;\r\n        }\r\n\r\n        uint256 c = a * b;\r\n        require(c / a == b, \"SafeMath: multiplication overflow\");\r\n\r\n        return c;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the integer division of two unsigned integers. Reverts on\r\n     * division by zero. The result is rounded towards zero.\r\n     *\r\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\r\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\r\n     * uses an invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        // Solidity only automatically asserts when dividing by 0\r\n        require(b > 0, \"SafeMath: division by zero\");\r\n        uint256 c = a / b;\r\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\r\n\r\n        return c;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\r\n     * Reverts when dividing by zero.\r\n     *\r\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\r\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\r\n     * invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        require(b != 0, \"SafeMath: modulo by zero\");\r\n        return a % b;\r\n    }\r\n}"
			},
			"openzeppelin-solidity-2.3.0/contracts/utils/Address.sol": {
				"content": "pragma solidity ^0.5.0;\r\n\r\n/**\r\n * @dev Collection of functions related to the address type,\r\n */\r\nlibrary Address {\r\n    /**\r\n     * @dev Returns true if `account` is a contract.\r\n     *\r\n     * This test is non-exhaustive, and there may be false-negatives: during the\r\n     * execution of a contract's constructor, its address will be reported as\r\n     * not containing a contract.\r\n     *\r\n     * > It is unsafe to assume that an address for which this function returns\r\n     * false is an externally-owned account (EOA) and not a contract.\r\n     */\r\n    function isContract(address account) internal view returns (bool) {\r\n        // This method relies in extcodesize, which returns 0 for contracts in\r\n        // construction, since the code is only stored at the end of the\r\n        // constructor execution.\r\n\r\n        uint256 size;\r\n        // solhint-disable-next-line no-inline-assembly\r\n        assembly { size := extcodesize(account) }\r\n        return size > 0;\r\n    }\r\n}"
			},
			"openzeppelin-solidity-2.3.0/contracts/token/ERC20/IERC20.sol": {
				"content": "pragma solidity ^0.5.0;\r\n\r\n/**\r\n * @dev Interface of the ERC20 standard as defined in the EIP. Does not include\r\n * the optional functions; to access them see `ERC20Detailed`.\r\n */\r\ninterface IERC20 {\r\n    /**\r\n     * @dev Returns the amount of tokens in existence.\r\n     */\r\n    function totalSupply() external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Returns the amount of tokens owned by `account`.\r\n     */\r\n    function balanceOf(address account) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * Emits a `Transfer` event.\r\n     */\r\n    function transfer(address recipient, uint256 amount) external returns (bool);\r\n\r\n    /**\r\n     * @dev Returns the remaining number of tokens that `spender` will be\r\n     * allowed to spend on behalf of `owner` through `transferFrom`. This is\r\n     * zero by default.\r\n     *\r\n     * This value changes when `approve` or `transferFrom` are called.\r\n     */\r\n    function allowance(address owner, address spender) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * > Beware that changing an allowance with this method brings the risk\r\n     * that someone may use both the old and the new allowance by unfortunate\r\n     * transaction ordering. One possible solution to mitigate this race\r\n     * condition is to first reduce the spender's allowance to 0 and set the\r\n     * desired value afterwards:\r\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\r\n     *\r\n     * Emits an `Approval` event.\r\n     */\r\n    function approve(address spender, uint256 amount) external returns (bool);\r\n\r\n    /**\r\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\r\n     * allowance mechanism. `amount` is then deducted from the caller's\r\n     * allowance.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * Emits a `Transfer` event.\r\n     */\r\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\r\n\r\n    /**\r\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\r\n     * another (`to`).\r\n     *\r\n     * Note that `value` may be zero.\r\n     */\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n\r\n    /**\r\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\r\n     * a call to `approve`. `value` is the new allowance.\r\n     */\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n}"
			},
			"contracts/Owned.sol": {
				"content": "pragma solidity ^0.5.16;\r\n\r\n// https://docs.synthetix.io/contracts/source/contracts/owned\r\ncontract Owned {\r\n    address public owner;\r\n    address public nominatedOwner;\r\n\r\n    constructor(address _owner) public {\r\n        require(_owner != address(0), \"Owner address cannot be 0\");\r\n        owner = _owner;\r\n        emit OwnerChanged(address(0), _owner);\r\n    }\r\n\r\n    function nominateNewOwner(address _owner) external onlyOwner {\r\n        nominatedOwner = _owner;\r\n        emit OwnerNominated(_owner);\r\n    }\r\n\r\n    function acceptOwnership() external {\r\n        require(msg.sender == nominatedOwner, \"You must be nominated before you can accept ownership\");\r\n        emit OwnerChanged(owner, nominatedOwner);\r\n        owner = nominatedOwner;\r\n        nominatedOwner = address(0);\r\n    }\r\n\r\n    modifier onlyOwner {\r\n        _onlyOwner();\r\n        _;\r\n    }\r\n\r\n    function _onlyOwner() private view {\r\n        require(msg.sender == owner, \"Only the contract owner may perform this action\");\r\n    }\r\n\r\n    event OwnerNominated(address newOwner);\r\n    event OwnerChanged(address oldOwner, address newOwner);\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"contracts/Owned.sol": {
				"Owned": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "oldOwner",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnerChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnerNominated",
							"type": "event"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "acceptOwnership",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								}
							],
							"name": "nominateNewOwner",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "nominatedOwner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"contracts/Owned.sol\":91:1113  contract Owned {\r... */\n  mstore(0x40, 0x80)\n    /* \"contracts/Owned.sol\":178:363  constructor(address _owner) public {\r... */\n  callvalue\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x00\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_1:\n    /* \"contracts/Owned.sol\":178:363  constructor(address _owner) public {\r... */\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n    /* \"--CODEGEN--\":13:15   */\n  0x20\n    /* \"--CODEGEN--\":8:11   */\n  dup2\n    /* \"--CODEGEN--\":5:16   */\n  lt\n    /* \"--CODEGEN--\":2:4   */\n  iszero\n  tag_2\n  jumpi\n    /* \"--CODEGEN--\":29:30   */\n  0x00\n    /* \"--CODEGEN--\":26:27   */\n  dup1\n    /* \"--CODEGEN--\":19:31   */\n  revert\n    /* \"--CODEGEN--\":2:4   */\ntag_2:\n    /* \"contracts/Owned.sol\":178:363  constructor(address _owner) public {\r... */\n  dup2\n  add\n  swap1\n  dup1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  swap3\n  swap2\n  swap1\n  pop\n  pop\n  pop\n    /* \"contracts/Owned.sol\":250:251  0 */\n  0x00\n    /* \"contracts/Owned.sol\":232:252  _owner != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/Owned.sol\":232:238  _owner */\n  dup2\n    /* \"contracts/Owned.sol\":232:252  _owner != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  eq\n  iszero\n    /* \"contracts/Owned.sol\":224:282  require(_owner != address(0), \"Owner address cannot be 0\") */\n  tag_5\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  dup1\n  dup1\n  0x20\n  add\n  dup3\n  dup2\n  sub\n  dup3\n  mstore\n  0x19\n  dup2\n  mstore\n  0x20\n  add\n  dup1\n  0x4f776e657220616464726573732063616e6e6f74206265203000000000000000\n  dup2\n  mstore\n  pop\n  0x20\n  add\n  swap2\n  pop\n  pop\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_5:\n    /* \"contracts/Owned.sol\":301:307  _owner */\n  dup1\n    /* \"contracts/Owned.sol\":293:298  owner */\n  0x00\n  dup1\n    /* \"contracts/Owned.sol\":293:307  owner = _owner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/Owned.sol\":323:355  OwnerChanged(address(0), _owner) */\n  0xb532073b38c83145e3e5135377a08bf9aab55bc0fd7c1179cd4fb995d2a5159c\n    /* \"contracts/Owned.sol\":344:345  0 */\n  0x00\n    /* \"contracts/Owned.sol\":348:354  _owner */\n  dup3\n    /* \"contracts/Owned.sol\":323:355  OwnerChanged(address(0), _owner) */\n  mload(0x40)\n  dup1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  dup3\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap3\n  pop\n  pop\n  pop\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log1\n    /* \"contracts/Owned.sol\":178:363  constructor(address _owner) public {\r... */\n  pop\n    /* \"contracts/Owned.sol\":91:1113  contract Owned {\r... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Owned.sol\":91:1113  contract Owned {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_1\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_1:\n        /* \"contracts/Owned.sol\":91:1113  contract Owned {\r... */\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x1627540c\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x53a47bb7\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x79ba5097\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/Owned.sol\":371:512  function nominateNewOwner(address _owner) external onlyOwner {\r... */\n    tag_3:\n      tag_7\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_8\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_8:\n        /* \"contracts/Owned.sol\":371:512  function nominateNewOwner(address _owner) external onlyOwner {\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_9\n      jump\t// in\n    tag_7:\n      stop\n        /* \"contracts/Owned.sol\":140:169  address public nominatedOwner */\n    tag_4:\n      tag_10\n      tag_11\n      jump\t// in\n    tag_10:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Owned.sol\":520:791  function acceptOwnership() external {\r... */\n    tag_5:\n      tag_12\n      tag_13\n      jump\t// in\n    tag_12:\n      stop\n        /* \"contracts/Owned.sol\":113:133  address public owner */\n    tag_6:\n      tag_14\n      tag_15\n      jump\t// in\n    tag_14:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Owned.sol\":371:512  function nominateNewOwner(address _owner) external onlyOwner {\r... */\n    tag_9:\n        /* \"contracts/Owned.sol\":829:841  _onlyOwner() */\n      tag_17\n        /* \"contracts/Owned.sol\":829:839  _onlyOwner */\n      tag_18\n        /* \"contracts/Owned.sol\":829:841  _onlyOwner() */\n      jump\t// in\n    tag_17:\n        /* \"contracts/Owned.sol\":460:466  _owner */\n      dup1\n        /* \"contracts/Owned.sol\":443:457  nominatedOwner */\n      0x01\n      0x00\n        /* \"contracts/Owned.sol\":443:466  nominatedOwner = _owner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Owned.sol\":482:504  OwnerNominated(_owner) */\n      0x906a1c6bd7e3091ea86693dd029a831c19049ce77f1dce2ce0bab1cacbabce22\n        /* \"contracts/Owned.sol\":497:503  _owner */\n      dup2\n        /* \"contracts/Owned.sol\":482:504  OwnerNominated(_owner) */\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/Owned.sol\":371:512  function nominateNewOwner(address _owner) external onlyOwner {\r... */\n      pop\n      jump\t// out\n        /* \"contracts/Owned.sol\":140:169  address public nominatedOwner */\n    tag_11:\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/Owned.sol\":520:791  function acceptOwnership() external {\r... */\n    tag_13:\n        /* \"contracts/Owned.sol\":589:603  nominatedOwner */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Owned.sol\":575:603  msg.sender == nominatedOwner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Owned.sol\":575:585  msg.sender */\n      caller\n        /* \"contracts/Owned.sol\":575:603  msg.sender == nominatedOwner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/Owned.sol\":567:661  require(msg.sender == nominatedOwner, \"You must be nominated before you can accept ownership\") */\n      tag_21\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x35\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_1149e36cd24095bebc9341ef03810e0e2a00039190624df6f2d7934141e2233b\n      0x35\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_21:\n        /* \"contracts/Owned.sol\":677:712  OwnerChanged(owner, nominatedOwner) */\n      0xb532073b38c83145e3e5135377a08bf9aab55bc0fd7c1179cd4fb995d2a5159c\n        /* \"contracts/Owned.sol\":690:695  owner */\n      0x00\n      dup1\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Owned.sol\":697:711  nominatedOwner */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Owned.sol\":677:712  OwnerChanged(owner, nominatedOwner) */\n      mload(0x40)\n      dup1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/Owned.sol\":731:745  nominatedOwner */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Owned.sol\":723:728  owner */\n      0x00\n      dup1\n        /* \"contracts/Owned.sol\":723:745  owner = nominatedOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Owned.sol\":781:782  0 */\n      0x00\n        /* \"contracts/Owned.sol\":756:770  nominatedOwner */\n      0x01\n      0x00\n        /* \"contracts/Owned.sol\":756:783  nominatedOwner = address(0) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Owned.sol\":520:791  function acceptOwnership() external {\r... */\n      jump\t// out\n        /* \"contracts/Owned.sol\":113:133  address public owner */\n    tag_15:\n      0x00\n      dup1\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/Owned.sol\":869:1002  function _onlyOwner() private view {\r... */\n    tag_18:\n        /* \"contracts/Owned.sol\":937:942  owner */\n      0x00\n      dup1\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Owned.sol\":923:942  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Owned.sol\":923:933  msg.sender */\n      caller\n        /* \"contracts/Owned.sol\":923:942  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/Owned.sol\":915:994  require(msg.sender == owner, \"Only the contract owner may perform this action\") */\n      tag_23\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x2f\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_873d2051b76e0142b287297afdfc273bf1ab5c24ee229ed4ef117f1ff0679a4a\n      0x2f\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_23:\n        /* \"contracts/Owned.sol\":869:1002  function _onlyOwner() private view {\r... */\n      jump\t// out\n    stop\n    data_1149e36cd24095bebc9341ef03810e0e2a00039190624df6f2d7934141e2233b 596f75206d757374206265206e6f6d696e61746564206265666f726520796f752063616e20616363657074206f776e657273686970\n    data_873d2051b76e0142b287297afdfc273bf1ab5c24ee229ed4ef117f1ff0679a4a 4f6e6c792074686520636f6e7472616374206f776e6572206d617920706572666f726d207468697320616374696f6e\n\n    auxdata: 0xa265627a7a7231582029ea44fce8e117a7fc5f4a19f7073e793d653db35258dc4e26a6c174b456300d64736f6c63430005100032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506040516107623803806107628339818101604052602081101561003357600080fd5b8101908080519060200190929190505050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156100e7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260198152602001807f4f776e657220616464726573732063616e6e6f7420626520300000000000000081525060200191505060405180910390fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fb532073b38c83145e3e5135377a08bf9aab55bc0fd7c1179cd4fb995d2a5159c600082604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390a150610593806101cf6000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80631627540c1461005157806353a47bb71461009557806379ba5097146100df5780638da5cb5b146100e9575b600080fd5b6100936004803603602081101561006757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610133565b005b61009d6101e2565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6100e7610208565b005b6100f161042e565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61013b610453565b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f906a1c6bd7e3091ea86693dd029a831c19049ce77f1dce2ce0bab1cacbabce2281604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a150565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146102ae576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260358152602001806104fb6035913960400191505060405180910390fd5b7fb532073b38c83145e3e5135377a08bf9aab55bc0fd7c1179cd4fb995d2a5159c6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390a1600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146104f8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602f815260200180610530602f913960400191505060405180910390fd5b56fe596f75206d757374206265206e6f6d696e61746564206265666f726520796f752063616e20616363657074206f776e6572736869704f6e6c792074686520636f6e7472616374206f776e6572206d617920706572666f726d207468697320616374696f6ea265627a7a7231582029ea44fce8e117a7fc5f4a19f7073e793d653db35258dc4e26a6c174b456300d64736f6c63430005100032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x762 CODESIZE SUB DUP1 PUSH2 0x762 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x33 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xE7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x19 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E657220616464726573732063616E6E6F74206265203000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0xB532073B38C83145E3E5135377A08BF9AAB55BC0FD7C1179CD4FB995D2A5159C PUSH1 0x0 DUP3 PUSH1 0x40 MLOAD DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP PUSH2 0x593 DUP1 PUSH2 0x1CF PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1627540C EQ PUSH2 0x51 JUMPI DUP1 PUSH4 0x53A47BB7 EQ PUSH2 0x95 JUMPI DUP1 PUSH4 0x79BA5097 EQ PUSH2 0xDF JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xE9 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x93 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x67 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x133 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x9D PUSH2 0x1E2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE7 PUSH2 0x208 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xF1 PUSH2 0x42E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13B PUSH2 0x453 JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0x906A1C6BD7E3091EA86693DD029A831C19049CE77F1DCE2CE0BAB1CACBABCE22 DUP2 PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2AE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x35 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x4FB PUSH1 0x35 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0xB532073B38C83145E3E5135377A08BF9AAB55BC0FD7C1179CD4FB995D2A5159C PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x40 MLOAD DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x4F8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2F DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x530 PUSH1 0x2F SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP INVALID MSIZE PUSH16 0x75206D757374206265206E6F6D696E61 PUSH21 0x6564206265666F726520796F752063616E20616363 PUSH6 0x7074206F776E PUSH6 0x72736869704F PUSH15 0x6C792074686520636F6E7472616374 KECCAK256 PUSH16 0x776E6572206D617920706572666F726D KECCAK256 PUSH21 0x68697320616374696F6EA265627A7A7231582029EA DIFFICULTY 0xFC 0xE8 0xE1 OR 0xA7 0xFC 0x5F 0x4A NOT 0xF7 SMOD RETURNDATACOPY PUSH26 0x3D653DB35258DC4E26A6C174B456300D64736F6C634300051000 ORIGIN ",
							"sourceMap": "91:1022:0:-;;;178:185;8:9:-1;5:2;;;30:1;27;20:12;5:2;178:185:0;;;;;;;;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;178:185:0;;;;;;;;;;;;;;;;250:1;232:20;;:6;:20;;;;224:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;301:6;293:5;;:14;;;;;;;;;;;;;;;;;;323:32;344:1;348:6;323:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;178:185;91:1022;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061004c5760003560e01c80631627540c1461005157806353a47bb71461009557806379ba5097146100df5780638da5cb5b146100e9575b600080fd5b6100936004803603602081101561006757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610133565b005b61009d6101e2565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6100e7610208565b005b6100f161042e565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61013b610453565b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f906a1c6bd7e3091ea86693dd029a831c19049ce77f1dce2ce0bab1cacbabce2281604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a150565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146102ae576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260358152602001806104fb6035913960400191505060405180910390fd5b7fb532073b38c83145e3e5135377a08bf9aab55bc0fd7c1179cd4fb995d2a5159c6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390a1600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146104f8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602f815260200180610530602f913960400191505060405180910390fd5b56fe596f75206d757374206265206e6f6d696e61746564206265666f726520796f752063616e20616363657074206f776e6572736869704f6e6c792074686520636f6e7472616374206f776e6572206d617920706572666f726d207468697320616374696f6ea265627a7a7231582029ea44fce8e117a7fc5f4a19f7073e793d653db35258dc4e26a6c174b456300d64736f6c63430005100032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1627540C EQ PUSH2 0x51 JUMPI DUP1 PUSH4 0x53A47BB7 EQ PUSH2 0x95 JUMPI DUP1 PUSH4 0x79BA5097 EQ PUSH2 0xDF JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xE9 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x93 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x67 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x133 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x9D PUSH2 0x1E2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE7 PUSH2 0x208 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xF1 PUSH2 0x42E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13B PUSH2 0x453 JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0x906A1C6BD7E3091EA86693DD029A831C19049CE77F1DCE2CE0BAB1CACBABCE22 DUP2 PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2AE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x35 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x4FB PUSH1 0x35 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0xB532073B38C83145E3E5135377A08BF9AAB55BC0FD7C1179CD4FB995D2A5159C PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x40 MLOAD DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x4F8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2F DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x530 PUSH1 0x2F SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP INVALID MSIZE PUSH16 0x75206D757374206265206E6F6D696E61 PUSH21 0x6564206265666F726520796F752063616E20616363 PUSH6 0x7074206F776E PUSH6 0x72736869704F PUSH15 0x6C792074686520636F6E7472616374 KECCAK256 PUSH16 0x776E6572206D617920706572666F726D KECCAK256 PUSH21 0x68697320616374696F6EA265627A7A7231582029EA DIFFICULTY 0xFC 0xE8 0xE1 OR 0xA7 0xFC 0x5F 0x4A NOT 0xF7 SMOD RETURNDATACOPY PUSH26 0x3D653DB35258DC4E26A6C174B456300D64736F6C634300051000 ORIGIN ",
							"sourceMap": "91:1022:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;91:1022:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;371:141;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;371:141:0;;;;;;;;;;;;;;;;;;;:::i;:::-;;140:29;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;520:271;;;:::i;:::-;;113:20;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;371:141;829:12;:10;:12::i;:::-;460:6;443:14;;:23;;;;;;;;;;;;;;;;;;482:22;497:6;482:22;;;;;;;;;;;;;;;;;;;;;;371:141;:::o;140:29::-;;;;;;;;;;;;;:::o;520:271::-;589:14;;;;;;;;;;;575:28;;:10;:28;;;567:94;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;677:35;690:5;;;;;;;;;;;697:14;;;;;;;;;;;677:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;731:14;;;;;;;;;;;723:5;;:22;;;;;;;;;;;;;;;;;;781:1;756:14;;:27;;;;;;;;;;;;;;;;;;520:271::o;113:20::-;;;;;;;;;;;;;:::o;869:133::-;937:5;;;;;;;;;;;923:19;;:10;:19;;;915:79;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;869:133::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "285400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"acceptOwnership()": "infinite",
								"nominateNewOwner(address)": "infinite",
								"nominatedOwner()": "1053",
								"owner()": "1097"
							},
							"internal": {
								"_onlyOwner()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 91,
									"end": 1113,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 91,
									"end": 1113,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 91,
									"end": 1113,
									"name": "MSTORE"
								},
								{
									"begin": 178,
									"end": 363,
									"name": "CALLVALUE"
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": 178,
									"end": 363,
									"name": "POP"
								},
								{
									"begin": 178,
									"end": 363,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 178,
									"end": 363,
									"name": "MLOAD"
								},
								{
									"begin": 178,
									"end": 363,
									"name": "PUSHSIZE"
								},
								{
									"begin": 178,
									"end": 363,
									"name": "CODESIZE"
								},
								{
									"begin": 178,
									"end": 363,
									"name": "SUB"
								},
								{
									"begin": 178,
									"end": 363,
									"name": "DUP1"
								},
								{
									"begin": 178,
									"end": 363,
									"name": "PUSHSIZE"
								},
								{
									"begin": 178,
									"end": 363,
									"name": "DUP4"
								},
								{
									"begin": 178,
									"end": 363,
									"name": "CODECOPY"
								},
								{
									"begin": 178,
									"end": 363,
									"name": "DUP2"
								},
								{
									"begin": 178,
									"end": 363,
									"name": "DUP2"
								},
								{
									"begin": 178,
									"end": 363,
									"name": "ADD"
								},
								{
									"begin": 178,
									"end": 363,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 178,
									"end": 363,
									"name": "MSTORE"
								},
								{
									"begin": 13,
									"end": 15,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 8,
									"end": 11,
									"name": "DUP2"
								},
								{
									"begin": 5,
									"end": 16,
									"name": "LT"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "ISZERO"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "PUSH [tag]",
									"value": "2"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "JUMPI"
								},
								{
									"begin": 29,
									"end": 30,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 26,
									"end": 27,
									"name": "DUP1"
								},
								{
									"begin": 19,
									"end": 31,
									"name": "REVERT"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "tag",
									"value": "2"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "JUMPDEST"
								},
								{
									"begin": 178,
									"end": 363,
									"name": "DUP2"
								},
								{
									"begin": 178,
									"end": 363,
									"name": "ADD"
								},
								{
									"begin": 178,
									"end": 363,
									"name": "SWAP1"
								},
								{
									"begin": 178,
									"end": 363,
									"name": "DUP1"
								},
								{
									"begin": 178,
									"end": 363,
									"name": "DUP1"
								},
								{
									"begin": 178,
									"end": 363,
									"name": "MLOAD"
								},
								{
									"begin": 178,
									"end": 363,
									"name": "SWAP1"
								},
								{
									"begin": 178,
									"end": 363,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 178,
									"end": 363,
									"name": "ADD"
								},
								{
									"begin": 178,
									"end": 363,
									"name": "SWAP1"
								},
								{
									"begin": 178,
									"end": 363,
									"name": "SWAP3"
								},
								{
									"begin": 178,
									"end": 363,
									"name": "SWAP2"
								},
								{
									"begin": 178,
									"end": 363,
									"name": "SWAP1"
								},
								{
									"begin": 178,
									"end": 363,
									"name": "POP"
								},
								{
									"begin": 178,
									"end": 363,
									"name": "POP"
								},
								{
									"begin": 178,
									"end": 363,
									"name": "POP"
								},
								{
									"begin": 250,
									"end": 251,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 232,
									"end": 252,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 232,
									"end": 252,
									"name": "AND"
								},
								{
									"begin": 232,
									"end": 238,
									"name": "DUP2"
								},
								{
									"begin": 232,
									"end": 252,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 232,
									"end": 252,
									"name": "AND"
								},
								{
									"begin": 232,
									"end": 252,
									"name": "EQ"
								},
								{
									"begin": 232,
									"end": 252,
									"name": "ISZERO"
								},
								{
									"begin": 224,
									"end": 282,
									"name": "PUSH [tag]",
									"value": "5"
								},
								{
									"begin": 224,
									"end": 282,
									"name": "JUMPI"
								},
								{
									"begin": 224,
									"end": 282,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 224,
									"end": 282,
									"name": "MLOAD"
								},
								{
									"begin": 224,
									"end": 282,
									"name": "PUSH",
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 224,
									"end": 282,
									"name": "DUP2"
								},
								{
									"begin": 224,
									"end": 282,
									"name": "MSTORE"
								},
								{
									"begin": 224,
									"end": 282,
									"name": "PUSH",
									"value": "4"
								},
								{
									"begin": 224,
									"end": 282,
									"name": "ADD"
								},
								{
									"begin": 224,
									"end": 282,
									"name": "DUP1"
								},
								{
									"begin": 224,
									"end": 282,
									"name": "DUP1"
								},
								{
									"begin": 224,
									"end": 282,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 224,
									"end": 282,
									"name": "ADD"
								},
								{
									"begin": 224,
									"end": 282,
									"name": "DUP3"
								},
								{
									"begin": 224,
									"end": 282,
									"name": "DUP2"
								},
								{
									"begin": 224,
									"end": 282,
									"name": "SUB"
								},
								{
									"begin": 224,
									"end": 282,
									"name": "DUP3"
								},
								{
									"begin": 224,
									"end": 282,
									"name": "MSTORE"
								},
								{
									"begin": 224,
									"end": 282,
									"name": "PUSH",
									"value": "19"
								},
								{
									"begin": 224,
									"end": 282,
									"name": "DUP2"
								},
								{
									"begin": 224,
									"end": 282,
									"name": "MSTORE"
								},
								{
									"begin": 224,
									"end": 282,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 224,
									"end": 282,
									"name": "ADD"
								},
								{
									"begin": 224,
									"end": 282,
									"name": "DUP1"
								},
								{
									"begin": 224,
									"end": 282,
									"name": "PUSH",
									"value": "4F776E657220616464726573732063616E6E6F74206265203000000000000000"
								},
								{
									"begin": 224,
									"end": 282,
									"name": "DUP2"
								},
								{
									"begin": 224,
									"end": 282,
									"name": "MSTORE"
								},
								{
									"begin": 224,
									"end": 282,
									"name": "POP"
								},
								{
									"begin": 224,
									"end": 282,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 224,
									"end": 282,
									"name": "ADD"
								},
								{
									"begin": 224,
									"end": 282,
									"name": "SWAP2"
								},
								{
									"begin": 224,
									"end": 282,
									"name": "POP"
								},
								{
									"begin": 224,
									"end": 282,
									"name": "POP"
								},
								{
									"begin": 224,
									"end": 282,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 224,
									"end": 282,
									"name": "MLOAD"
								},
								{
									"begin": 224,
									"end": 282,
									"name": "DUP1"
								},
								{
									"begin": 224,
									"end": 282,
									"name": "SWAP2"
								},
								{
									"begin": 224,
									"end": 282,
									"name": "SUB"
								},
								{
									"begin": 224,
									"end": 282,
									"name": "SWAP1"
								},
								{
									"begin": 224,
									"end": 282,
									"name": "REVERT"
								},
								{
									"begin": 224,
									"end": 282,
									"name": "tag",
									"value": "5"
								},
								{
									"begin": 224,
									"end": 282,
									"name": "JUMPDEST"
								},
								{
									"begin": 301,
									"end": 307,
									"name": "DUP1"
								},
								{
									"begin": 293,
									"end": 298,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 293,
									"end": 298,
									"name": "DUP1"
								},
								{
									"begin": 293,
									"end": 307,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 293,
									"end": 307,
									"name": "EXP"
								},
								{
									"begin": 293,
									"end": 307,
									"name": "DUP2"
								},
								{
									"begin": 293,
									"end": 307,
									"name": "SLOAD"
								},
								{
									"begin": 293,
									"end": 307,
									"name": "DUP2"
								},
								{
									"begin": 293,
									"end": 307,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 293,
									"end": 307,
									"name": "MUL"
								},
								{
									"begin": 293,
									"end": 307,
									"name": "NOT"
								},
								{
									"begin": 293,
									"end": 307,
									"name": "AND"
								},
								{
									"begin": 293,
									"end": 307,
									"name": "SWAP1"
								},
								{
									"begin": 293,
									"end": 307,
									"name": "DUP4"
								},
								{
									"begin": 293,
									"end": 307,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 293,
									"end": 307,
									"name": "AND"
								},
								{
									"begin": 293,
									"end": 307,
									"name": "MUL"
								},
								{
									"begin": 293,
									"end": 307,
									"name": "OR"
								},
								{
									"begin": 293,
									"end": 307,
									"name": "SWAP1"
								},
								{
									"begin": 293,
									"end": 307,
									"name": "SSTORE"
								},
								{
									"begin": 293,
									"end": 307,
									"name": "POP"
								},
								{
									"begin": 323,
									"end": 355,
									"name": "PUSH",
									"value": "B532073B38C83145E3E5135377A08BF9AAB55BC0FD7C1179CD4FB995D2A5159C"
								},
								{
									"begin": 344,
									"end": 345,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 348,
									"end": 354,
									"name": "DUP3"
								},
								{
									"begin": 323,
									"end": 355,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 323,
									"end": 355,
									"name": "MLOAD"
								},
								{
									"begin": 323,
									"end": 355,
									"name": "DUP1"
								},
								{
									"begin": 323,
									"end": 355,
									"name": "DUP4"
								},
								{
									"begin": 323,
									"end": 355,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 323,
									"end": 355,
									"name": "AND"
								},
								{
									"begin": 323,
									"end": 355,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 323,
									"end": 355,
									"name": "AND"
								},
								{
									"begin": 323,
									"end": 355,
									"name": "DUP2"
								},
								{
									"begin": 323,
									"end": 355,
									"name": "MSTORE"
								},
								{
									"begin": 323,
									"end": 355,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 323,
									"end": 355,
									"name": "ADD"
								},
								{
									"begin": 323,
									"end": 355,
									"name": "DUP3"
								},
								{
									"begin": 323,
									"end": 355,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 323,
									"end": 355,
									"name": "AND"
								},
								{
									"begin": 323,
									"end": 355,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 323,
									"end": 355,
									"name": "AND"
								},
								{
									"begin": 323,
									"end": 355,
									"name": "DUP2"
								},
								{
									"begin": 323,
									"end": 355,
									"name": "MSTORE"
								},
								{
									"begin": 323,
									"end": 355,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 323,
									"end": 355,
									"name": "ADD"
								},
								{
									"begin": 323,
									"end": 355,
									"name": "SWAP3"
								},
								{
									"begin": 323,
									"end": 355,
									"name": "POP"
								},
								{
									"begin": 323,
									"end": 355,
									"name": "POP"
								},
								{
									"begin": 323,
									"end": 355,
									"name": "POP"
								},
								{
									"begin": 323,
									"end": 355,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 323,
									"end": 355,
									"name": "MLOAD"
								},
								{
									"begin": 323,
									"end": 355,
									"name": "DUP1"
								},
								{
									"begin": 323,
									"end": 355,
									"name": "SWAP2"
								},
								{
									"begin": 323,
									"end": 355,
									"name": "SUB"
								},
								{
									"begin": 323,
									"end": 355,
									"name": "SWAP1"
								},
								{
									"begin": 323,
									"end": 355,
									"name": "LOG1"
								},
								{
									"begin": 178,
									"end": 363,
									"name": "POP"
								},
								{
									"begin": 91,
									"end": 1113,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 91,
									"end": 1113,
									"name": "DUP1"
								},
								{
									"begin": 91,
									"end": 1113,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 91,
									"end": 1113,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 91,
									"end": 1113,
									"name": "CODECOPY"
								},
								{
									"begin": 91,
									"end": 1113,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 91,
									"end": 1113,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a7231582029ea44fce8e117a7fc5f4a19f7073e793d653db35258dc4e26a6c174b456300d64736f6c63430005100032",
									".code": [
										{
											"begin": 91,
											"end": 1113,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 91,
											"end": 1113,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 91,
											"end": 1113,
											"name": "MSTORE"
										},
										{
											"begin": 91,
											"end": 1113,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 91,
											"end": 1113,
											"name": "POP"
										},
										{
											"begin": 91,
											"end": 1113,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 91,
											"end": 1113,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 91,
											"end": 1113,
											"name": "LT"
										},
										{
											"begin": 91,
											"end": 1113,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 91,
											"end": 1113,
											"name": "JUMPI"
										},
										{
											"begin": 91,
											"end": 1113,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 91,
											"end": 1113,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 91,
											"end": 1113,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 91,
											"end": 1113,
											"name": "SHR"
										},
										{
											"begin": 91,
											"end": 1113,
											"name": "DUP1"
										},
										{
											"begin": 91,
											"end": 1113,
											"name": "PUSH",
											"value": "1627540C"
										},
										{
											"begin": 91,
											"end": 1113,
											"name": "EQ"
										},
										{
											"begin": 91,
											"end": 1113,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 91,
											"end": 1113,
											"name": "JUMPI"
										},
										{
											"begin": 91,
											"end": 1113,
											"name": "DUP1"
										},
										{
											"begin": 91,
											"end": 1113,
											"name": "PUSH",
											"value": "53A47BB7"
										},
										{
											"begin": 91,
											"end": 1113,
											"name": "EQ"
										},
										{
											"begin": 91,
											"end": 1113,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 91,
											"end": 1113,
											"name": "JUMPI"
										},
										{
											"begin": 91,
											"end": 1113,
											"name": "DUP1"
										},
										{
											"begin": 91,
											"end": 1113,
											"name": "PUSH",
											"value": "79BA5097"
										},
										{
											"begin": 91,
											"end": 1113,
											"name": "EQ"
										},
										{
											"begin": 91,
											"end": 1113,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 91,
											"end": 1113,
											"name": "JUMPI"
										},
										{
											"begin": 91,
											"end": 1113,
											"name": "DUP1"
										},
										{
											"begin": 91,
											"end": 1113,
											"name": "PUSH",
											"value": "8DA5CB5B"
										},
										{
											"begin": 91,
											"end": 1113,
											"name": "EQ"
										},
										{
											"begin": 91,
											"end": 1113,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 91,
											"end": 1113,
											"name": "JUMPI"
										},
										{
											"begin": 91,
											"end": 1113,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 91,
											"end": 1113,
											"name": "JUMPDEST"
										},
										{
											"begin": 91,
											"end": 1113,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 91,
											"end": 1113,
											"name": "DUP1"
										},
										{
											"begin": 91,
											"end": 1113,
											"name": "REVERT"
										},
										{
											"begin": 371,
											"end": 512,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 371,
											"end": 512,
											"name": "JUMPDEST"
										},
										{
											"begin": 371,
											"end": 512,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 371,
											"end": 512,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 371,
											"end": 512,
											"name": "DUP1"
										},
										{
											"begin": 371,
											"end": 512,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 371,
											"end": 512,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 371,
											"end": 512,
											"name": "DUP2"
										},
										{
											"begin": 371,
											"end": 512,
											"name": "ADD"
										},
										{
											"begin": 371,
											"end": 512,
											"name": "SWAP1"
										},
										{
											"begin": 371,
											"end": 512,
											"name": "DUP1"
										},
										{
											"begin": 371,
											"end": 512,
											"name": "DUP1"
										},
										{
											"begin": 371,
											"end": 512,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 371,
											"end": 512,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 371,
											"end": 512,
											"name": "AND"
										},
										{
											"begin": 371,
											"end": 512,
											"name": "SWAP1"
										},
										{
											"begin": 371,
											"end": 512,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 371,
											"end": 512,
											"name": "ADD"
										},
										{
											"begin": 371,
											"end": 512,
											"name": "SWAP1"
										},
										{
											"begin": 371,
											"end": 512,
											"name": "SWAP3"
										},
										{
											"begin": 371,
											"end": 512,
											"name": "SWAP2"
										},
										{
											"begin": 371,
											"end": 512,
											"name": "SWAP1"
										},
										{
											"begin": 371,
											"end": 512,
											"name": "POP"
										},
										{
											"begin": 371,
											"end": 512,
											"name": "POP"
										},
										{
											"begin": 371,
											"end": 512,
											"name": "POP"
										},
										{
											"begin": 371,
											"end": 512,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 371,
											"end": 512,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 371,
											"end": 512,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 371,
											"end": 512,
											"name": "JUMPDEST"
										},
										{
											"begin": 371,
											"end": 512,
											"name": "STOP"
										},
										{
											"begin": 140,
											"end": 169,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 140,
											"end": 169,
											"name": "JUMPDEST"
										},
										{
											"begin": 140,
											"end": 169,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 140,
											"end": 169,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 140,
											"end": 169,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 140,
											"end": 169,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 140,
											"end": 169,
											"name": "JUMPDEST"
										},
										{
											"begin": 140,
											"end": 169,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 140,
											"end": 169,
											"name": "MLOAD"
										},
										{
											"begin": 140,
											"end": 169,
											"name": "DUP1"
										},
										{
											"begin": 140,
											"end": 169,
											"name": "DUP3"
										},
										{
											"begin": 140,
											"end": 169,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 140,
											"end": 169,
											"name": "AND"
										},
										{
											"begin": 140,
											"end": 169,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 140,
											"end": 169,
											"name": "AND"
										},
										{
											"begin": 140,
											"end": 169,
											"name": "DUP2"
										},
										{
											"begin": 140,
											"end": 169,
											"name": "MSTORE"
										},
										{
											"begin": 140,
											"end": 169,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 140,
											"end": 169,
											"name": "ADD"
										},
										{
											"begin": 140,
											"end": 169,
											"name": "SWAP2"
										},
										{
											"begin": 140,
											"end": 169,
											"name": "POP"
										},
										{
											"begin": 140,
											"end": 169,
											"name": "POP"
										},
										{
											"begin": 140,
											"end": 169,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 140,
											"end": 169,
											"name": "MLOAD"
										},
										{
											"begin": 140,
											"end": 169,
											"name": "DUP1"
										},
										{
											"begin": 140,
											"end": 169,
											"name": "SWAP2"
										},
										{
											"begin": 140,
											"end": 169,
											"name": "SUB"
										},
										{
											"begin": 140,
											"end": 169,
											"name": "SWAP1"
										},
										{
											"begin": 140,
											"end": 169,
											"name": "RETURN"
										},
										{
											"begin": 520,
											"end": 791,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 520,
											"end": 791,
											"name": "JUMPDEST"
										},
										{
											"begin": 520,
											"end": 791,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 520,
											"end": 791,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 520,
											"end": 791,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 520,
											"end": 791,
											"name": "tag",
											"value": "12"
										},
										{
											"begin": 520,
											"end": 791,
											"name": "JUMPDEST"
										},
										{
											"begin": 520,
											"end": 791,
											"name": "STOP"
										},
										{
											"begin": 113,
											"end": 133,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 113,
											"end": 133,
											"name": "JUMPDEST"
										},
										{
											"begin": 113,
											"end": 133,
											"name": "PUSH [tag]",
											"value": "14"
										},
										{
											"begin": 113,
											"end": 133,
											"name": "PUSH [tag]",
											"value": "15"
										},
										{
											"begin": 113,
											"end": 133,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 113,
											"end": 133,
											"name": "tag",
											"value": "14"
										},
										{
											"begin": 113,
											"end": 133,
											"name": "JUMPDEST"
										},
										{
											"begin": 113,
											"end": 133,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 113,
											"end": 133,
											"name": "MLOAD"
										},
										{
											"begin": 113,
											"end": 133,
											"name": "DUP1"
										},
										{
											"begin": 113,
											"end": 133,
											"name": "DUP3"
										},
										{
											"begin": 113,
											"end": 133,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 113,
											"end": 133,
											"name": "AND"
										},
										{
											"begin": 113,
											"end": 133,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 113,
											"end": 133,
											"name": "AND"
										},
										{
											"begin": 113,
											"end": 133,
											"name": "DUP2"
										},
										{
											"begin": 113,
											"end": 133,
											"name": "MSTORE"
										},
										{
											"begin": 113,
											"end": 133,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 113,
											"end": 133,
											"name": "ADD"
										},
										{
											"begin": 113,
											"end": 133,
											"name": "SWAP2"
										},
										{
											"begin": 113,
											"end": 133,
											"name": "POP"
										},
										{
											"begin": 113,
											"end": 133,
											"name": "POP"
										},
										{
											"begin": 113,
											"end": 133,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 113,
											"end": 133,
											"name": "MLOAD"
										},
										{
											"begin": 113,
											"end": 133,
											"name": "DUP1"
										},
										{
											"begin": 113,
											"end": 133,
											"name": "SWAP2"
										},
										{
											"begin": 113,
											"end": 133,
											"name": "SUB"
										},
										{
											"begin": 113,
											"end": 133,
											"name": "SWAP1"
										},
										{
											"begin": 113,
											"end": 133,
											"name": "RETURN"
										},
										{
											"begin": 371,
											"end": 512,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 371,
											"end": 512,
											"name": "JUMPDEST"
										},
										{
											"begin": 829,
											"end": 841,
											"name": "PUSH [tag]",
											"value": "17"
										},
										{
											"begin": 829,
											"end": 839,
											"name": "PUSH [tag]",
											"value": "18"
										},
										{
											"begin": 829,
											"end": 841,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 829,
											"end": 841,
											"name": "tag",
											"value": "17"
										},
										{
											"begin": 829,
											"end": 841,
											"name": "JUMPDEST"
										},
										{
											"begin": 460,
											"end": 466,
											"name": "DUP1"
										},
										{
											"begin": 443,
											"end": 457,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 443,
											"end": 457,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 443,
											"end": 466,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 443,
											"end": 466,
											"name": "EXP"
										},
										{
											"begin": 443,
											"end": 466,
											"name": "DUP2"
										},
										{
											"begin": 443,
											"end": 466,
											"name": "SLOAD"
										},
										{
											"begin": 443,
											"end": 466,
											"name": "DUP2"
										},
										{
											"begin": 443,
											"end": 466,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 443,
											"end": 466,
											"name": "MUL"
										},
										{
											"begin": 443,
											"end": 466,
											"name": "NOT"
										},
										{
											"begin": 443,
											"end": 466,
											"name": "AND"
										},
										{
											"begin": 443,
											"end": 466,
											"name": "SWAP1"
										},
										{
											"begin": 443,
											"end": 466,
											"name": "DUP4"
										},
										{
											"begin": 443,
											"end": 466,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 443,
											"end": 466,
											"name": "AND"
										},
										{
											"begin": 443,
											"end": 466,
											"name": "MUL"
										},
										{
											"begin": 443,
											"end": 466,
											"name": "OR"
										},
										{
											"begin": 443,
											"end": 466,
											"name": "SWAP1"
										},
										{
											"begin": 443,
											"end": 466,
											"name": "SSTORE"
										},
										{
											"begin": 443,
											"end": 466,
											"name": "POP"
										},
										{
											"begin": 482,
											"end": 504,
											"name": "PUSH",
											"value": "906A1C6BD7E3091EA86693DD029A831C19049CE77F1DCE2CE0BAB1CACBABCE22"
										},
										{
											"begin": 497,
											"end": 503,
											"name": "DUP2"
										},
										{
											"begin": 482,
											"end": 504,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 482,
											"end": 504,
											"name": "MLOAD"
										},
										{
											"begin": 482,
											"end": 504,
											"name": "DUP1"
										},
										{
											"begin": 482,
											"end": 504,
											"name": "DUP3"
										},
										{
											"begin": 482,
											"end": 504,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 482,
											"end": 504,
											"name": "AND"
										},
										{
											"begin": 482,
											"end": 504,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 482,
											"end": 504,
											"name": "AND"
										},
										{
											"begin": 482,
											"end": 504,
											"name": "DUP2"
										},
										{
											"begin": 482,
											"end": 504,
											"name": "MSTORE"
										},
										{
											"begin": 482,
											"end": 504,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 482,
											"end": 504,
											"name": "ADD"
										},
										{
											"begin": 482,
											"end": 504,
											"name": "SWAP2"
										},
										{
											"begin": 482,
											"end": 504,
											"name": "POP"
										},
										{
											"begin": 482,
											"end": 504,
											"name": "POP"
										},
										{
											"begin": 482,
											"end": 504,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 482,
											"end": 504,
											"name": "MLOAD"
										},
										{
											"begin": 482,
											"end": 504,
											"name": "DUP1"
										},
										{
											"begin": 482,
											"end": 504,
											"name": "SWAP2"
										},
										{
											"begin": 482,
											"end": 504,
											"name": "SUB"
										},
										{
											"begin": 482,
											"end": 504,
											"name": "SWAP1"
										},
										{
											"begin": 482,
											"end": 504,
											"name": "LOG1"
										},
										{
											"begin": 371,
											"end": 512,
											"name": "POP"
										},
										{
											"begin": 371,
											"end": 512,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 140,
											"end": 169,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 140,
											"end": 169,
											"name": "JUMPDEST"
										},
										{
											"begin": 140,
											"end": 169,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 140,
											"end": 169,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 140,
											"end": 169,
											"name": "SWAP1"
										},
										{
											"begin": 140,
											"end": 169,
											"name": "SLOAD"
										},
										{
											"begin": 140,
											"end": 169,
											"name": "SWAP1"
										},
										{
											"begin": 140,
											"end": 169,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 140,
											"end": 169,
											"name": "EXP"
										},
										{
											"begin": 140,
											"end": 169,
											"name": "SWAP1"
										},
										{
											"begin": 140,
											"end": 169,
											"name": "DIV"
										},
										{
											"begin": 140,
											"end": 169,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 140,
											"end": 169,
											"name": "AND"
										},
										{
											"begin": 140,
											"end": 169,
											"name": "DUP2"
										},
										{
											"begin": 140,
											"end": 169,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 520,
											"end": 791,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 520,
											"end": 791,
											"name": "JUMPDEST"
										},
										{
											"begin": 589,
											"end": 603,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 589,
											"end": 603,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 589,
											"end": 603,
											"name": "SWAP1"
										},
										{
											"begin": 589,
											"end": 603,
											"name": "SLOAD"
										},
										{
											"begin": 589,
											"end": 603,
											"name": "SWAP1"
										},
										{
											"begin": 589,
											"end": 603,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 589,
											"end": 603,
											"name": "EXP"
										},
										{
											"begin": 589,
											"end": 603,
											"name": "SWAP1"
										},
										{
											"begin": 589,
											"end": 603,
											"name": "DIV"
										},
										{
											"begin": 589,
											"end": 603,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 589,
											"end": 603,
											"name": "AND"
										},
										{
											"begin": 575,
											"end": 603,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 575,
											"end": 603,
											"name": "AND"
										},
										{
											"begin": 575,
											"end": 585,
											"name": "CALLER"
										},
										{
											"begin": 575,
											"end": 603,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 575,
											"end": 603,
											"name": "AND"
										},
										{
											"begin": 575,
											"end": 603,
											"name": "EQ"
										},
										{
											"begin": 567,
											"end": 661,
											"name": "PUSH [tag]",
											"value": "21"
										},
										{
											"begin": 567,
											"end": 661,
											"name": "JUMPI"
										},
										{
											"begin": 567,
											"end": 661,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 567,
											"end": 661,
											"name": "MLOAD"
										},
										{
											"begin": 567,
											"end": 661,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 567,
											"end": 661,
											"name": "DUP2"
										},
										{
											"begin": 567,
											"end": 661,
											"name": "MSTORE"
										},
										{
											"begin": 567,
											"end": 661,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 567,
											"end": 661,
											"name": "ADD"
										},
										{
											"begin": 567,
											"end": 661,
											"name": "DUP1"
										},
										{
											"begin": 567,
											"end": 661,
											"name": "DUP1"
										},
										{
											"begin": 567,
											"end": 661,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 567,
											"end": 661,
											"name": "ADD"
										},
										{
											"begin": 567,
											"end": 661,
											"name": "DUP3"
										},
										{
											"begin": 567,
											"end": 661,
											"name": "DUP2"
										},
										{
											"begin": 567,
											"end": 661,
											"name": "SUB"
										},
										{
											"begin": 567,
											"end": 661,
											"name": "DUP3"
										},
										{
											"begin": 567,
											"end": 661,
											"name": "MSTORE"
										},
										{
											"begin": 567,
											"end": 661,
											"name": "PUSH",
											"value": "35"
										},
										{
											"begin": 567,
											"end": 661,
											"name": "DUP2"
										},
										{
											"begin": 567,
											"end": 661,
											"name": "MSTORE"
										},
										{
											"begin": 567,
											"end": 661,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 567,
											"end": 661,
											"name": "ADD"
										},
										{
											"begin": 567,
											"end": 661,
											"name": "DUP1"
										},
										{
											"begin": 567,
											"end": 661,
											"name": "PUSH data",
											"value": "1149E36CD24095BEBC9341EF03810E0E2A00039190624DF6F2D7934141E2233B"
										},
										{
											"begin": 567,
											"end": 661,
											"name": "PUSH",
											"value": "35"
										},
										{
											"begin": 567,
											"end": 661,
											"name": "SWAP2"
										},
										{
											"begin": 567,
											"end": 661,
											"name": "CODECOPY"
										},
										{
											"begin": 567,
											"end": 661,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 567,
											"end": 661,
											"name": "ADD"
										},
										{
											"begin": 567,
											"end": 661,
											"name": "SWAP2"
										},
										{
											"begin": 567,
											"end": 661,
											"name": "POP"
										},
										{
											"begin": 567,
											"end": 661,
											"name": "POP"
										},
										{
											"begin": 567,
											"end": 661,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 567,
											"end": 661,
											"name": "MLOAD"
										},
										{
											"begin": 567,
											"end": 661,
											"name": "DUP1"
										},
										{
											"begin": 567,
											"end": 661,
											"name": "SWAP2"
										},
										{
											"begin": 567,
											"end": 661,
											"name": "SUB"
										},
										{
											"begin": 567,
											"end": 661,
											"name": "SWAP1"
										},
										{
											"begin": 567,
											"end": 661,
											"name": "REVERT"
										},
										{
											"begin": 567,
											"end": 661,
											"name": "tag",
											"value": "21"
										},
										{
											"begin": 567,
											"end": 661,
											"name": "JUMPDEST"
										},
										{
											"begin": 677,
											"end": 712,
											"name": "PUSH",
											"value": "B532073B38C83145E3E5135377A08BF9AAB55BC0FD7C1179CD4FB995D2A5159C"
										},
										{
											"begin": 690,
											"end": 695,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 690,
											"end": 695,
											"name": "DUP1"
										},
										{
											"begin": 690,
											"end": 695,
											"name": "SWAP1"
										},
										{
											"begin": 690,
											"end": 695,
											"name": "SLOAD"
										},
										{
											"begin": 690,
											"end": 695,
											"name": "SWAP1"
										},
										{
											"begin": 690,
											"end": 695,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 690,
											"end": 695,
											"name": "EXP"
										},
										{
											"begin": 690,
											"end": 695,
											"name": "SWAP1"
										},
										{
											"begin": 690,
											"end": 695,
											"name": "DIV"
										},
										{
											"begin": 690,
											"end": 695,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 690,
											"end": 695,
											"name": "AND"
										},
										{
											"begin": 697,
											"end": 711,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 697,
											"end": 711,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 697,
											"end": 711,
											"name": "SWAP1"
										},
										{
											"begin": 697,
											"end": 711,
											"name": "SLOAD"
										},
										{
											"begin": 697,
											"end": 711,
											"name": "SWAP1"
										},
										{
											"begin": 697,
											"end": 711,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 697,
											"end": 711,
											"name": "EXP"
										},
										{
											"begin": 697,
											"end": 711,
											"name": "SWAP1"
										},
										{
											"begin": 697,
											"end": 711,
											"name": "DIV"
										},
										{
											"begin": 697,
											"end": 711,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 697,
											"end": 711,
											"name": "AND"
										},
										{
											"begin": 677,
											"end": 712,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 677,
											"end": 712,
											"name": "MLOAD"
										},
										{
											"begin": 677,
											"end": 712,
											"name": "DUP1"
										},
										{
											"begin": 677,
											"end": 712,
											"name": "DUP4"
										},
										{
											"begin": 677,
											"end": 712,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 677,
											"end": 712,
											"name": "AND"
										},
										{
											"begin": 677,
											"end": 712,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 677,
											"end": 712,
											"name": "AND"
										},
										{
											"begin": 677,
											"end": 712,
											"name": "DUP2"
										},
										{
											"begin": 677,
											"end": 712,
											"name": "MSTORE"
										},
										{
											"begin": 677,
											"end": 712,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 677,
											"end": 712,
											"name": "ADD"
										},
										{
											"begin": 677,
											"end": 712,
											"name": "DUP3"
										},
										{
											"begin": 677,
											"end": 712,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 677,
											"end": 712,
											"name": "AND"
										},
										{
											"begin": 677,
											"end": 712,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 677,
											"end": 712,
											"name": "AND"
										},
										{
											"begin": 677,
											"end": 712,
											"name": "DUP2"
										},
										{
											"begin": 677,
											"end": 712,
											"name": "MSTORE"
										},
										{
											"begin": 677,
											"end": 712,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 677,
											"end": 712,
											"name": "ADD"
										},
										{
											"begin": 677,
											"end": 712,
											"name": "SWAP3"
										},
										{
											"begin": 677,
											"end": 712,
											"name": "POP"
										},
										{
											"begin": 677,
											"end": 712,
											"name": "POP"
										},
										{
											"begin": 677,
											"end": 712,
											"name": "POP"
										},
										{
											"begin": 677,
											"end": 712,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 677,
											"end": 712,
											"name": "MLOAD"
										},
										{
											"begin": 677,
											"end": 712,
											"name": "DUP1"
										},
										{
											"begin": 677,
											"end": 712,
											"name": "SWAP2"
										},
										{
											"begin": 677,
											"end": 712,
											"name": "SUB"
										},
										{
											"begin": 677,
											"end": 712,
											"name": "SWAP1"
										},
										{
											"begin": 677,
											"end": 712,
											"name": "LOG1"
										},
										{
											"begin": 731,
											"end": 745,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 731,
											"end": 745,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 731,
											"end": 745,
											"name": "SWAP1"
										},
										{
											"begin": 731,
											"end": 745,
											"name": "SLOAD"
										},
										{
											"begin": 731,
											"end": 745,
											"name": "SWAP1"
										},
										{
											"begin": 731,
											"end": 745,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 731,
											"end": 745,
											"name": "EXP"
										},
										{
											"begin": 731,
											"end": 745,
											"name": "SWAP1"
										},
										{
											"begin": 731,
											"end": 745,
											"name": "DIV"
										},
										{
											"begin": 731,
											"end": 745,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 731,
											"end": 745,
											"name": "AND"
										},
										{
											"begin": 723,
											"end": 728,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 723,
											"end": 728,
											"name": "DUP1"
										},
										{
											"begin": 723,
											"end": 745,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 723,
											"end": 745,
											"name": "EXP"
										},
										{
											"begin": 723,
											"end": 745,
											"name": "DUP2"
										},
										{
											"begin": 723,
											"end": 745,
											"name": "SLOAD"
										},
										{
											"begin": 723,
											"end": 745,
											"name": "DUP2"
										},
										{
											"begin": 723,
											"end": 745,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 723,
											"end": 745,
											"name": "MUL"
										},
										{
											"begin": 723,
											"end": 745,
											"name": "NOT"
										},
										{
											"begin": 723,
											"end": 745,
											"name": "AND"
										},
										{
											"begin": 723,
											"end": 745,
											"name": "SWAP1"
										},
										{
											"begin": 723,
											"end": 745,
											"name": "DUP4"
										},
										{
											"begin": 723,
											"end": 745,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 723,
											"end": 745,
											"name": "AND"
										},
										{
											"begin": 723,
											"end": 745,
											"name": "MUL"
										},
										{
											"begin": 723,
											"end": 745,
											"name": "OR"
										},
										{
											"begin": 723,
											"end": 745,
											"name": "SWAP1"
										},
										{
											"begin": 723,
											"end": 745,
											"name": "SSTORE"
										},
										{
											"begin": 723,
											"end": 745,
											"name": "POP"
										},
										{
											"begin": 781,
											"end": 782,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 756,
											"end": 770,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 756,
											"end": 770,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 756,
											"end": 783,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 756,
											"end": 783,
											"name": "EXP"
										},
										{
											"begin": 756,
											"end": 783,
											"name": "DUP2"
										},
										{
											"begin": 756,
											"end": 783,
											"name": "SLOAD"
										},
										{
											"begin": 756,
											"end": 783,
											"name": "DUP2"
										},
										{
											"begin": 756,
											"end": 783,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 756,
											"end": 783,
											"name": "MUL"
										},
										{
											"begin": 756,
											"end": 783,
											"name": "NOT"
										},
										{
											"begin": 756,
											"end": 783,
											"name": "AND"
										},
										{
											"begin": 756,
											"end": 783,
											"name": "SWAP1"
										},
										{
											"begin": 756,
											"end": 783,
											"name": "DUP4"
										},
										{
											"begin": 756,
											"end": 783,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 756,
											"end": 783,
											"name": "AND"
										},
										{
											"begin": 756,
											"end": 783,
											"name": "MUL"
										},
										{
											"begin": 756,
											"end": 783,
											"name": "OR"
										},
										{
											"begin": 756,
											"end": 783,
											"name": "SWAP1"
										},
										{
											"begin": 756,
											"end": 783,
											"name": "SSTORE"
										},
										{
											"begin": 756,
											"end": 783,
											"name": "POP"
										},
										{
											"begin": 520,
											"end": 791,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 113,
											"end": 133,
											"name": "tag",
											"value": "15"
										},
										{
											"begin": 113,
											"end": 133,
											"name": "JUMPDEST"
										},
										{
											"begin": 113,
											"end": 133,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 113,
											"end": 133,
											"name": "DUP1"
										},
										{
											"begin": 113,
											"end": 133,
											"name": "SWAP1"
										},
										{
											"begin": 113,
											"end": 133,
											"name": "SLOAD"
										},
										{
											"begin": 113,
											"end": 133,
											"name": "SWAP1"
										},
										{
											"begin": 113,
											"end": 133,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 113,
											"end": 133,
											"name": "EXP"
										},
										{
											"begin": 113,
											"end": 133,
											"name": "SWAP1"
										},
										{
											"begin": 113,
											"end": 133,
											"name": "DIV"
										},
										{
											"begin": 113,
											"end": 133,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 113,
											"end": 133,
											"name": "AND"
										},
										{
											"begin": 113,
											"end": 133,
											"name": "DUP2"
										},
										{
											"begin": 113,
											"end": 133,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 869,
											"end": 1002,
											"name": "tag",
											"value": "18"
										},
										{
											"begin": 869,
											"end": 1002,
											"name": "JUMPDEST"
										},
										{
											"begin": 937,
											"end": 942,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 937,
											"end": 942,
											"name": "DUP1"
										},
										{
											"begin": 937,
											"end": 942,
											"name": "SWAP1"
										},
										{
											"begin": 937,
											"end": 942,
											"name": "SLOAD"
										},
										{
											"begin": 937,
											"end": 942,
											"name": "SWAP1"
										},
										{
											"begin": 937,
											"end": 942,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 937,
											"end": 942,
											"name": "EXP"
										},
										{
											"begin": 937,
											"end": 942,
											"name": "SWAP1"
										},
										{
											"begin": 937,
											"end": 942,
											"name": "DIV"
										},
										{
											"begin": 937,
											"end": 942,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 937,
											"end": 942,
											"name": "AND"
										},
										{
											"begin": 923,
											"end": 942,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 923,
											"end": 942,
											"name": "AND"
										},
										{
											"begin": 923,
											"end": 933,
											"name": "CALLER"
										},
										{
											"begin": 923,
											"end": 942,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 923,
											"end": 942,
											"name": "AND"
										},
										{
											"begin": 923,
											"end": 942,
											"name": "EQ"
										},
										{
											"begin": 915,
											"end": 994,
											"name": "PUSH [tag]",
											"value": "23"
										},
										{
											"begin": 915,
											"end": 994,
											"name": "JUMPI"
										},
										{
											"begin": 915,
											"end": 994,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 915,
											"end": 994,
											"name": "MLOAD"
										},
										{
											"begin": 915,
											"end": 994,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 915,
											"end": 994,
											"name": "DUP2"
										},
										{
											"begin": 915,
											"end": 994,
											"name": "MSTORE"
										},
										{
											"begin": 915,
											"end": 994,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 915,
											"end": 994,
											"name": "ADD"
										},
										{
											"begin": 915,
											"end": 994,
											"name": "DUP1"
										},
										{
											"begin": 915,
											"end": 994,
											"name": "DUP1"
										},
										{
											"begin": 915,
											"end": 994,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 915,
											"end": 994,
											"name": "ADD"
										},
										{
											"begin": 915,
											"end": 994,
											"name": "DUP3"
										},
										{
											"begin": 915,
											"end": 994,
											"name": "DUP2"
										},
										{
											"begin": 915,
											"end": 994,
											"name": "SUB"
										},
										{
											"begin": 915,
											"end": 994,
											"name": "DUP3"
										},
										{
											"begin": 915,
											"end": 994,
											"name": "MSTORE"
										},
										{
											"begin": 915,
											"end": 994,
											"name": "PUSH",
											"value": "2F"
										},
										{
											"begin": 915,
											"end": 994,
											"name": "DUP2"
										},
										{
											"begin": 915,
											"end": 994,
											"name": "MSTORE"
										},
										{
											"begin": 915,
											"end": 994,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 915,
											"end": 994,
											"name": "ADD"
										},
										{
											"begin": 915,
											"end": 994,
											"name": "DUP1"
										},
										{
											"begin": 915,
											"end": 994,
											"name": "PUSH data",
											"value": "873D2051B76E0142B287297AFDFC273BF1AB5C24EE229ED4EF117F1FF0679A4A"
										},
										{
											"begin": 915,
											"end": 994,
											"name": "PUSH",
											"value": "2F"
										},
										{
											"begin": 915,
											"end": 994,
											"name": "SWAP2"
										},
										{
											"begin": 915,
											"end": 994,
											"name": "CODECOPY"
										},
										{
											"begin": 915,
											"end": 994,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 915,
											"end": 994,
											"name": "ADD"
										},
										{
											"begin": 915,
											"end": 994,
											"name": "SWAP2"
										},
										{
											"begin": 915,
											"end": 994,
											"name": "POP"
										},
										{
											"begin": 915,
											"end": 994,
											"name": "POP"
										},
										{
											"begin": 915,
											"end": 994,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 915,
											"end": 994,
											"name": "MLOAD"
										},
										{
											"begin": 915,
											"end": 994,
											"name": "DUP1"
										},
										{
											"begin": 915,
											"end": 994,
											"name": "SWAP2"
										},
										{
											"begin": 915,
											"end": 994,
											"name": "SUB"
										},
										{
											"begin": 915,
											"end": 994,
											"name": "SWAP1"
										},
										{
											"begin": 915,
											"end": 994,
											"name": "REVERT"
										},
										{
											"begin": 915,
											"end": 994,
											"name": "tag",
											"value": "23"
										},
										{
											"begin": 915,
											"end": 994,
											"name": "JUMPDEST"
										},
										{
											"begin": 869,
											"end": 1002,
											"name": "JUMP",
											"value": "[out]"
										}
									],
									".data": {
										"1149E36CD24095BEBC9341EF03810E0E2A00039190624DF6F2D7934141E2233B": "596f75206d757374206265206e6f6d696e61746564206265666f726520796f752063616e20616363657074206f776e657273686970",
										"873D2051B76E0142B287297AFDFC273BF1AB5C24EE229ED4EF117F1FF0679A4A": "4f6e6c792074686520636f6e7472616374206f776e6572206d617920706572666f726d207468697320616374696f6e"
									}
								}
							}
						},
						"methodIdentifiers": {
							"acceptOwnership()": "79ba5097",
							"nominateNewOwner(address)": "1627540c",
							"nominatedOwner()": "53a47bb7",
							"owner()": "8da5cb5b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldOwner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnerChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnerNominated\",\"type\":\"event\"},{\"constant\":false,\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"nominateNewOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"nominatedOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/Owned.sol\":\"Owned\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Owned.sol\":{\"keccak256\":\"0x62a6e5404c053fc1ec001aee4949691d44393d0b2f33ec81ff064b5603a16c37\",\"urls\":[\"bzz-raw://b1d3636df12de8bb56954159620a311ad5ef76d479777492ab95e4dfa873f5b3\",\"dweb:/ipfs/QmZCoz7YyQ7RMQ2nG7K3asn8c9EJecbcDi28PnCXRXWTG1\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 3,
								"contract": "contracts/Owned.sol:Owned",
								"label": "owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 5,
								"contract": "contracts/Owned.sol:Owned",
								"label": "nominatedOwner",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"methods": {}
					}
				}
			},
			"contracts/Pausable.sol": {
				"Pausable": {
					"abi": [
						{
							"inputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "oldOwner",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnerChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnerNominated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "bool",
									"name": "isPaused",
									"type": "bool"
								}
							],
							"name": "PauseChanged",
							"type": "event"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "acceptOwnership",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "lastPauseTime",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								}
							],
							"name": "nominateNewOwner",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "nominatedOwner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "bool",
									"name": "_paused",
									"type": "bool"
								}
							],
							"name": "setPaused",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {
							"setPaused(bool)": {
								"details": "Only the contract owner may call this."
							}
						}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"acceptOwnership()": "79ba5097",
							"lastPauseTime()": "91b4ded9",
							"nominateNewOwner(address)": "1627540c",
							"nominatedOwner()": "53a47bb7",
							"owner()": "8da5cb5b",
							"paused()": "5c975abb",
							"setPaused(bool)": "16c38b3c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldOwner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnerChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnerNominated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isPaused\",\"type\":\"bool\"}],\"name\":\"PauseChanged\",\"type\":\"event\"},{\"constant\":false,\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"lastPauseTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"nominateNewOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"nominatedOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_paused\",\"type\":\"bool\"}],\"name\":\"setPaused\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"setPaused(bool)\":{\"details\":\"Only the contract owner may call this.\"}}},\"userdoc\":{\"methods\":{\"setPaused(bool)\":{\"notice\":\"Change the paused state of the contract\"}}}},\"settings\":{\"compilationTarget\":{\"contracts/Pausable.sol\":\"Pausable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Owned.sol\":{\"keccak256\":\"0x62a6e5404c053fc1ec001aee4949691d44393d0b2f33ec81ff064b5603a16c37\",\"urls\":[\"bzz-raw://b1d3636df12de8bb56954159620a311ad5ef76d479777492ab95e4dfa873f5b3\",\"dweb:/ipfs/QmZCoz7YyQ7RMQ2nG7K3asn8c9EJecbcDi28PnCXRXWTG1\"]},\"contracts/Pausable.sol\":{\"keccak256\":\"0x75c6ae735d6a26cd363d0ba8e62757f68c8b46ee840142da5cefec5e2a123ef4\",\"urls\":[\"bzz-raw://b1cea5eb60be0c7c9a09d25087efb8e2784e06d38c56074cb3b78f4d939c0aa5\",\"dweb:/ipfs/QmeMQCohmxnKWUn7CB1Lv6MRKEhMcABxZDDvFPNn6no7SC\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 3,
								"contract": "contracts/Pausable.sol:Pausable",
								"label": "owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 5,
								"contract": "contracts/Pausable.sol:Pausable",
								"label": "nominatedOwner",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							},
							{
								"astId": 111,
								"contract": "contracts/Pausable.sol:Pausable",
								"label": "lastPauseTime",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 113,
								"contract": "contracts/Pausable.sol:Pausable",
								"label": "paused",
								"offset": 0,
								"slot": "3",
								"type": "t_bool"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"methods": {
							"setPaused(bool)": {
								"notice": "Change the paused state of the contract"
							}
						}
					}
				}
			},
			"contracts/RewardsDistributionRecipient.sol": {
				"RewardsDistributionRecipient": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "oldOwner",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnerChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnerNominated",
							"type": "event"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "acceptOwnership",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								}
							],
							"name": "nominateNewOwner",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "nominatedOwner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "uint256",
									"name": "reward",
									"type": "uint256"
								}
							],
							"name": "notifyRewardAmount",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "rewardsDistribution",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "_rewardsDistribution",
									"type": "address"
								}
							],
							"name": "setRewardsDistribution",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"acceptOwnership()": "79ba5097",
							"nominateNewOwner(address)": "1627540c",
							"nominatedOwner()": "53a47bb7",
							"notifyRewardAmount(uint256)": "3c6b16ab",
							"owner()": "8da5cb5b",
							"rewardsDistribution()": "3fc6df6e",
							"setRewardsDistribution(address)": "19762143"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldOwner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnerChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnerNominated\",\"type\":\"event\"},{\"constant\":false,\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"nominateNewOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"nominatedOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"}],\"name\":\"notifyRewardAmount\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"rewardsDistribution\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_rewardsDistribution\",\"type\":\"address\"}],\"name\":\"setRewardsDistribution\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/RewardsDistributionRecipient.sol\":\"RewardsDistributionRecipient\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Owned.sol\":{\"keccak256\":\"0x62a6e5404c053fc1ec001aee4949691d44393d0b2f33ec81ff064b5603a16c37\",\"urls\":[\"bzz-raw://b1d3636df12de8bb56954159620a311ad5ef76d479777492ab95e4dfa873f5b3\",\"dweb:/ipfs/QmZCoz7YyQ7RMQ2nG7K3asn8c9EJecbcDi28PnCXRXWTG1\"]},\"contracts/RewardsDistributionRecipient.sol\":{\"keccak256\":\"0x4a8e63aaa5da0a64f3acc03c851389be53589d16cc9095d007ec9763538cc7a5\",\"urls\":[\"bzz-raw://675df347bcd37cc76495d486b05dcb71f83f903c08f72593473ea5bc02ff9555\",\"dweb:/ipfs/QmPS3PvvCwmBAJaWsNfgtcVxVpxby33tMFKiVwNW7JGKX4\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 3,
								"contract": "contracts/RewardsDistributionRecipient.sol:RewardsDistributionRecipient",
								"label": "owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 5,
								"contract": "contracts/RewardsDistributionRecipient.sol:RewardsDistributionRecipient",
								"label": "nominatedOwner",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							},
							{
								"astId": 177,
								"contract": "contracts/RewardsDistributionRecipient.sol:RewardsDistributionRecipient",
								"label": "rewardsDistribution",
								"offset": 0,
								"slot": "2",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"methods": {}
					}
				}
			},
			"contracts/StakingRewards.sol": {
				"StakingRewards": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_rewardsDistribution",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_rewardsToken",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_stakingToken",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "oldOwner",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnerChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnerNominated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "bool",
									"name": "isPaused",
									"type": "bool"
								}
							],
							"name": "PauseChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Recovered",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "reward",
									"type": "uint256"
								}
							],
							"name": "RewardAdded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "reward",
									"type": "uint256"
								}
							],
							"name": "RewardPaid",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "newDuration",
									"type": "uint256"
								}
							],
							"name": "RewardsDurationUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Staked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Withdrawn",
							"type": "event"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "acceptOwnership",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "earned",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "exit",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "getReward",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "getRewardForDuration",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "lastPauseTime",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "lastTimeRewardApplicable",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "lastUpdateTime",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								}
							],
							"name": "nominateNewOwner",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "nominatedOwner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "uint256",
									"name": "reward",
									"type": "uint256"
								}
							],
							"name": "notifyRewardAmount",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "periodFinish",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenAddress",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenAmount",
									"type": "uint256"
								}
							],
							"name": "recoverERC20",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "rewardPerToken",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "rewardPerTokenStored",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "rewardRate",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "rewards",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "rewardsDistribution",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "rewardsDuration",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "rewardsToken",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "bool",
									"name": "_paused",
									"type": "bool"
								}
							],
							"name": "setPaused",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "_rewardsDistribution",
									"type": "address"
								}
							],
							"name": "setRewardsDistribution",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_rewardsDuration",
									"type": "uint256"
								}
							],
							"name": "setRewardsDuration",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "stake",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "stakingToken",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "userRewardPerTokenPaid",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {
							"setPaused(bool)": {
								"details": "Only the contract owner may call this."
							}
						}
					},
					"evm": {
						"assembly": "    /* \"contracts/StakingRewards.sol\":532:6611  contract StakingRewards is IStakingRewards, RewardsDistributionRecipient, ReentrancyGuard, Pausable {\r... */\n  mstore(0x40, 0x80)\n    /* \"contracts/StakingRewards.sol\":854:855  0 */\n  0x00\n    /* \"contracts/StakingRewards.sol\":824:855  uint256 public periodFinish = 0 */\n  0x07\n  sstore\n    /* \"contracts/StakingRewards.sol\":890:891  0 */\n  0x00\n    /* \"contracts/StakingRewards.sol\":862:891  uint256 public rewardRate = 0 */\n  0x08\n  sstore\n    /* \"contracts/StakingRewards.sol\":931:937  7 days */\n  0x093a80\n    /* \"contracts/StakingRewards.sol\":898:937  uint256 public rewardsDuration = 7 days */\n  0x09\n  sstore\n    /* \"contracts/StakingRewards.sol\":1275:1598  constructor(\r... */\n  callvalue\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x00\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_1:\n    /* \"contracts/StakingRewards.sol\":1275:1598  constructor(\r... */\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n    /* \"--CODEGEN--\":13:16   */\n  0x80\n    /* \"--CODEGEN--\":8:11   */\n  dup2\n    /* \"--CODEGEN--\":5:17   */\n  lt\n    /* \"--CODEGEN--\":2:4   */\n  iszero\n  tag_2\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x00\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":2:4   */\ntag_2:\n    /* \"contracts/StakingRewards.sol\":1275:1598  constructor(\r... */\n  dup2\n  add\n  swap1\n  dup1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  swap3\n  swap2\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  swap3\n  swap2\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  swap3\n  swap2\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  swap3\n  swap2\n  swap1\n  pop\n  pop\n  pop\n    /* \"contracts/StakingRewards.sol\":1435:1441  _owner */\n  dup4\n    /* \"contracts/Owned.sol\":250:251  0 */\n  0x00\n    /* \"contracts/Owned.sol\":232:252  _owner != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/Owned.sol\":232:238  _owner */\n  dup2\n    /* \"contracts/Owned.sol\":232:252  _owner != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  eq\n  iszero\n    /* \"contracts/Owned.sol\":224:282  require(_owner != address(0), \"Owner address cannot be 0\") */\n  tag_8\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  dup1\n  dup1\n  0x20\n  add\n  dup3\n  dup2\n  sub\n  dup3\n  mstore\n  0x19\n  dup2\n  mstore\n  0x20\n  add\n  dup1\n  0x4f776e657220616464726573732063616e6e6f74206265203000000000000000\n  dup2\n  mstore\n  pop\n  0x20\n  add\n  swap2\n  pop\n  pop\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_8:\n    /* \"contracts/Owned.sol\":301:307  _owner */\n  dup1\n    /* \"contracts/Owned.sol\":293:298  owner */\n  0x00\n  dup1\n    /* \"contracts/Owned.sol\":293:307  owner = _owner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/Owned.sol\":323:355  OwnerChanged(address(0), _owner) */\n  0xb532073b38c83145e3e5135377a08bf9aab55bc0fd7c1179cd4fb995d2a5159c\n    /* \"contracts/Owned.sol\":344:345  0 */\n  0x00\n    /* \"contracts/Owned.sol\":348:354  _owner */\n  dup3\n    /* \"contracts/Owned.sol\":323:355  OwnerChanged(address(0), _owner) */\n  mload(0x40)\n  dup1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  dup3\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap3\n  pop\n  pop\n  pop\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log1\n    /* \"contracts/Owned.sol\":178:363  constructor(address _owner) public {\r... */\n  pop\n    /* \"openzeppelin-solidity-2.3.0/contracts/utils/ReentrancyGuard.sol\":905:906  1 */\n  0x01\n    /* \"openzeppelin-solidity-2.3.0/contracts/utils/ReentrancyGuard.sol\":889:902  _guardCounter */\n  0x03\n    /* \"openzeppelin-solidity-2.3.0/contracts/utils/ReentrancyGuard.sol\":889:906  _guardCounter = 1 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/Pausable.sol\":367:368  0 */\n  0x00\n    /* \"contracts/Pausable.sol\":350:369  owner != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/Pausable.sol\":350:355  owner */\n  0x00\n  dup1\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/Pausable.sol\":350:369  owner != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  eq\n  iszero\n    /* \"contracts/Pausable.sol\":342:391  require(owner != address(0), \"Owner must be set\") */\n  tag_11\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  dup1\n  dup1\n  0x20\n  add\n  dup3\n  dup2\n  sub\n  dup3\n  mstore\n  0x11\n  dup2\n  mstore\n  0x20\n  add\n  dup1\n  0x4f776e6572206d75737420626520736574000000000000000000000000000000\n  dup2\n  mstore\n  pop\n  0x20\n  add\n  swap2\n  pop\n  pop\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_11:\n    /* \"contracts/StakingRewards.sol\":1476:1489  _rewardsToken */\n  dup2\n    /* \"contracts/StakingRewards.sol\":1454:1466  rewardsToken */\n  0x05\n  0x01\n    /* \"contracts/StakingRewards.sol\":1454:1490  rewardsToken = IERC20(_rewardsToken) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/StakingRewards.sol\":1523:1536  _stakingToken */\n  dup1\n    /* \"contracts/StakingRewards.sol\":1501:1513  stakingToken */\n  0x06\n  0x00\n    /* \"contracts/StakingRewards.sol\":1501:1537  stakingToken = IERC20(_stakingToken) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/StakingRewards.sol\":1570:1590  _rewardsDistribution */\n  dup3\n    /* \"contracts/StakingRewards.sol\":1548:1567  rewardsDistribution */\n  0x02\n  0x00\n    /* \"contracts/StakingRewards.sol\":1548:1590  rewardsDistribution = _rewardsDistribution */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/StakingRewards.sol\":1275:1598  constructor(\r... */\n  pop\n  pop\n  pop\n  pop\n    /* \"contracts/StakingRewards.sol\":532:6611  contract StakingRewards is IStakingRewards, RewardsDistributionRecipient, ReentrancyGuard, Pausable {\r... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/StakingRewards.sol\":532:6611  contract StakingRewards is IStakingRewards, RewardsDistributionRecipient, ReentrancyGuard, Pausable {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_1\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_1:\n        /* \"contracts/StakingRewards.sol\":532:6611  contract StakingRewards is IStakingRewards, RewardsDistributionRecipient, ReentrancyGuard, Pausable {\r... */\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x72f702f3\n      gt\n      tag_34\n      jumpi\n      dup1\n      0xa694fc3a\n      gt\n      tag_35\n      jumpi\n      dup1\n      0xd1af0c7d\n      gt\n      tag_36\n      jumpi\n      dup1\n      0xd1af0c7d\n      eq\n      tag_30\n      jumpi\n      dup1\n      0xdf136d65\n      eq\n      tag_31\n      jumpi\n      dup1\n      0xe9fad8ee\n      eq\n      tag_32\n      jumpi\n      dup1\n      0xebe2b12b\n      eq\n      tag_33\n      jumpi\n      jump(tag_2)\n    tag_36:\n      dup1\n      0xa694fc3a\n      eq\n      tag_26\n      jumpi\n      dup1\n      0xc8f33c91\n      eq\n      tag_27\n      jumpi\n      dup1\n      0xcc1a378f\n      eq\n      tag_28\n      jumpi\n      dup1\n      0xcd3daf9d\n      eq\n      tag_29\n      jumpi\n      jump(tag_2)\n    tag_35:\n      dup1\n      0x8980f11f\n      gt\n      tag_37\n      jumpi\n      dup1\n      0x8980f11f\n      eq\n      tag_22\n      jumpi\n      dup1\n      0x8b876347\n      eq\n      tag_23\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_24\n      jumpi\n      dup1\n      0x91b4ded9\n      eq\n      tag_25\n      jumpi\n      jump(tag_2)\n    tag_37:\n      dup1\n      0x72f702f3\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x79ba5097\n      eq\n      tag_19\n      jumpi\n      dup1\n      0x7b0a47ee\n      eq\n      tag_20\n      jumpi\n      dup1\n      0x80faa57d\n      eq\n      tag_21\n      jumpi\n      jump(tag_2)\n    tag_34:\n      dup1\n      0x2e1a7d4d\n      gt\n      tag_38\n      jumpi\n      dup1\n      0x3fc6df6e\n      gt\n      tag_39\n      jumpi\n      dup1\n      0x3fc6df6e\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x53a47bb7\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x5c975abb\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_17\n      jumpi\n      jump(tag_2)\n    tag_39:\n      dup1\n      0x2e1a7d4d\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x386a9525\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x3c6b16ab\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x3d18b912\n      eq\n      tag_13\n      jumpi\n      jump(tag_2)\n    tag_38:\n      dup1\n      0x16c38b3c\n      gt\n      tag_40\n      jumpi\n      dup1\n      0x16c38b3c\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x19762143\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x1c1f78eb\n      eq\n      tag_9\n      jumpi\n      jump(tag_2)\n    tag_40:\n      dup1\n      0x8cc262\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x0700037d\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x1627540c\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/StakingRewards.sol\":2369:2567  function earned(address account) public view returns (uint256) {\r... */\n    tag_3:\n      tag_41\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_42\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_42:\n        /* \"contracts/StakingRewards.sol\":2369:2567  function earned(address account) public view returns (uint256) {\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_43\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/StakingRewards.sol\":1088:1130  mapping(address => uint256) public rewards */\n    tag_4:\n      tag_44\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_45\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_45:\n        /* \"contracts/StakingRewards.sol\":1088:1130  mapping(address => uint256) public rewards */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_46\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Owned.sol\":371:512  function nominateNewOwner(address _owner) external onlyOwner {\r... */\n    tag_5:\n      tag_47\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_48\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_48:\n        /* \"contracts/Owned.sol\":371:512  function nominateNewOwner(address _owner) external onlyOwner {\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_49\n      jump\t// in\n    tag_47:\n      stop\n        /* \"contracts/Pausable.sol\":615:1103  function setPaused(bool _paused) external onlyOwner {\r... */\n    tag_6:\n      tag_50\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_51\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_51:\n        /* \"contracts/Pausable.sol\":615:1103  function setPaused(bool _paused) external onlyOwner {\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      iszero\n      iszero\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_52\n      jump\t// in\n    tag_50:\n      stop\n        /* \"contracts/StakingRewards.sol\":1647:1740  function totalSupply() external view returns (uint256) {\r... */\n    tag_7:\n      tag_53\n      tag_54\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/RewardsDistributionRecipient.sol\":475:617  function setRewardsDistribution(address _rewardsDistribution) external onlyOwner {\r... */\n    tag_8:\n      tag_55\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_56\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_56:\n        /* \"contracts/RewardsDistributionRecipient.sol\":475:617  function setRewardsDistribution(address _rewardsDistribution) external onlyOwner {\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_57\n      jump\t// in\n    tag_55:\n      stop\n        /* \"contracts/StakingRewards.sol\":2575:2696  function getRewardForDuration() external view returns (uint256) {\r... */\n    tag_9:\n      tag_58\n      tag_59\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/StakingRewards.sol\":3145:3502  function withdraw(uint256 amount) public nonReentrant updateReward(msg.sender) {\r... */\n    tag_10:\n      tag_60\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_61\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_61:\n        /* \"contracts/StakingRewards.sol\":3145:3502  function withdraw(uint256 amount) public nonReentrant updateReward(msg.sender) {\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_62\n      jump\t// in\n    tag_60:\n      stop\n        /* \"contracts/StakingRewards.sol\":898:937  uint256 public rewardsDuration = 7 days */\n    tag_11:\n      tag_63\n      tag_64\n      jump\t// in\n    tag_63:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/StakingRewards.sol\":3986:5069  function notifyRewardAmount(uint256 reward) external onlyRewardsDistribution updateReward(address(0)) {\r... */\n    tag_12:\n      tag_65\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_66\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_66:\n        /* \"contracts/StakingRewards.sol\":3986:5069  function notifyRewardAmount(uint256 reward) external onlyRewardsDistribution updateReward(address(0)) {\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_67\n      jump\t// in\n    tag_65:\n      stop\n        /* \"contracts/StakingRewards.sol\":3510:3817  function getReward() public nonReentrant updateReward(msg.sender) {\r... */\n    tag_13:\n      tag_68\n      tag_69\n      jump\t// in\n    tag_68:\n      stop\n        /* \"contracts/RewardsDistributionRecipient.sol\":209:243  address public rewardsDistribution */\n    tag_14:\n      tag_70\n      tag_71\n      jump\t// in\n    tag_70:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Owned.sol\":140:169  address public nominatedOwner */\n    tag_15:\n      tag_72\n      tag_73\n      jump\t// in\n    tag_72:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Pausable.sol\":201:219  bool public paused */\n    tag_16:\n      tag_74\n      tag_75\n      jump\t// in\n    tag_74:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/StakingRewards.sol\":1748:1860  function balanceOf(address account) external view returns (uint256) {\r... */\n    tag_17:\n      tag_76\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_77\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_77:\n        /* \"contracts/StakingRewards.sol\":1748:1860  function balanceOf(address account) external view returns (uint256) {\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_78\n      jump\t// in\n    tag_76:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/StakingRewards.sol\":791:817  IERC20 public stakingToken */\n    tag_18:\n      tag_79\n      tag_80\n      jump\t// in\n    tag_79:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Owned.sol\":520:791  function acceptOwnership() external {\r... */\n    tag_19:\n      tag_81\n      tag_82\n      jump\t// in\n    tag_81:\n      stop\n        /* \"contracts/StakingRewards.sol\":862:891  uint256 public rewardRate = 0 */\n    tag_20:\n      tag_83\n      tag_84\n      jump\t// in\n    tag_83:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/StakingRewards.sol\":1868:2023  function lastTimeRewardApplicable() public view returns (uint256) {\r... */\n    tag_21:\n      tag_85\n      tag_86\n      jump\t// in\n    tag_85:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/StakingRewards.sol\":5184:5486  function recoverERC20(address tokenAddress, uint256 tokenAmount) external onlyOwner {\r... */\n    tag_22:\n      tag_87\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_88\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_88:\n        /* \"contracts/StakingRewards.sol\":5184:5486  function recoverERC20(address tokenAddress, uint256 tokenAmount) external onlyOwner {\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_89\n      jump\t// in\n    tag_87:\n      stop\n        /* \"contracts/StakingRewards.sol\":1024:1081  mapping(address => uint256) public userRewardPerTokenPaid */\n    tag_23:\n      tag_90\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_91\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_91:\n        /* \"contracts/StakingRewards.sol\":1024:1081  mapping(address => uint256) public userRewardPerTokenPaid */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_92\n      jump\t// in\n    tag_90:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Owned.sol\":113:133  address public owner */\n    tag_24:\n      tag_93\n      tag_94\n      jump\t// in\n    tag_93:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Pausable.sol\":169:194  uint public lastPauseTime */\n    tag_25:\n      tag_95\n      tag_96\n      jump\t// in\n    tag_95:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/StakingRewards.sol\":2758:3137  function stake(uint256 amount) external nonReentrant notPaused updateReward(msg.sender) {\r... */\n    tag_26:\n      tag_97\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_98\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_98:\n        /* \"contracts/StakingRewards.sol\":2758:3137  function stake(uint256 amount) external nonReentrant notPaused updateReward(msg.sender) {\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_99\n      jump\t// in\n    tag_97:\n      stop\n        /* \"contracts/StakingRewards.sol\":944:973  uint256 public lastUpdateTime */\n    tag_27:\n      tag_100\n      tag_101\n      jump\t// in\n    tag_100:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/StakingRewards.sol\":5494:5854  function setRewardsDuration(uint256 _rewardsDuration) external onlyOwner {\r... */\n    tag_28:\n      tag_102\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_103\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_103:\n        /* \"contracts/StakingRewards.sol\":5494:5854  function setRewardsDuration(uint256 _rewardsDuration) external onlyOwner {\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_104\n      jump\t// in\n    tag_102:\n      stop\n        /* \"contracts/StakingRewards.sol\":2031:2361  function rewardPerToken() public view returns (uint256) {\r... */\n    tag_29:\n      tag_105\n      tag_106\n      jump\t// in\n    tag_105:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/StakingRewards.sol\":758:784  IERC20 public rewardsToken */\n    tag_30:\n      tag_107\n      tag_108\n      jump\t// in\n    tag_107:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/StakingRewards.sol\":980:1015  uint256 public rewardPerTokenStored */\n    tag_31:\n      tag_109\n      tag_110\n      jump\t// in\n    tag_109:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/StakingRewards.sol\":3825:3922  function exit() external {\r... */\n    tag_32:\n      tag_111\n      tag_112\n      jump\t// in\n    tag_111:\n      stop\n        /* \"contracts/StakingRewards.sol\":824:855  uint256 public periodFinish = 0 */\n    tag_33:\n      tag_113\n      tag_114\n      jump\t// in\n    tag_113:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/StakingRewards.sol\":2369:2567  function earned(address account) public view returns (uint256) {\r... */\n    tag_43:\n        /* \"contracts/StakingRewards.sol\":2423:2430  uint256 */\n      0x00\n        /* \"contracts/StakingRewards.sol\":2450:2559  _balances[account].mul(rewardPerToken().sub(userRewardPerTokenPaid[account])).div(1e18).add(rewards[account]) */\n      tag_116\n        /* \"contracts/StakingRewards.sol\":2542:2549  rewards */\n      0x0d\n        /* \"contracts/StakingRewards.sol\":2542:2558  rewards[account] */\n      0x00\n        /* \"contracts/StakingRewards.sol\":2550:2557  account */\n      dup5\n        /* \"contracts/StakingRewards.sol\":2542:2558  rewards[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/StakingRewards.sol\":2450:2537  _balances[account].mul(rewardPerToken().sub(userRewardPerTokenPaid[account])).div(1e18) */\n      tag_117\n        /* \"contracts/StakingRewards.sol\":2532:2536  1e18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/StakingRewards.sol\":2450:2527  _balances[account].mul(rewardPerToken().sub(userRewardPerTokenPaid[account])) */\n      tag_118\n        /* \"contracts/StakingRewards.sol\":2473:2526  rewardPerToken().sub(userRewardPerTokenPaid[account]) */\n      tag_119\n        /* \"contracts/StakingRewards.sol\":2494:2516  userRewardPerTokenPaid */\n      0x0c\n        /* \"contracts/StakingRewards.sol\":2494:2525  userRewardPerTokenPaid[account] */\n      0x00\n        /* \"contracts/StakingRewards.sol\":2517:2524  account */\n      dup10\n        /* \"contracts/StakingRewards.sol\":2494:2525  userRewardPerTokenPaid[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/StakingRewards.sol\":2473:2489  rewardPerToken() */\n      tag_120\n        /* \"contracts/StakingRewards.sol\":2473:2487  rewardPerToken */\n      tag_106\n        /* \"contracts/StakingRewards.sol\":2473:2489  rewardPerToken() */\n      jump\t// in\n    tag_120:\n        /* \"contracts/StakingRewards.sol\":2473:2493  rewardPerToken().sub */\n      tag_121\n      swap1\n        /* \"contracts/StakingRewards.sol\":2473:2526  rewardPerToken().sub(userRewardPerTokenPaid[account]) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_119:\n        /* \"contracts/StakingRewards.sol\":2450:2459  _balances */\n      0x0f\n        /* \"contracts/StakingRewards.sol\":2450:2468  _balances[account] */\n      0x00\n        /* \"contracts/StakingRewards.sol\":2460:2467  account */\n      dup10\n        /* \"contracts/StakingRewards.sol\":2450:2468  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/StakingRewards.sol\":2450:2472  _balances[account].mul */\n      tag_122\n      swap1\n        /* \"contracts/StakingRewards.sol\":2450:2527  _balances[account].mul(rewardPerToken().sub(userRewardPerTokenPaid[account])) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_118:\n        /* \"contracts/StakingRewards.sol\":2450:2531  _balances[account].mul(rewardPerToken().sub(userRewardPerTokenPaid[account])).div */\n      tag_123\n      swap1\n        /* \"contracts/StakingRewards.sol\":2450:2537  _balances[account].mul(rewardPerToken().sub(userRewardPerTokenPaid[account])).div(1e18) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_117:\n        /* \"contracts/StakingRewards.sol\":2450:2541  _balances[account].mul(rewardPerToken().sub(userRewardPerTokenPaid[account])).div(1e18).add */\n      tag_124\n      swap1\n        /* \"contracts/StakingRewards.sol\":2450:2559  _balances[account].mul(rewardPerToken().sub(userRewardPerTokenPaid[account])).div(1e18).add(rewards[account]) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_116:\n        /* \"contracts/StakingRewards.sol\":2443:2559  return _balances[account].mul(rewardPerToken().sub(userRewardPerTokenPaid[account])).div(1e18).add(rewards[account]) */\n      swap1\n      pop\n        /* \"contracts/StakingRewards.sol\":2369:2567  function earned(address account) public view returns (uint256) {\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/StakingRewards.sol\":1088:1130  mapping(address => uint256) public rewards */\n    tag_46:\n      mstore(0x20, 0x0d)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"contracts/Owned.sol\":371:512  function nominateNewOwner(address _owner) external onlyOwner {\r... */\n    tag_49:\n        /* \"contracts/Owned.sol\":829:841  _onlyOwner() */\n      tag_126\n        /* \"contracts/Owned.sol\":829:839  _onlyOwner */\n      tag_127\n        /* \"contracts/Owned.sol\":829:841  _onlyOwner() */\n      jump\t// in\n    tag_126:\n        /* \"contracts/Owned.sol\":460:466  _owner */\n      dup1\n        /* \"contracts/Owned.sol\":443:457  nominatedOwner */\n      0x01\n      0x00\n        /* \"contracts/Owned.sol\":443:466  nominatedOwner = _owner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Owned.sol\":482:504  OwnerNominated(_owner) */\n      0x906a1c6bd7e3091ea86693dd029a831c19049ce77f1dce2ce0bab1cacbabce22\n        /* \"contracts/Owned.sol\":497:503  _owner */\n      dup2\n        /* \"contracts/Owned.sol\":482:504  OwnerNominated(_owner) */\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/Owned.sol\":371:512  function nominateNewOwner(address _owner) external onlyOwner {\r... */\n      pop\n      jump\t// out\n        /* \"contracts/Pausable.sol\":615:1103  function setPaused(bool _paused) external onlyOwner {\r... */\n    tag_52:\n        /* \"contracts/Owned.sol\":829:841  _onlyOwner() */\n      tag_130\n        /* \"contracts/Owned.sol\":829:839  _onlyOwner */\n      tag_127\n        /* \"contracts/Owned.sol\":829:841  _onlyOwner() */\n      jump\t// in\n    tag_130:\n        /* \"contracts/Pausable.sol\":768:774  paused */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/Pausable.sol\":757:774  _paused == paused */\n      iszero\n      iszero\n        /* \"contracts/Pausable.sol\":757:764  _paused */\n      dup2\n        /* \"contracts/Pausable.sol\":757:774  _paused == paused */\n      iszero\n      iszero\n      eq\n        /* \"contracts/Pausable.sol\":753:809  if (_paused == paused) {\r... */\n      iszero\n      tag_132\n      jumpi\n        /* \"contracts/Pausable.sol\":791:798  return; */\n      jump(tag_131)\n        /* \"contracts/Pausable.sol\":753:809  if (_paused == paused) {\r... */\n    tag_132:\n        /* \"contracts/Pausable.sol\":864:871  _paused */\n      dup1\n        /* \"contracts/Pausable.sol\":855:861  paused */\n      0x05\n      0x00\n        /* \"contracts/Pausable.sol\":855:871  paused = _paused */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Pausable.sol\":940:946  paused */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/Pausable.sol\":936:994  if (paused) {\r... */\n      iszero\n      tag_133\n      jumpi\n        /* \"contracts/Pausable.sol\":979:982  now */\n      timestamp\n        /* \"contracts/Pausable.sol\":963:976  lastPauseTime */\n      0x04\n        /* \"contracts/Pausable.sol\":963:982  lastPauseTime = now */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Pausable.sol\":936:994  if (paused) {\r... */\n    tag_133:\n        /* \"contracts/Pausable.sol\":1075:1095  PauseChanged(paused) */\n      0x8fb6c181ee25a520cf3dd6565006ef91229fcfe5a989566c2a3b8c115570cec5\n        /* \"contracts/Pausable.sol\":1088:1094  paused */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/Pausable.sol\":1075:1095  PauseChanged(paused) */\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/Owned.sol\":852:853  _ */\n    tag_131:\n        /* \"contracts/Pausable.sol\":615:1103  function setPaused(bool _paused) external onlyOwner {\r... */\n      pop\n      jump\t// out\n        /* \"contracts/StakingRewards.sol\":1647:1740  function totalSupply() external view returns (uint256) {\r... */\n    tag_54:\n        /* \"contracts/StakingRewards.sol\":1693:1700  uint256 */\n      0x00\n        /* \"contracts/StakingRewards.sol\":1720:1732  _totalSupply */\n      sload(0x0e)\n        /* \"contracts/StakingRewards.sol\":1713:1732  return _totalSupply */\n      swap1\n      pop\n        /* \"contracts/StakingRewards.sol\":1647:1740  function totalSupply() external view returns (uint256) {\r... */\n      swap1\n      jump\t// out\n        /* \"contracts/RewardsDistributionRecipient.sol\":475:617  function setRewardsDistribution(address _rewardsDistribution) external onlyOwner {\r... */\n    tag_57:\n        /* \"contracts/Owned.sol\":829:841  _onlyOwner() */\n      tag_136\n        /* \"contracts/Owned.sol\":829:839  _onlyOwner */\n      tag_127\n        /* \"contracts/Owned.sol\":829:841  _onlyOwner() */\n      jump\t// in\n    tag_136:\n        /* \"contracts/RewardsDistributionRecipient.sol\":589:609  _rewardsDistribution */\n      dup1\n        /* \"contracts/RewardsDistributionRecipient.sol\":567:586  rewardsDistribution */\n      0x02\n      0x00\n        /* \"contracts/RewardsDistributionRecipient.sol\":567:609  rewardsDistribution = _rewardsDistribution */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/RewardsDistributionRecipient.sol\":475:617  function setRewardsDistribution(address _rewardsDistribution) external onlyOwner {\r... */\n      pop\n      jump\t// out\n        /* \"contracts/StakingRewards.sol\":2575:2696  function getRewardForDuration() external view returns (uint256) {\r... */\n    tag_59:\n        /* \"contracts/StakingRewards.sol\":2630:2637  uint256 */\n      0x00\n        /* \"contracts/StakingRewards.sol\":2657:2688  rewardRate.mul(rewardsDuration) */\n      tag_139\n        /* \"contracts/StakingRewards.sol\":2672:2687  rewardsDuration */\n      sload(0x09)\n        /* \"contracts/StakingRewards.sol\":2657:2667  rewardRate */\n      sload(0x08)\n        /* \"contracts/StakingRewards.sol\":2657:2671  rewardRate.mul */\n      tag_122\n      swap1\n        /* \"contracts/StakingRewards.sol\":2657:2688  rewardRate.mul(rewardsDuration) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_139:\n        /* \"contracts/StakingRewards.sol\":2650:2688  return rewardRate.mul(rewardsDuration) */\n      swap1\n      pop\n        /* \"contracts/StakingRewards.sol\":2575:2696  function getRewardForDuration() external view returns (uint256) {\r... */\n      swap1\n      jump\t// out\n        /* \"contracts/StakingRewards.sol\":3145:3502  function withdraw(uint256 amount) public nonReentrant updateReward(msg.sender) {\r... */\n    tag_62:\n        /* \"openzeppelin-solidity-2.3.0/contracts/utils/ReentrancyGuard.sol\":1350:1351  1 */\n      0x01\n        /* \"openzeppelin-solidity-2.3.0/contracts/utils/ReentrancyGuard.sol\":1333:1346  _guardCounter */\n      0x03\n      0x00\n        /* \"openzeppelin-solidity-2.3.0/contracts/utils/ReentrancyGuard.sol\":1333:1351  _guardCounter += 1 */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"openzeppelin-solidity-2.3.0/contracts/utils/ReentrancyGuard.sol\":1362:1382  uint256 localCounter */\n      0x00\n        /* \"openzeppelin-solidity-2.3.0/contracts/utils/ReentrancyGuard.sol\":1385:1398  _guardCounter */\n      sload(0x03)\n        /* \"openzeppelin-solidity-2.3.0/contracts/utils/ReentrancyGuard.sol\":1362:1398  uint256 localCounter = _guardCounter */\n      swap1\n      pop\n        /* \"contracts/StakingRewards.sol\":3212:3222  msg.sender */\n      caller\n        /* \"contracts/StakingRewards.sol\":5980:5996  rewardPerToken() */\n      tag_142\n        /* \"contracts/StakingRewards.sol\":5980:5994  rewardPerToken */\n      tag_106\n        /* \"contracts/StakingRewards.sol\":5980:5996  rewardPerToken() */\n      jump\t// in\n    tag_142:\n        /* \"contracts/StakingRewards.sol\":5957:5977  rewardPerTokenStored */\n      0x0b\n        /* \"contracts/StakingRewards.sol\":5957:5996  rewardPerTokenStored = rewardPerToken() */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/StakingRewards.sol\":6024:6050  lastTimeRewardApplicable() */\n      tag_143\n        /* \"contracts/StakingRewards.sol\":6024:6048  lastTimeRewardApplicable */\n      tag_86\n        /* \"contracts/StakingRewards.sol\":6024:6050  lastTimeRewardApplicable() */\n      jump\t// in\n    tag_143:\n        /* \"contracts/StakingRewards.sol\":6007:6021  lastUpdateTime */\n      0x0a\n        /* \"contracts/StakingRewards.sol\":6007:6050  lastUpdateTime = lastTimeRewardApplicable() */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/StakingRewards.sol\":6084:6085  0 */\n      0x00\n        /* \"contracts/StakingRewards.sol\":6065:6086  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/StakingRewards.sol\":6065:6072  account */\n      dup2\n        /* \"contracts/StakingRewards.sol\":6065:6086  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/StakingRewards.sol\":6061:6218  if (account != address(0)) {\r... */\n      tag_144\n      jumpi\n        /* \"contracts/StakingRewards.sol\":6122:6137  earned(account) */\n      tag_145\n        /* \"contracts/StakingRewards.sol\":6129:6136  account */\n      dup2\n        /* \"contracts/StakingRewards.sol\":6122:6128  earned */\n      tag_43\n        /* \"contracts/StakingRewards.sol\":6122:6137  earned(account) */\n      jump\t// in\n    tag_145:\n        /* \"contracts/StakingRewards.sol\":6103:6110  rewards */\n      0x0d\n        /* \"contracts/StakingRewards.sol\":6103:6119  rewards[account] */\n      0x00\n        /* \"contracts/StakingRewards.sol\":6111:6118  account */\n      dup4\n        /* \"contracts/StakingRewards.sol\":6103:6119  rewards[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/StakingRewards.sol\":6103:6137  rewards[account] = earned(account) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/StakingRewards.sol\":6186:6206  rewardPerTokenStored */\n      sload(0x0b)\n        /* \"contracts/StakingRewards.sol\":6152:6174  userRewardPerTokenPaid */\n      0x0c\n        /* \"contracts/StakingRewards.sol\":6152:6183  userRewardPerTokenPaid[account] */\n      0x00\n        /* \"contracts/StakingRewards.sol\":6175:6182  account */\n      dup4\n        /* \"contracts/StakingRewards.sol\":6152:6183  userRewardPerTokenPaid[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/StakingRewards.sol\":6152:6206  userRewardPerTokenPaid[account] = rewardPerTokenStored */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/StakingRewards.sol\":6061:6218  if (account != address(0)) {\r... */\n    tag_144:\n        /* \"contracts/StakingRewards.sol\":3252:3253  0 */\n      0x00\n        /* \"contracts/StakingRewards.sol\":3243:3249  amount */\n      dup4\n        /* \"contracts/StakingRewards.sol\":3243:3253  amount > 0 */\n      gt\n        /* \"contracts/StakingRewards.sol\":3235:3275  require(amount > 0, \"Cannot withdraw 0\") */\n      tag_147\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x11\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x43616e6e6f742077697468647261772030000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_147:\n        /* \"contracts/StakingRewards.sol\":3301:3325  _totalSupply.sub(amount) */\n      tag_148\n        /* \"contracts/StakingRewards.sol\":3318:3324  amount */\n      dup4\n        /* \"contracts/StakingRewards.sol\":3301:3313  _totalSupply */\n      sload(0x0e)\n        /* \"contracts/StakingRewards.sol\":3301:3317  _totalSupply.sub */\n      tag_121\n      swap1\n        /* \"contracts/StakingRewards.sol\":3301:3325  _totalSupply.sub(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_148:\n        /* \"contracts/StakingRewards.sol\":3286:3298  _totalSupply */\n      0x0e\n        /* \"contracts/StakingRewards.sol\":3286:3325  _totalSupply = _totalSupply.sub(amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/StakingRewards.sol\":3360:3393  _balances[msg.sender].sub(amount) */\n      tag_149\n        /* \"contracts/StakingRewards.sol\":3386:3392  amount */\n      dup4\n        /* \"contracts/StakingRewards.sol\":3360:3369  _balances */\n      0x0f\n        /* \"contracts/StakingRewards.sol\":3360:3381  _balances[msg.sender] */\n      0x00\n        /* \"contracts/StakingRewards.sol\":3370:3380  msg.sender */\n      caller\n        /* \"contracts/StakingRewards.sol\":3360:3381  _balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/StakingRewards.sol\":3360:3385  _balances[msg.sender].sub */\n      tag_121\n      swap1\n        /* \"contracts/StakingRewards.sol\":3360:3393  _balances[msg.sender].sub(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_149:\n        /* \"contracts/StakingRewards.sol\":3336:3345  _balances */\n      0x0f\n        /* \"contracts/StakingRewards.sol\":3336:3357  _balances[msg.sender] */\n      0x00\n        /* \"contracts/StakingRewards.sol\":3346:3356  msg.sender */\n      caller\n        /* \"contracts/StakingRewards.sol\":3336:3357  _balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/StakingRewards.sol\":3336:3393  _balances[msg.sender] = _balances[msg.sender].sub(amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/StakingRewards.sol\":3404:3449  stakingToken.safeTransfer(msg.sender, amount) */\n      tag_150\n        /* \"contracts/StakingRewards.sol\":3430:3440  msg.sender */\n      caller\n        /* \"contracts/StakingRewards.sol\":3442:3448  amount */\n      dup5\n        /* \"contracts/StakingRewards.sol\":3404:3416  stakingToken */\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/StakingRewards.sol\":3404:3429  stakingToken.safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_151\n      swap1\n        /* \"contracts/StakingRewards.sol\":3404:3449  stakingToken.safeTransfer(msg.sender, amount) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_150:\n        /* \"contracts/StakingRewards.sol\":3475:3485  msg.sender */\n      caller\n        /* \"contracts/StakingRewards.sol\":3465:3494  Withdrawn(msg.sender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d5\n        /* \"contracts/StakingRewards.sol\":3487:3493  amount */\n      dup5\n        /* \"contracts/StakingRewards.sol\":3465:3494  Withdrawn(msg.sender, amount) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"openzeppelin-solidity-2.3.0/contracts/utils/ReentrancyGuard.sol\":1409:1410  _ */\n      pop\n        /* \"openzeppelin-solidity-2.3.0/contracts/utils/ReentrancyGuard.sol\":1445:1458  _guardCounter */\n      sload(0x03)\n        /* \"openzeppelin-solidity-2.3.0/contracts/utils/ReentrancyGuard.sol\":1429:1441  localCounter */\n      dup2\n        /* \"openzeppelin-solidity-2.3.0/contracts/utils/ReentrancyGuard.sol\":1429:1458  localCounter == _guardCounter */\n      eq\n        /* \"openzeppelin-solidity-2.3.0/contracts/utils/ReentrancyGuard.sol\":1421:1494  require(localCounter == _guardCounter, \"ReentrancyGuard: reentrant call\") */\n      tag_152\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1f\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_152:\n        /* \"contracts/StakingRewards.sol\":3145:3502  function withdraw(uint256 amount) public nonReentrant updateReward(msg.sender) {\r... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/StakingRewards.sol\":898:937  uint256 public rewardsDuration = 7 days */\n    tag_64:\n      sload(0x09)\n      dup2\n      jump\t// out\n        /* \"contracts/StakingRewards.sol\":3986:5069  function notifyRewardAmount(uint256 reward) external onlyRewardsDistribution updateReward(address(0)) {\r... */\n    tag_67:\n        /* \"contracts/RewardsDistributionRecipient.sol\":381:400  rewardsDistribution */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/RewardsDistributionRecipient.sol\":367:400  msg.sender == rewardsDistribution */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/RewardsDistributionRecipient.sol\":367:377  msg.sender */\n      caller\n        /* \"contracts/RewardsDistributionRecipient.sol\":367:400  msg.sender == rewardsDistribution */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/RewardsDistributionRecipient.sol\":359:447  require(msg.sender == rewardsDistribution, \"Caller is not RewardsDistribution contract\") */\n      tag_154\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x2a\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_d50b095422f4cbfcb4c90fbd4d55aaf0967bf1d90e94bb6a1ae9fc4ee7e733de\n      0x2a\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_154:\n        /* \"contracts/StakingRewards.sol\":4084:4085  0 */\n      0x00\n        /* \"contracts/StakingRewards.sol\":5980:5996  rewardPerToken() */\n      tag_156\n        /* \"contracts/StakingRewards.sol\":5980:5994  rewardPerToken */\n      tag_106\n        /* \"contracts/StakingRewards.sol\":5980:5996  rewardPerToken() */\n      jump\t// in\n    tag_156:\n        /* \"contracts/StakingRewards.sol\":5957:5977  rewardPerTokenStored */\n      0x0b\n        /* \"contracts/StakingRewards.sol\":5957:5996  rewardPerTokenStored = rewardPerToken() */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/StakingRewards.sol\":6024:6050  lastTimeRewardApplicable() */\n      tag_157\n        /* \"contracts/StakingRewards.sol\":6024:6048  lastTimeRewardApplicable */\n      tag_86\n        /* \"contracts/StakingRewards.sol\":6024:6050  lastTimeRewardApplicable() */\n      jump\t// in\n    tag_157:\n        /* \"contracts/StakingRewards.sol\":6007:6021  lastUpdateTime */\n      0x0a\n        /* \"contracts/StakingRewards.sol\":6007:6050  lastUpdateTime = lastTimeRewardApplicable() */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/StakingRewards.sol\":6084:6085  0 */\n      0x00\n        /* \"contracts/StakingRewards.sol\":6065:6086  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/StakingRewards.sol\":6065:6072  account */\n      dup2\n        /* \"contracts/StakingRewards.sol\":6065:6086  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/StakingRewards.sol\":6061:6218  if (account != address(0)) {\r... */\n      tag_158\n      jumpi\n        /* \"contracts/StakingRewards.sol\":6122:6137  earned(account) */\n      tag_159\n        /* \"contracts/StakingRewards.sol\":6129:6136  account */\n      dup2\n        /* \"contracts/StakingRewards.sol\":6122:6128  earned */\n      tag_43\n        /* \"contracts/StakingRewards.sol\":6122:6137  earned(account) */\n      jump\t// in\n    tag_159:\n        /* \"contracts/StakingRewards.sol\":6103:6110  rewards */\n      0x0d\n        /* \"contracts/StakingRewards.sol\":6103:6119  rewards[account] */\n      0x00\n        /* \"contracts/StakingRewards.sol\":6111:6118  account */\n      dup4\n        /* \"contracts/StakingRewards.sol\":6103:6119  rewards[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/StakingRewards.sol\":6103:6137  rewards[account] = earned(account) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/StakingRewards.sol\":6186:6206  rewardPerTokenStored */\n      sload(0x0b)\n        /* \"contracts/StakingRewards.sol\":6152:6174  userRewardPerTokenPaid */\n      0x0c\n        /* \"contracts/StakingRewards.sol\":6152:6183  userRewardPerTokenPaid[account] */\n      0x00\n        /* \"contracts/StakingRewards.sol\":6175:6182  account */\n      dup4\n        /* \"contracts/StakingRewards.sol\":6152:6183  userRewardPerTokenPaid[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/StakingRewards.sol\":6152:6206  userRewardPerTokenPaid[account] = rewardPerTokenStored */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/StakingRewards.sol\":6061:6218  if (account != address(0)) {\r... */\n    tag_158:\n        /* \"contracts/StakingRewards.sol\":4122:4134  periodFinish */\n      sload(0x07)\n        /* \"contracts/StakingRewards.sol\":4103:4118  block.timestamp */\n      timestamp\n        /* \"contracts/StakingRewards.sol\":4103:4134  block.timestamp >= periodFinish */\n      lt\n        /* \"contracts/StakingRewards.sol\":4099:4417  if (block.timestamp >= periodFinish) {\r... */\n      tag_161\n      jumpi\n        /* \"contracts/StakingRewards.sol\":4164:4191  reward.div(rewardsDuration) */\n      tag_162\n        /* \"contracts/StakingRewards.sol\":4175:4190  rewardsDuration */\n      sload(0x09)\n        /* \"contracts/StakingRewards.sol\":4164:4170  reward */\n      dup4\n        /* \"contracts/StakingRewards.sol\":4164:4174  reward.div */\n      tag_123\n      swap1\n        /* \"contracts/StakingRewards.sol\":4164:4191  reward.div(rewardsDuration) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_162:\n        /* \"contracts/StakingRewards.sol\":4151:4161  rewardRate */\n      0x08\n        /* \"contracts/StakingRewards.sol\":4151:4191  rewardRate = reward.div(rewardsDuration) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/StakingRewards.sol\":4099:4417  if (block.timestamp >= periodFinish) {\r... */\n      jump(tag_163)\n    tag_161:\n        /* \"contracts/StakingRewards.sol\":4224:4241  uint256 remaining */\n      0x00\n        /* \"contracts/StakingRewards.sol\":4244:4277  periodFinish.sub(block.timestamp) */\n      tag_164\n        /* \"contracts/StakingRewards.sol\":4261:4276  block.timestamp */\n      timestamp\n        /* \"contracts/StakingRewards.sol\":4244:4256  periodFinish */\n      sload(0x07)\n        /* \"contracts/StakingRewards.sol\":4244:4260  periodFinish.sub */\n      tag_121\n      swap1\n        /* \"contracts/StakingRewards.sol\":4244:4277  periodFinish.sub(block.timestamp) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_164:\n        /* \"contracts/StakingRewards.sol\":4224:4277  uint256 remaining = periodFinish.sub(block.timestamp) */\n      swap1\n      pop\n        /* \"contracts/StakingRewards.sol\":4292:4308  uint256 leftover */\n      0x00\n        /* \"contracts/StakingRewards.sol\":4311:4336  remaining.mul(rewardRate) */\n      tag_165\n        /* \"contracts/StakingRewards.sol\":4325:4335  rewardRate */\n      sload(0x08)\n        /* \"contracts/StakingRewards.sol\":4311:4320  remaining */\n      dup4\n        /* \"contracts/StakingRewards.sol\":4311:4324  remaining.mul */\n      tag_122\n      swap1\n        /* \"contracts/StakingRewards.sol\":4311:4336  remaining.mul(rewardRate) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_165:\n        /* \"contracts/StakingRewards.sol\":4292:4336  uint256 leftover = remaining.mul(rewardRate) */\n      swap1\n      pop\n        /* \"contracts/StakingRewards.sol\":4364:4405  reward.add(leftover).div(rewardsDuration) */\n      tag_166\n        /* \"contracts/StakingRewards.sol\":4389:4404  rewardsDuration */\n      sload(0x09)\n        /* \"contracts/StakingRewards.sol\":4364:4384  reward.add(leftover) */\n      tag_167\n        /* \"contracts/StakingRewards.sol\":4375:4383  leftover */\n      dup4\n        /* \"contracts/StakingRewards.sol\":4364:4370  reward */\n      dup8\n        /* \"contracts/StakingRewards.sol\":4364:4374  reward.add */\n      tag_124\n      swap1\n        /* \"contracts/StakingRewards.sol\":4364:4384  reward.add(leftover) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_167:\n        /* \"contracts/StakingRewards.sol\":4364:4388  reward.add(leftover).div */\n      tag_123\n      swap1\n        /* \"contracts/StakingRewards.sol\":4364:4405  reward.add(leftover).div(rewardsDuration) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_166:\n        /* \"contracts/StakingRewards.sol\":4351:4361  rewardRate */\n      0x08\n        /* \"contracts/StakingRewards.sol\":4351:4405  rewardRate = reward.add(leftover).div(rewardsDuration) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/StakingRewards.sol\":4099:4417  if (block.timestamp >= periodFinish) {\r... */\n      pop\n      pop\n    tag_163:\n        /* \"contracts/StakingRewards.sol\":4777:4789  uint balance */\n      0x00\n        /* \"contracts/StakingRewards.sol\":4792:4804  rewardsToken */\n      0x05\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/StakingRewards.sol\":4792:4814  rewardsToken.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/StakingRewards.sol\":4823:4827  this */\n      address\n        /* \"contracts/StakingRewards.sol\":4792:4829  rewardsToken.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_168\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_168:\n        /* \"contracts/StakingRewards.sol\":4792:4829  rewardsToken.balanceOf(address(this)) */\n      pop\n      gas\n      staticcall\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_169\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_169:\n        /* \"contracts/StakingRewards.sol\":4792:4829  rewardsToken.balanceOf(address(this)) */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_170\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_170:\n        /* \"contracts/StakingRewards.sol\":4792:4829  rewardsToken.balanceOf(address(this)) */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"contracts/StakingRewards.sol\":4777:4829  uint balance = rewardsToken.balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"contracts/StakingRewards.sol\":4862:4890  balance.div(rewardsDuration) */\n      tag_171\n        /* \"contracts/StakingRewards.sol\":4874:4889  rewardsDuration */\n      sload(0x09)\n        /* \"contracts/StakingRewards.sol\":4862:4869  balance */\n      dup3\n        /* \"contracts/StakingRewards.sol\":4862:4873  balance.div */\n      tag_123\n      swap1\n        /* \"contracts/StakingRewards.sol\":4862:4890  balance.div(rewardsDuration) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_171:\n        /* \"contracts/StakingRewards.sol\":4848:4858  rewardRate */\n      sload(0x08)\n        /* \"contracts/StakingRewards.sol\":4848:4890  rewardRate <= balance.div(rewardsDuration) */\n      gt\n      iszero\n        /* \"contracts/StakingRewards.sol\":4840:4919  require(rewardRate <= balance.div(rewardsDuration), \"Provided reward too high\") */\n      tag_172\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x18\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x50726f76696465642072657761726420746f6f20686967680000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_172:\n        /* \"contracts/StakingRewards.sol\":4949:4964  block.timestamp */\n      timestamp\n        /* \"contracts/StakingRewards.sol\":4932:4946  lastUpdateTime */\n      0x0a\n        /* \"contracts/StakingRewards.sol\":4932:4964  lastUpdateTime = block.timestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/StakingRewards.sol\":4990:5026  block.timestamp.add(rewardsDuration) */\n      tag_173\n        /* \"contracts/StakingRewards.sol\":5010:5025  rewardsDuration */\n      sload(0x09)\n        /* \"contracts/StakingRewards.sol\":4990:5005  block.timestamp */\n      timestamp\n        /* \"contracts/StakingRewards.sol\":4990:5009  block.timestamp.add */\n      tag_124\n      swap1\n        /* \"contracts/StakingRewards.sol\":4990:5026  block.timestamp.add(rewardsDuration) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_173:\n        /* \"contracts/StakingRewards.sol\":4975:4987  periodFinish */\n      0x07\n        /* \"contracts/StakingRewards.sol\":4975:5026  periodFinish = block.timestamp.add(rewardsDuration) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/StakingRewards.sol\":5042:5061  RewardAdded(reward) */\n      0xde88a922e0d3b88b24e9623efeb464919c6bf9f66857a65e2bfcf2ce87a9433d\n        /* \"contracts/StakingRewards.sol\":5054:5060  reward */\n      dup4\n        /* \"contracts/StakingRewards.sol\":5042:5061  RewardAdded(reward) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/StakingRewards.sol\":6228:6229  _ */\n      pop\n        /* \"contracts/RewardsDistributionRecipient.sol\":458:459  _ */\n      pop\n        /* \"contracts/StakingRewards.sol\":3986:5069  function notifyRewardAmount(uint256 reward) external onlyRewardsDistribution updateReward(address(0)) {\r... */\n      pop\n      jump\t// out\n        /* \"contracts/StakingRewards.sol\":3510:3817  function getReward() public nonReentrant updateReward(msg.sender) {\r... */\n    tag_69:\n        /* \"openzeppelin-solidity-2.3.0/contracts/utils/ReentrancyGuard.sol\":1350:1351  1 */\n      0x01\n        /* \"openzeppelin-solidity-2.3.0/contracts/utils/ReentrancyGuard.sol\":1333:1346  _guardCounter */\n      0x03\n      0x00\n        /* \"openzeppelin-solidity-2.3.0/contracts/utils/ReentrancyGuard.sol\":1333:1351  _guardCounter += 1 */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"openzeppelin-solidity-2.3.0/contracts/utils/ReentrancyGuard.sol\":1362:1382  uint256 localCounter */\n      0x00\n        /* \"openzeppelin-solidity-2.3.0/contracts/utils/ReentrancyGuard.sol\":1385:1398  _guardCounter */\n      sload(0x03)\n        /* \"openzeppelin-solidity-2.3.0/contracts/utils/ReentrancyGuard.sol\":1362:1398  uint256 localCounter = _guardCounter */\n      swap1\n      pop\n        /* \"contracts/StakingRewards.sol\":3564:3574  msg.sender */\n      caller\n        /* \"contracts/StakingRewards.sol\":5980:5996  rewardPerToken() */\n      tag_176\n        /* \"contracts/StakingRewards.sol\":5980:5994  rewardPerToken */\n      tag_106\n        /* \"contracts/StakingRewards.sol\":5980:5996  rewardPerToken() */\n      jump\t// in\n    tag_176:\n        /* \"contracts/StakingRewards.sol\":5957:5977  rewardPerTokenStored */\n      0x0b\n        /* \"contracts/StakingRewards.sol\":5957:5996  rewardPerTokenStored = rewardPerToken() */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/StakingRewards.sol\":6024:6050  lastTimeRewardApplicable() */\n      tag_177\n        /* \"contracts/StakingRewards.sol\":6024:6048  lastTimeRewardApplicable */\n      tag_86\n        /* \"contracts/StakingRewards.sol\":6024:6050  lastTimeRewardApplicable() */\n      jump\t// in\n    tag_177:\n        /* \"contracts/StakingRewards.sol\":6007:6021  lastUpdateTime */\n      0x0a\n        /* \"contracts/StakingRewards.sol\":6007:6050  lastUpdateTime = lastTimeRewardApplicable() */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/StakingRewards.sol\":6084:6085  0 */\n      0x00\n        /* \"contracts/StakingRewards.sol\":6065:6086  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/StakingRewards.sol\":6065:6072  account */\n      dup2\n        /* \"contracts/StakingRewards.sol\":6065:6086  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/StakingRewards.sol\":6061:6218  if (account != address(0)) {\r... */\n      tag_178\n      jumpi\n        /* \"contracts/StakingRewards.sol\":6122:6137  earned(account) */\n      tag_179\n        /* \"contracts/StakingRewards.sol\":6129:6136  account */\n      dup2\n        /* \"contracts/StakingRewards.sol\":6122:6128  earned */\n      tag_43\n        /* \"contracts/StakingRewards.sol\":6122:6137  earned(account) */\n      jump\t// in\n    tag_179:\n        /* \"contracts/StakingRewards.sol\":6103:6110  rewards */\n      0x0d\n        /* \"contracts/StakingRewards.sol\":6103:6119  rewards[account] */\n      0x00\n        /* \"contracts/StakingRewards.sol\":6111:6118  account */\n      dup4\n        /* \"contracts/StakingRewards.sol\":6103:6119  rewards[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/StakingRewards.sol\":6103:6137  rewards[account] = earned(account) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/StakingRewards.sol\":6186:6206  rewardPerTokenStored */\n      sload(0x0b)\n        /* \"contracts/StakingRewards.sol\":6152:6174  userRewardPerTokenPaid */\n      0x0c\n        /* \"contracts/StakingRewards.sol\":6152:6183  userRewardPerTokenPaid[account] */\n      0x00\n        /* \"contracts/StakingRewards.sol\":6175:6182  account */\n      dup4\n        /* \"contracts/StakingRewards.sol\":6152:6183  userRewardPerTokenPaid[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/StakingRewards.sol\":6152:6206  userRewardPerTokenPaid[account] = rewardPerTokenStored */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/StakingRewards.sol\":6061:6218  if (account != address(0)) {\r... */\n    tag_178:\n        /* \"contracts/StakingRewards.sol\":3587:3601  uint256 reward */\n      0x00\n        /* \"contracts/StakingRewards.sol\":3604:3611  rewards */\n      0x0d\n        /* \"contracts/StakingRewards.sol\":3604:3623  rewards[msg.sender] */\n      0x00\n        /* \"contracts/StakingRewards.sol\":3612:3622  msg.sender */\n      caller\n        /* \"contracts/StakingRewards.sol\":3604:3623  rewards[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/StakingRewards.sol\":3587:3623  uint256 reward = rewards[msg.sender] */\n      swap1\n      pop\n        /* \"contracts/StakingRewards.sol\":3647:3648  0 */\n      0x00\n        /* \"contracts/StakingRewards.sol\":3638:3644  reward */\n      dup2\n        /* \"contracts/StakingRewards.sol\":3638:3648  reward > 0 */\n      gt\n        /* \"contracts/StakingRewards.sol\":3634:3810  if (reward > 0) {\r... */\n      iszero\n      tag_181\n      jumpi\n        /* \"contracts/StakingRewards.sol\":3687:3688  0 */\n      0x00\n        /* \"contracts/StakingRewards.sol\":3665:3672  rewards */\n      0x0d\n        /* \"contracts/StakingRewards.sol\":3665:3684  rewards[msg.sender] */\n      0x00\n        /* \"contracts/StakingRewards.sol\":3673:3683  msg.sender */\n      caller\n        /* \"contracts/StakingRewards.sol\":3665:3684  rewards[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/StakingRewards.sol\":3665:3688  rewards[msg.sender] = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/StakingRewards.sol\":3703:3748  rewardsToken.safeTransfer(msg.sender, reward) */\n      tag_182\n        /* \"contracts/StakingRewards.sol\":3729:3739  msg.sender */\n      caller\n        /* \"contracts/StakingRewards.sol\":3741:3747  reward */\n      dup3\n        /* \"contracts/StakingRewards.sol\":3703:3715  rewardsToken */\n      0x05\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/StakingRewards.sol\":3703:3728  rewardsToken.safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_151\n      swap1\n        /* \"contracts/StakingRewards.sol\":3703:3748  rewardsToken.safeTransfer(msg.sender, reward) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_182:\n        /* \"contracts/StakingRewards.sol\":3779:3789  msg.sender */\n      caller\n        /* \"contracts/StakingRewards.sol\":3768:3798  RewardPaid(msg.sender, reward) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xe2403640ba68fed3a2f88b7557551d1993f84b99bb10ff833f0cf8db0c5e0486\n        /* \"contracts/StakingRewards.sol\":3791:3797  reward */\n      dup3\n        /* \"contracts/StakingRewards.sol\":3768:3798  RewardPaid(msg.sender, reward) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/StakingRewards.sol\":3634:3810  if (reward > 0) {\r... */\n    tag_181:\n        /* \"contracts/StakingRewards.sol\":6228:6229  _ */\n      pop\n        /* \"openzeppelin-solidity-2.3.0/contracts/utils/ReentrancyGuard.sol\":1409:1410  _ */\n      pop\n        /* \"openzeppelin-solidity-2.3.0/contracts/utils/ReentrancyGuard.sol\":1445:1458  _guardCounter */\n      sload(0x03)\n        /* \"openzeppelin-solidity-2.3.0/contracts/utils/ReentrancyGuard.sol\":1429:1441  localCounter */\n      dup2\n        /* \"openzeppelin-solidity-2.3.0/contracts/utils/ReentrancyGuard.sol\":1429:1458  localCounter == _guardCounter */\n      eq\n        /* \"openzeppelin-solidity-2.3.0/contracts/utils/ReentrancyGuard.sol\":1421:1494  require(localCounter == _guardCounter, \"ReentrancyGuard: reentrant call\") */\n      tag_183\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1f\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_183:\n        /* \"contracts/StakingRewards.sol\":3510:3817  function getReward() public nonReentrant updateReward(msg.sender) {\r... */\n      pop\n      jump\t// out\n        /* \"contracts/RewardsDistributionRecipient.sol\":209:243  address public rewardsDistribution */\n    tag_71:\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/Owned.sol\":140:169  address public nominatedOwner */\n    tag_73:\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/Pausable.sol\":201:219  bool public paused */\n    tag_75:\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/StakingRewards.sol\":1748:1860  function balanceOf(address account) external view returns (uint256) {\r... */\n    tag_78:\n        /* \"contracts/StakingRewards.sol\":1807:1814  uint256 */\n      0x00\n        /* \"contracts/StakingRewards.sol\":1834:1843  _balances */\n      0x0f\n        /* \"contracts/StakingRewards.sol\":1834:1852  _balances[account] */\n      0x00\n        /* \"contracts/StakingRewards.sol\":1844:1851  account */\n      dup4\n        /* \"contracts/StakingRewards.sol\":1834:1852  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/StakingRewards.sol\":1827:1852  return _balances[account] */\n      swap1\n      pop\n        /* \"contracts/StakingRewards.sol\":1748:1860  function balanceOf(address account) external view returns (uint256) {\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/StakingRewards.sol\":791:817  IERC20 public stakingToken */\n    tag_80:\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/Owned.sol\":520:791  function acceptOwnership() external {\r... */\n    tag_82:\n        /* \"contracts/Owned.sol\":589:603  nominatedOwner */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Owned.sol\":575:603  msg.sender == nominatedOwner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Owned.sol\":575:585  msg.sender */\n      caller\n        /* \"contracts/Owned.sol\":575:603  msg.sender == nominatedOwner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/Owned.sol\":567:661  require(msg.sender == nominatedOwner, \"You must be nominated before you can accept ownership\") */\n      tag_186\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x35\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_1149e36cd24095bebc9341ef03810e0e2a00039190624df6f2d7934141e2233b\n      0x35\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_186:\n        /* \"contracts/Owned.sol\":677:712  OwnerChanged(owner, nominatedOwner) */\n      0xb532073b38c83145e3e5135377a08bf9aab55bc0fd7c1179cd4fb995d2a5159c\n        /* \"contracts/Owned.sol\":690:695  owner */\n      0x00\n      dup1\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Owned.sol\":697:711  nominatedOwner */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Owned.sol\":677:712  OwnerChanged(owner, nominatedOwner) */\n      mload(0x40)\n      dup1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/Owned.sol\":731:745  nominatedOwner */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Owned.sol\":723:728  owner */\n      0x00\n      dup1\n        /* \"contracts/Owned.sol\":723:745  owner = nominatedOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Owned.sol\":781:782  0 */\n      0x00\n        /* \"contracts/Owned.sol\":756:770  nominatedOwner */\n      0x01\n      0x00\n        /* \"contracts/Owned.sol\":756:783  nominatedOwner = address(0) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Owned.sol\":520:791  function acceptOwnership() external {\r... */\n      jump\t// out\n        /* \"contracts/StakingRewards.sol\":862:891  uint256 public rewardRate = 0 */\n    tag_84:\n      sload(0x08)\n      dup2\n      jump\t// out\n        /* \"contracts/StakingRewards.sol\":1868:2023  function lastTimeRewardApplicable() public view returns (uint256) {\r... */\n    tag_86:\n        /* \"contracts/StakingRewards.sol\":1925:1932  uint256 */\n      0x00\n        /* \"contracts/StakingRewards.sol\":1970:1982  periodFinish */\n      sload(0x07)\n        /* \"contracts/StakingRewards.sol\":1952:1967  block.timestamp */\n      timestamp\n        /* \"contracts/StakingRewards.sol\":1952:1982  block.timestamp < periodFinish */\n      lt\n        /* \"contracts/StakingRewards.sol\":1952:2015  block.timestamp < periodFinish ? block.timestamp : periodFinish */\n      tag_188\n      jumpi\n        /* \"contracts/StakingRewards.sol\":2003:2015  periodFinish */\n      sload(0x07)\n        /* \"contracts/StakingRewards.sol\":1952:2015  block.timestamp < periodFinish ? block.timestamp : periodFinish */\n      jump(tag_189)\n    tag_188:\n        /* \"contracts/StakingRewards.sol\":1985:2000  block.timestamp */\n      timestamp\n        /* \"contracts/StakingRewards.sol\":1952:2015  block.timestamp < periodFinish ? block.timestamp : periodFinish */\n    tag_189:\n        /* \"contracts/StakingRewards.sol\":1945:2015  return block.timestamp < periodFinish ? block.timestamp : periodFinish */\n      swap1\n      pop\n        /* \"contracts/StakingRewards.sol\":1868:2023  function lastTimeRewardApplicable() public view returns (uint256) {\r... */\n      swap1\n      jump\t// out\n        /* \"contracts/StakingRewards.sol\":5184:5486  function recoverERC20(address tokenAddress, uint256 tokenAmount) external onlyOwner {\r... */\n    tag_89:\n        /* \"contracts/Owned.sol\":829:841  _onlyOwner() */\n      tag_191\n        /* \"contracts/Owned.sol\":829:839  _onlyOwner */\n      tag_127\n        /* \"contracts/Owned.sol\":829:841  _onlyOwner() */\n      jump\t// in\n    tag_191:\n        /* \"contracts/StakingRewards.sol\":5311:5323  stakingToken */\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/StakingRewards.sol\":5287:5324  tokenAddress != address(stakingToken) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/StakingRewards.sol\":5287:5299  tokenAddress */\n      dup3\n        /* \"contracts/StakingRewards.sol\":5287:5324  tokenAddress != address(stakingToken) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/StakingRewards.sol\":5279:5362  require(tokenAddress != address(stakingToken), \"Cannot withdraw the staking token\") */\n      tag_193\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x21\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_f43de9f2a3539b2ac9cf1844588e9cc0acd1b2bdb1ec43734f76440993ede0a9\n      0x21\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_193:\n        /* \"contracts/StakingRewards.sol\":5373:5426  IERC20(tokenAddress).safeTransfer(owner, tokenAmount) */\n      tag_194\n        /* \"contracts/StakingRewards.sol\":5407:5412  owner */\n      0x00\n      dup1\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/StakingRewards.sol\":5414:5425  tokenAmount */\n      dup3\n        /* \"contracts/StakingRewards.sol\":5380:5392  tokenAddress */\n      dup5\n        /* \"contracts/StakingRewards.sol\":5373:5406  IERC20(tokenAddress).safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_151\n      swap1\n        /* \"contracts/StakingRewards.sol\":5373:5426  IERC20(tokenAddress).safeTransfer(owner, tokenAmount) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_194:\n        /* \"contracts/StakingRewards.sol\":5442:5478  Recovered(tokenAddress, tokenAmount) */\n      0x8c1256b8896378cd5044f80c202f9772b9d77dc85c8a6eb51967210b09bfaa28\n        /* \"contracts/StakingRewards.sol\":5452:5464  tokenAddress */\n      dup3\n        /* \"contracts/StakingRewards.sol\":5466:5477  tokenAmount */\n      dup3\n        /* \"contracts/StakingRewards.sol\":5442:5478  Recovered(tokenAddress, tokenAmount) */\n      mload(0x40)\n      dup1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/StakingRewards.sol\":5184:5486  function recoverERC20(address tokenAddress, uint256 tokenAmount) external onlyOwner {\r... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/StakingRewards.sol\":1024:1081  mapping(address => uint256) public userRewardPerTokenPaid */\n    tag_92:\n      mstore(0x20, 0x0c)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"contracts/Owned.sol\":113:133  address public owner */\n    tag_94:\n      0x00\n      dup1\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/Pausable.sol\":169:194  uint public lastPauseTime */\n    tag_96:\n      sload(0x04)\n      dup2\n      jump\t// out\n        /* \"contracts/StakingRewards.sol\":2758:3137  function stake(uint256 amount) external nonReentrant notPaused updateReward(msg.sender) {\r... */\n    tag_99:\n        /* \"openzeppelin-solidity-2.3.0/contracts/utils/ReentrancyGuard.sol\":1350:1351  1 */\n      0x01\n        /* \"openzeppelin-solidity-2.3.0/contracts/utils/ReentrancyGuard.sol\":1333:1346  _guardCounter */\n      0x03\n      0x00\n        /* \"openzeppelin-solidity-2.3.0/contracts/utils/ReentrancyGuard.sol\":1333:1351  _guardCounter += 1 */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"openzeppelin-solidity-2.3.0/contracts/utils/ReentrancyGuard.sol\":1362:1382  uint256 localCounter */\n      0x00\n        /* \"openzeppelin-solidity-2.3.0/contracts/utils/ReentrancyGuard.sol\":1385:1398  _guardCounter */\n      sload(0x03)\n        /* \"openzeppelin-solidity-2.3.0/contracts/utils/ReentrancyGuard.sol\":1362:1398  uint256 localCounter = _guardCounter */\n      swap1\n      pop\n        /* \"contracts/Pausable.sol\":1192:1198  paused */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/Pausable.sol\":1191:1198  !paused */\n      iszero\n        /* \"contracts/Pausable.sol\":1183:1263  require(!paused, \"This action cannot be performed while the contract is paused\") */\n      tag_197\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x3c\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_b214273cdb244871f55e1966d43ad7febce81860c609dda0e226c7c1b7959d6f\n      0x3c\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_197:\n        /* \"contracts/StakingRewards.sol\":2834:2844  msg.sender */\n      caller\n        /* \"contracts/StakingRewards.sol\":5980:5996  rewardPerToken() */\n      tag_199\n        /* \"contracts/StakingRewards.sol\":5980:5994  rewardPerToken */\n      tag_106\n        /* \"contracts/StakingRewards.sol\":5980:5996  rewardPerToken() */\n      jump\t// in\n    tag_199:\n        /* \"contracts/StakingRewards.sol\":5957:5977  rewardPerTokenStored */\n      0x0b\n        /* \"contracts/StakingRewards.sol\":5957:5996  rewardPerTokenStored = rewardPerToken() */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/StakingRewards.sol\":6024:6050  lastTimeRewardApplicable() */\n      tag_200\n        /* \"contracts/StakingRewards.sol\":6024:6048  lastTimeRewardApplicable */\n      tag_86\n        /* \"contracts/StakingRewards.sol\":6024:6050  lastTimeRewardApplicable() */\n      jump\t// in\n    tag_200:\n        /* \"contracts/StakingRewards.sol\":6007:6021  lastUpdateTime */\n      0x0a\n        /* \"contracts/StakingRewards.sol\":6007:6050  lastUpdateTime = lastTimeRewardApplicable() */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/StakingRewards.sol\":6084:6085  0 */\n      0x00\n        /* \"contracts/StakingRewards.sol\":6065:6086  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/StakingRewards.sol\":6065:6072  account */\n      dup2\n        /* \"contracts/StakingRewards.sol\":6065:6086  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/StakingRewards.sol\":6061:6218  if (account != address(0)) {\r... */\n      tag_201\n      jumpi\n        /* \"contracts/StakingRewards.sol\":6122:6137  earned(account) */\n      tag_202\n        /* \"contracts/StakingRewards.sol\":6129:6136  account */\n      dup2\n        /* \"contracts/StakingRewards.sol\":6122:6128  earned */\n      tag_43\n        /* \"contracts/StakingRewards.sol\":6122:6137  earned(account) */\n      jump\t// in\n    tag_202:\n        /* \"contracts/StakingRewards.sol\":6103:6110  rewards */\n      0x0d\n        /* \"contracts/StakingRewards.sol\":6103:6119  rewards[account] */\n      0x00\n        /* \"contracts/StakingRewards.sol\":6111:6118  account */\n      dup4\n        /* \"contracts/StakingRewards.sol\":6103:6119  rewards[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/StakingRewards.sol\":6103:6137  rewards[account] = earned(account) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/StakingRewards.sol\":6186:6206  rewardPerTokenStored */\n      sload(0x0b)\n        /* \"contracts/StakingRewards.sol\":6152:6174  userRewardPerTokenPaid */\n      0x0c\n        /* \"contracts/StakingRewards.sol\":6152:6183  userRewardPerTokenPaid[account] */\n      0x00\n        /* \"contracts/StakingRewards.sol\":6175:6182  account */\n      dup4\n        /* \"contracts/StakingRewards.sol\":6152:6183  userRewardPerTokenPaid[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/StakingRewards.sol\":6152:6206  userRewardPerTokenPaid[account] = rewardPerTokenStored */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/StakingRewards.sol\":6061:6218  if (account != address(0)) {\r... */\n    tag_201:\n        /* \"contracts/StakingRewards.sol\":2874:2875  0 */\n      0x00\n        /* \"contracts/StakingRewards.sol\":2865:2871  amount */\n      dup4\n        /* \"contracts/StakingRewards.sol\":2865:2875  amount > 0 */\n      gt\n        /* \"contracts/StakingRewards.sol\":2857:2894  require(amount > 0, \"Cannot stake 0\") */\n      tag_204\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x0e\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x43616e6e6f74207374616b652030000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_204:\n        /* \"contracts/StakingRewards.sol\":2920:2944  _totalSupply.add(amount) */\n      tag_205\n        /* \"contracts/StakingRewards.sol\":2937:2943  amount */\n      dup4\n        /* \"contracts/StakingRewards.sol\":2920:2932  _totalSupply */\n      sload(0x0e)\n        /* \"contracts/StakingRewards.sol\":2920:2936  _totalSupply.add */\n      tag_124\n      swap1\n        /* \"contracts/StakingRewards.sol\":2920:2944  _totalSupply.add(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_205:\n        /* \"contracts/StakingRewards.sol\":2905:2917  _totalSupply */\n      0x0e\n        /* \"contracts/StakingRewards.sol\":2905:2944  _totalSupply = _totalSupply.add(amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/StakingRewards.sol\":2979:3012  _balances[msg.sender].add(amount) */\n      tag_206\n        /* \"contracts/StakingRewards.sol\":3005:3011  amount */\n      dup4\n        /* \"contracts/StakingRewards.sol\":2979:2988  _balances */\n      0x0f\n        /* \"contracts/StakingRewards.sol\":2979:3000  _balances[msg.sender] */\n      0x00\n        /* \"contracts/StakingRewards.sol\":2989:2999  msg.sender */\n      caller\n        /* \"contracts/StakingRewards.sol\":2979:3000  _balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/StakingRewards.sol\":2979:3004  _balances[msg.sender].add */\n      tag_124\n      swap1\n        /* \"contracts/StakingRewards.sol\":2979:3012  _balances[msg.sender].add(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_206:\n        /* \"contracts/StakingRewards.sol\":2955:2964  _balances */\n      0x0f\n        /* \"contracts/StakingRewards.sol\":2955:2976  _balances[msg.sender] */\n      0x00\n        /* \"contracts/StakingRewards.sol\":2965:2975  msg.sender */\n      caller\n        /* \"contracts/StakingRewards.sol\":2955:2976  _balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/StakingRewards.sol\":2955:3012  _balances[msg.sender] = _balances[msg.sender].add(amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/StakingRewards.sol\":3023:3087  stakingToken.safeTransferFrom(msg.sender, address(this), amount) */\n      tag_207\n        /* \"contracts/StakingRewards.sol\":3053:3063  msg.sender */\n      caller\n        /* \"contracts/StakingRewards.sol\":3073:3077  this */\n      address\n        /* \"contracts/StakingRewards.sol\":3080:3086  amount */\n      dup6\n        /* \"contracts/StakingRewards.sol\":3023:3035  stakingToken */\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/StakingRewards.sol\":3023:3052  stakingToken.safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_208\n      swap1\n        /* \"contracts/StakingRewards.sol\":3023:3087  stakingToken.safeTransferFrom(msg.sender, address(this), amount) */\n      swap4\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_207:\n        /* \"contracts/StakingRewards.sol\":3110:3120  msg.sender */\n      caller\n        /* \"contracts/StakingRewards.sol\":3103:3129  Staked(msg.sender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d\n        /* \"contracts/StakingRewards.sol\":3122:3128  amount */\n      dup5\n        /* \"contracts/StakingRewards.sol\":3103:3129  Staked(msg.sender, amount) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/Pausable.sol\":1274:1275  _ */\n      pop\n        /* \"openzeppelin-solidity-2.3.0/contracts/utils/ReentrancyGuard.sol\":1445:1458  _guardCounter */\n      sload(0x03)\n        /* \"openzeppelin-solidity-2.3.0/contracts/utils/ReentrancyGuard.sol\":1429:1441  localCounter */\n      dup2\n        /* \"openzeppelin-solidity-2.3.0/contracts/utils/ReentrancyGuard.sol\":1429:1458  localCounter == _guardCounter */\n      eq\n        /* \"openzeppelin-solidity-2.3.0/contracts/utils/ReentrancyGuard.sol\":1421:1494  require(localCounter == _guardCounter, \"ReentrancyGuard: reentrant call\") */\n      tag_209\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1f\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_209:\n        /* \"contracts/StakingRewards.sol\":2758:3137  function stake(uint256 amount) external nonReentrant notPaused updateReward(msg.sender) {\r... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/StakingRewards.sol\":944:973  uint256 public lastUpdateTime */\n    tag_101:\n      sload(0x0a)\n      dup2\n      jump\t// out\n        /* \"contracts/StakingRewards.sol\":5494:5854  function setRewardsDuration(uint256 _rewardsDuration) external onlyOwner {\r... */\n    tag_104:\n        /* \"contracts/Owned.sol\":829:841  _onlyOwner() */\n      tag_211\n        /* \"contracts/Owned.sol\":829:839  _onlyOwner */\n      tag_127\n        /* \"contracts/Owned.sol\":829:841  _onlyOwner() */\n      jump\t// in\n    tag_211:\n        /* \"contracts/StakingRewards.sol\":5618:5630  periodFinish */\n      sload(0x07)\n        /* \"contracts/StakingRewards.sol\":5600:5615  block.timestamp */\n      timestamp\n        /* \"contracts/StakingRewards.sol\":5600:5630  block.timestamp > periodFinish */\n      gt\n        /* \"contracts/StakingRewards.sol\":5578:5746  require(\r... */\n      tag_213\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x58\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_07f2725172f5941b576a01ec7036d341e0c837e280f27b110cb3e6fd2f2c4a56\n      0x58\n      swap2\n      codecopy\n      0x60\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_213:\n        /* \"contracts/StakingRewards.sol\":5775:5791  _rewardsDuration */\n      dup1\n        /* \"contracts/StakingRewards.sol\":5757:5772  rewardsDuration */\n      0x09\n        /* \"contracts/StakingRewards.sol\":5757:5791  rewardsDuration = _rewardsDuration */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/StakingRewards.sol\":5807:5846  RewardsDurationUpdated(rewardsDuration) */\n      0xfb46ca5a5e06d4540d6387b930a7c978bce0db5f449ec6b3f5d07c6e1d44f2d3\n        /* \"contracts/StakingRewards.sol\":5830:5845  rewardsDuration */\n      sload(0x09)\n        /* \"contracts/StakingRewards.sol\":5807:5846  RewardsDurationUpdated(rewardsDuration) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/StakingRewards.sol\":5494:5854  function setRewardsDuration(uint256 _rewardsDuration) external onlyOwner {\r... */\n      pop\n      jump\t// out\n        /* \"contracts/StakingRewards.sol\":2031:2361  function rewardPerToken() public view returns (uint256) {\r... */\n    tag_106:\n        /* \"contracts/StakingRewards.sol\":2078:2085  uint256 */\n      0x00\n        /* \"contracts/StakingRewards.sol\":2118:2119  0 */\n      dup1\n        /* \"contracts/StakingRewards.sol\":2102:2114  _totalSupply */\n      sload(0x0e)\n        /* \"contracts/StakingRewards.sol\":2102:2119  _totalSupply == 0 */\n      eq\n        /* \"contracts/StakingRewards.sol\":2098:2175  if (_totalSupply == 0) {\r... */\n      iszero\n      tag_215\n      jumpi\n        /* \"contracts/StakingRewards.sol\":2143:2163  rewardPerTokenStored */\n      sload(0x0b)\n        /* \"contracts/StakingRewards.sol\":2136:2163  return rewardPerTokenStored */\n      swap1\n      pop\n      jump(tag_214)\n        /* \"contracts/StakingRewards.sol\":2098:2175  if (_totalSupply == 0) {\r... */\n    tag_215:\n        /* \"contracts/StakingRewards.sol\":2205:2353  rewardPerTokenStored.add(\r... */\n      tag_216\n        /* \"contracts/StakingRewards.sol\":2248:2338  lastTimeRewardApplicable().sub(lastUpdateTime).mul(rewardRate).mul(1e18).div(_totalSupply) */\n      tag_217\n        /* \"contracts/StakingRewards.sol\":2325:2337  _totalSupply */\n      sload(0x0e)\n        /* \"contracts/StakingRewards.sol\":2248:2320  lastTimeRewardApplicable().sub(lastUpdateTime).mul(rewardRate).mul(1e18) */\n      tag_218\n        /* \"contracts/StakingRewards.sol\":2315:2319  1e18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/StakingRewards.sol\":2248:2310  lastTimeRewardApplicable().sub(lastUpdateTime).mul(rewardRate) */\n      tag_219\n        /* \"contracts/StakingRewards.sol\":2299:2309  rewardRate */\n      sload(0x08)\n        /* \"contracts/StakingRewards.sol\":2248:2294  lastTimeRewardApplicable().sub(lastUpdateTime) */\n      tag_220\n        /* \"contracts/StakingRewards.sol\":2279:2293  lastUpdateTime */\n      sload(0x0a)\n        /* \"contracts/StakingRewards.sol\":2248:2274  lastTimeRewardApplicable() */\n      tag_221\n        /* \"contracts/StakingRewards.sol\":2248:2272  lastTimeRewardApplicable */\n      tag_86\n        /* \"contracts/StakingRewards.sol\":2248:2274  lastTimeRewardApplicable() */\n      jump\t// in\n    tag_221:\n        /* \"contracts/StakingRewards.sol\":2248:2278  lastTimeRewardApplicable().sub */\n      tag_121\n      swap1\n        /* \"contracts/StakingRewards.sol\":2248:2294  lastTimeRewardApplicable().sub(lastUpdateTime) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_220:\n        /* \"contracts/StakingRewards.sol\":2248:2298  lastTimeRewardApplicable().sub(lastUpdateTime).mul */\n      tag_122\n      swap1\n        /* \"contracts/StakingRewards.sol\":2248:2310  lastTimeRewardApplicable().sub(lastUpdateTime).mul(rewardRate) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_219:\n        /* \"contracts/StakingRewards.sol\":2248:2314  lastTimeRewardApplicable().sub(lastUpdateTime).mul(rewardRate).mul */\n      tag_122\n      swap1\n        /* \"contracts/StakingRewards.sol\":2248:2320  lastTimeRewardApplicable().sub(lastUpdateTime).mul(rewardRate).mul(1e18) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_218:\n        /* \"contracts/StakingRewards.sol\":2248:2324  lastTimeRewardApplicable().sub(lastUpdateTime).mul(rewardRate).mul(1e18).div */\n      tag_123\n      swap1\n        /* \"contracts/StakingRewards.sol\":2248:2338  lastTimeRewardApplicable().sub(lastUpdateTime).mul(rewardRate).mul(1e18).div(_totalSupply) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_217:\n        /* \"contracts/StakingRewards.sol\":2205:2225  rewardPerTokenStored */\n      sload(0x0b)\n        /* \"contracts/StakingRewards.sol\":2205:2229  rewardPerTokenStored.add */\n      tag_124\n      swap1\n        /* \"contracts/StakingRewards.sol\":2205:2353  rewardPerTokenStored.add(\r... */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_216:\n        /* \"contracts/StakingRewards.sol\":2185:2353  return\r... */\n      swap1\n      pop\n        /* \"contracts/StakingRewards.sol\":2031:2361  function rewardPerToken() public view returns (uint256) {\r... */\n    tag_214:\n      swap1\n      jump\t// out\n        /* \"contracts/StakingRewards.sol\":758:784  IERC20 public rewardsToken */\n    tag_108:\n      0x05\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/StakingRewards.sol\":980:1015  uint256 public rewardPerTokenStored */\n    tag_110:\n      sload(0x0b)\n      dup2\n      jump\t// out\n        /* \"contracts/StakingRewards.sol\":3825:3922  function exit() external {\r... */\n    tag_112:\n        /* \"contracts/StakingRewards.sol\":3861:3892  withdraw(_balances[msg.sender]) */\n      tag_223\n        /* \"contracts/StakingRewards.sol\":3870:3879  _balances */\n      0x0f\n        /* \"contracts/StakingRewards.sol\":3870:3891  _balances[msg.sender] */\n      0x00\n        /* \"contracts/StakingRewards.sol\":3880:3890  msg.sender */\n      caller\n        /* \"contracts/StakingRewards.sol\":3870:3891  _balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/StakingRewards.sol\":3861:3869  withdraw */\n      tag_62\n        /* \"contracts/StakingRewards.sol\":3861:3892  withdraw(_balances[msg.sender]) */\n      jump\t// in\n    tag_223:\n        /* \"contracts/StakingRewards.sol\":3903:3914  getReward() */\n      tag_224\n        /* \"contracts/StakingRewards.sol\":3903:3912  getReward */\n      tag_69\n        /* \"contracts/StakingRewards.sol\":3903:3914  getReward() */\n      jump\t// in\n    tag_224:\n        /* \"contracts/StakingRewards.sol\":3825:3922  function exit() external {\r... */\n      jump\t// out\n        /* \"contracts/StakingRewards.sol\":824:855  uint256 public periodFinish = 0 */\n    tag_114:\n      sload(0x07)\n      dup2\n      jump\t// out\n        /* \"openzeppelin-solidity-2.3.0/contracts/math/SafeMath.sol\":1315:1499  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n    tag_121:\n        /* \"openzeppelin-solidity-2.3.0/contracts/math/SafeMath.sol\":1373:1380  uint256 */\n      0x00\n        /* \"openzeppelin-solidity-2.3.0/contracts/math/SafeMath.sol\":1406:1407  a */\n      dup3\n        /* \"openzeppelin-solidity-2.3.0/contracts/math/SafeMath.sol\":1401:1402  b */\n      dup3\n        /* \"openzeppelin-solidity-2.3.0/contracts/math/SafeMath.sol\":1401:1407  b <= a */\n      gt\n      iszero\n        /* \"openzeppelin-solidity-2.3.0/contracts/math/SafeMath.sol\":1393:1442  require(b <= a, \"SafeMath: subtraction overflow\") */\n      tag_226\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1e\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_226:\n        /* \"openzeppelin-solidity-2.3.0/contracts/math/SafeMath.sol\":1453:1462  uint256 c */\n      0x00\n        /* \"openzeppelin-solidity-2.3.0/contracts/math/SafeMath.sol\":1469:1470  b */\n      dup3\n        /* \"openzeppelin-solidity-2.3.0/contracts/math/SafeMath.sol\":1465:1466  a */\n      dup5\n        /* \"openzeppelin-solidity-2.3.0/contracts/math/SafeMath.sol\":1465:1470  a - b */\n      sub\n        /* \"openzeppelin-solidity-2.3.0/contracts/math/SafeMath.sol\":1453:1470  uint256 c = a - b */\n      swap1\n      pop\n        /* \"openzeppelin-solidity-2.3.0/contracts/math/SafeMath.sol\":1490:1491  c */\n      dup1\n        /* \"openzeppelin-solidity-2.3.0/contracts/math/SafeMath.sol\":1483:1491  return c */\n      swap2\n      pop\n      pop\n        /* \"openzeppelin-solidity-2.3.0/contracts/math/SafeMath.sol\":1315:1499  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"openzeppelin-solidity-2.3.0/contracts/math/SafeMath.sol\":1750:2221  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n    tag_122:\n        /* \"openzeppelin-solidity-2.3.0/contracts/math/SafeMath.sol\":1808:1815  uint256 */\n      0x00\n        /* \"openzeppelin-solidity-2.3.0/contracts/math/SafeMath.sol\":2058:2059  0 */\n      dup1\n        /* \"openzeppelin-solidity-2.3.0/contracts/math/SafeMath.sol\":2053:2054  a */\n      dup4\n        /* \"openzeppelin-solidity-2.3.0/contracts/math/SafeMath.sol\":2053:2059  a == 0 */\n      eq\n        /* \"openzeppelin-solidity-2.3.0/contracts/math/SafeMath.sol\":2049:2096  if (a == 0) {\r... */\n      iszero\n      tag_228\n      jumpi\n        /* \"openzeppelin-solidity-2.3.0/contracts/math/SafeMath.sol\":2083:2084  0 */\n      0x00\n        /* \"openzeppelin-solidity-2.3.0/contracts/math/SafeMath.sol\":2076:2084  return 0 */\n      swap1\n      pop\n      jump(tag_227)\n        /* \"openzeppelin-solidity-2.3.0/contracts/math/SafeMath.sol\":2049:2096  if (a == 0) {\r... */\n    tag_228:\n        /* \"openzeppelin-solidity-2.3.0/contracts/math/SafeMath.sol\":2108:2117  uint256 c */\n      0x00\n        /* \"openzeppelin-solidity-2.3.0/contracts/math/SafeMath.sol\":2124:2125  b */\n      dup3\n        /* \"openzeppelin-solidity-2.3.0/contracts/math/SafeMath.sol\":2120:2121  a */\n      dup5\n        /* \"openzeppelin-solidity-2.3.0/contracts/math/SafeMath.sol\":2120:2125  a * b */\n      mul\n        /* \"openzeppelin-solidity-2.3.0/contracts/math/SafeMath.sol\":2108:2125  uint256 c = a * b */\n      swap1\n      pop\n        /* \"openzeppelin-solidity-2.3.0/contracts/math/SafeMath.sol\":2153:2154  b */\n      dup3\n        /* \"openzeppelin-solidity-2.3.0/contracts/math/SafeMath.sol\":2148:2149  a */\n      dup5\n        /* \"openzeppelin-solidity-2.3.0/contracts/math/SafeMath.sol\":2144:2145  c */\n      dup3\n        /* \"openzeppelin-solidity-2.3.0/contracts/math/SafeMath.sol\":2144:2149  c / a */\n      dup2\n      tag_229\n      jumpi\n      invalid\n    tag_229:\n      div\n        /* \"openzeppelin-solidity-2.3.0/contracts/math/SafeMath.sol\":2144:2154  c / a == b */\n      eq\n        /* \"openzeppelin-solidity-2.3.0/contracts/math/SafeMath.sol\":2136:2192  require(c / a == b, \"SafeMath: multiplication overflow\") */\n      tag_230\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x21\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3\n      0x21\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_230:\n        /* \"openzeppelin-solidity-2.3.0/contracts/math/SafeMath.sol\":2212:2213  c */\n      dup1\n        /* \"openzeppelin-solidity-2.3.0/contracts/math/SafeMath.sol\":2205:2213  return c */\n      swap2\n      pop\n      pop\n        /* \"openzeppelin-solidity-2.3.0/contracts/math/SafeMath.sol\":1750:2221  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n    tag_227:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"openzeppelin-solidity-2.3.0/contracts/math/SafeMath.sol\":2689:3022  function div(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n    tag_123:\n        /* \"openzeppelin-solidity-2.3.0/contracts/math/SafeMath.sol\":2747:2754  uint256 */\n      0x00\n        /* \"openzeppelin-solidity-2.3.0/contracts/math/SafeMath.sol\":2846:2847  0 */\n      dup1\n        /* \"openzeppelin-solidity-2.3.0/contracts/math/SafeMath.sol\":2842:2843  b */\n      dup3\n        /* \"openzeppelin-solidity-2.3.0/contracts/math/SafeMath.sol\":2842:2847  b > 0 */\n      gt\n        /* \"openzeppelin-solidity-2.3.0/contracts/math/SafeMath.sol\":2834:2878  require(b > 0, \"SafeMath: division by zero\") */\n      tag_232\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1a\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x536166654d6174683a206469766973696f6e206279207a65726f000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_232:\n        /* \"openzeppelin-solidity-2.3.0/contracts/math/SafeMath.sol\":2889:2898  uint256 c */\n      0x00\n        /* \"openzeppelin-solidity-2.3.0/contracts/math/SafeMath.sol\":2905:2906  b */\n      dup3\n        /* \"openzeppelin-solidity-2.3.0/contracts/math/SafeMath.sol\":2901:2902  a */\n      dup5\n        /* \"openzeppelin-solidity-2.3.0/contracts/math/SafeMath.sol\":2901:2906  a / b */\n      dup2\n      tag_233\n      jumpi\n      invalid\n    tag_233:\n      div\n        /* \"openzeppelin-solidity-2.3.0/contracts/math/SafeMath.sol\":2889:2906  uint256 c = a / b */\n      swap1\n      pop\n        /* \"openzeppelin-solidity-2.3.0/contracts/math/SafeMath.sol\":3013:3014  c */\n      dup1\n        /* \"openzeppelin-solidity-2.3.0/contracts/math/SafeMath.sol\":3006:3014  return c */\n      swap2\n      pop\n      pop\n        /* \"openzeppelin-solidity-2.3.0/contracts/math/SafeMath.sol\":2689:3022  function div(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"openzeppelin-solidity-2.3.0/contracts/math/SafeMath.sol\":859:1040  function add(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n    tag_124:\n        /* \"openzeppelin-solidity-2.3.0/contracts/math/SafeMath.sol\":917:924  uint256 */\n      0x00\n        /* \"openzeppelin-solidity-2.3.0/contracts/math/SafeMath.sol\":937:946  uint256 c */\n      dup1\n        /* \"openzeppelin-solidity-2.3.0/contracts/math/SafeMath.sol\":953:954  b */\n      dup3\n        /* \"openzeppelin-solidity-2.3.0/contracts/math/SafeMath.sol\":949:950  a */\n      dup5\n        /* \"openzeppelin-solidity-2.3.0/contracts/math/SafeMath.sol\":949:954  a + b */\n      add\n        /* \"openzeppelin-solidity-2.3.0/contracts/math/SafeMath.sol\":937:954  uint256 c = a + b */\n      swap1\n      pop\n        /* \"openzeppelin-solidity-2.3.0/contracts/math/SafeMath.sol\":978:979  a */\n      dup4\n        /* \"openzeppelin-solidity-2.3.0/contracts/math/SafeMath.sol\":973:974  c */\n      dup2\n        /* \"openzeppelin-solidity-2.3.0/contracts/math/SafeMath.sol\":973:979  c >= a */\n      lt\n      iszero\n        /* \"openzeppelin-solidity-2.3.0/contracts/math/SafeMath.sol\":965:1011  require(c >= a, \"SafeMath: addition overflow\") */\n      tag_235\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1b\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_235:\n        /* \"openzeppelin-solidity-2.3.0/contracts/math/SafeMath.sol\":1031:1032  c */\n      dup1\n        /* \"openzeppelin-solidity-2.3.0/contracts/math/SafeMath.sol\":1024:1032  return c */\n      swap2\n      pop\n      pop\n        /* \"openzeppelin-solidity-2.3.0/contracts/math/SafeMath.sol\":859:1040  function add(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Owned.sol\":869:1002  function _onlyOwner() private view {\r... */\n    tag_127:\n        /* \"contracts/Owned.sol\":937:942  owner */\n      0x00\n      dup1\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Owned.sol\":923:942  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Owned.sol\":923:933  msg.sender */\n      caller\n        /* \"contracts/Owned.sol\":923:942  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/Owned.sol\":915:994  require(msg.sender == owner, \"Only the contract owner may perform this action\") */\n      tag_237\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x2f\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_873d2051b76e0142b287297afdfc273bf1ab5c24ee229ed4ef117f1ff0679a4a\n      0x2f\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_237:\n        /* \"contracts/Owned.sol\":869:1002  function _onlyOwner() private view {\r... */\n      jump\t// out\n        /* \"openzeppelin-solidity-2.3.0/contracts/token/ERC20/SafeERC20.sol\":681:857  function safeTransfer(IERC20 token, address to, uint256 value) internal {\r... */\n    tag_151:\n        /* \"openzeppelin-solidity-2.3.0/contracts/token/ERC20/SafeERC20.sol\":764:849  callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value)) */\n      tag_239\n        /* \"openzeppelin-solidity-2.3.0/contracts/token/ERC20/SafeERC20.sol\":783:788  token */\n      dup4\n        /* \"openzeppelin-solidity-2.3.0/contracts/token/ERC20/SafeERC20.sol\":813:818  token */\n      dup5\n        /* \"openzeppelin-solidity-2.3.0/contracts/token/ERC20/SafeERC20.sol\":813:827  token.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"openzeppelin-solidity-2.3.0/contracts/token/ERC20/SafeERC20.sol\":813:836  token.transfer.selector */\n      swap1\n      pop\n      0xe0\n      shl\n        /* \"openzeppelin-solidity-2.3.0/contracts/token/ERC20/SafeERC20.sol\":838:840  to */\n      dup5\n        /* \"openzeppelin-solidity-2.3.0/contracts/token/ERC20/SafeERC20.sol\":842:847  value */\n      dup5\n        /* \"openzeppelin-solidity-2.3.0/contracts/token/ERC20/SafeERC20.sol\":790:848  abi.encodeWithSelector(token.transfer.selector, to, value) */\n      add(0x24, mload(0x40))\n      dup1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n        /* \"--CODEGEN--\":49:53   */\n      0x20\n        /* \"--CODEGEN--\":39:46   */\n      dup2\n        /* \"--CODEGEN--\":30:37   */\n      dup4\n        /* \"--CODEGEN--\":26:47   */\n      sub\n        /* \"--CODEGEN--\":22:54   */\n      sub\n        /* \"--CODEGEN--\":13:20   */\n      dup2\n        /* \"--CODEGEN--\":6:55   */\n      mstore\n        /* \"openzeppelin-solidity-2.3.0/contracts/token/ERC20/SafeERC20.sol\":790:848  abi.encodeWithSelector(token.transfer.selector, to, value) */\n      swap1\n      0x40\n      mstore\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"--CODEGEN--\":38:42   */\n      0x20\n        /* \"--CODEGEN--\":29:36   */\n      dup3\n        /* \"--CODEGEN--\":25:43   */\n      add\n        /* \"--CODEGEN--\":67:77   */\n      dup1\n        /* \"--CODEGEN--\":61:78   */\n      mload\n        /* \"--CODEGEN--\":96:154   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"--CODEGEN--\":199:207   */\n      dup4\n        /* \"--CODEGEN--\":192:196   */\n      dup2\n        /* \"--CODEGEN--\":186:190   */\n      dup4\n        /* \"--CODEGEN--\":182:197   */\n      and\n        /* \"--CODEGEN--\":179:208   */\n      or\n        /* \"--CODEGEN--\":167:177   */\n      dup4\n        /* \"--CODEGEN--\":160:209   */\n      mstore\n        /* \"--CODEGEN--\":0:215   */\n      pop\n      pop\n      pop\n        /* \"openzeppelin-solidity-2.3.0/contracts/token/ERC20/SafeERC20.sol\":790:848  abi.encodeWithSelector(token.transfer.selector, to, value) */\n      pop\n        /* \"openzeppelin-solidity-2.3.0/contracts/token/ERC20/SafeERC20.sol\":764:782  callOptionalReturn */\n      tag_240\n        /* \"openzeppelin-solidity-2.3.0/contracts/token/ERC20/SafeERC20.sol\":764:849  callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value)) */\n      jump\t// in\n    tag_239:\n        /* \"openzeppelin-solidity-2.3.0/contracts/token/ERC20/SafeERC20.sol\":681:857  function safeTransfer(IERC20 token, address to, uint256 value) internal {\r... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"openzeppelin-solidity-2.3.0/contracts/token/ERC20/SafeERC20.sol\":865:1069  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\r... */\n    tag_208:\n        /* \"openzeppelin-solidity-2.3.0/contracts/token/ERC20/SafeERC20.sol\":966:1061  callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value)) */\n      tag_242\n        /* \"openzeppelin-solidity-2.3.0/contracts/token/ERC20/SafeERC20.sol\":985:990  token */\n      dup5\n        /* \"openzeppelin-solidity-2.3.0/contracts/token/ERC20/SafeERC20.sol\":1015:1020  token */\n      dup6\n        /* \"openzeppelin-solidity-2.3.0/contracts/token/ERC20/SafeERC20.sol\":1015:1033  token.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"openzeppelin-solidity-2.3.0/contracts/token/ERC20/SafeERC20.sol\":1015:1042  token.transferFrom.selector */\n      swap1\n      pop\n      0xe0\n      shl\n        /* \"openzeppelin-solidity-2.3.0/contracts/token/ERC20/SafeERC20.sol\":1044:1048  from */\n      dup6\n        /* \"openzeppelin-solidity-2.3.0/contracts/token/ERC20/SafeERC20.sol\":1050:1052  to */\n      dup6\n        /* \"openzeppelin-solidity-2.3.0/contracts/token/ERC20/SafeERC20.sol\":1054:1059  value */\n      dup6\n        /* \"openzeppelin-solidity-2.3.0/contracts/token/ERC20/SafeERC20.sol\":992:1060  abi.encodeWithSelector(token.transferFrom.selector, from, to, value) */\n      add(0x24, mload(0x40))\n      dup1\n      dup5\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap4\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n        /* \"--CODEGEN--\":49:53   */\n      0x20\n        /* \"--CODEGEN--\":39:46   */\n      dup2\n        /* \"--CODEGEN--\":30:37   */\n      dup4\n        /* \"--CODEGEN--\":26:47   */\n      sub\n        /* \"--CODEGEN--\":22:54   */\n      sub\n        /* \"--CODEGEN--\":13:20   */\n      dup2\n        /* \"--CODEGEN--\":6:55   */\n      mstore\n        /* \"openzeppelin-solidity-2.3.0/contracts/token/ERC20/SafeERC20.sol\":992:1060  abi.encodeWithSelector(token.transferFrom.selector, from, to, value) */\n      swap1\n      0x40\n      mstore\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"--CODEGEN--\":38:42   */\n      0x20\n        /* \"--CODEGEN--\":29:36   */\n      dup3\n        /* \"--CODEGEN--\":25:43   */\n      add\n        /* \"--CODEGEN--\":67:77   */\n      dup1\n        /* \"--CODEGEN--\":61:78   */\n      mload\n        /* \"--CODEGEN--\":96:154   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"--CODEGEN--\":199:207   */\n      dup4\n        /* \"--CODEGEN--\":192:196   */\n      dup2\n        /* \"--CODEGEN--\":186:190   */\n      dup4\n        /* \"--CODEGEN--\":182:197   */\n      and\n        /* \"--CODEGEN--\":179:208   */\n      or\n        /* \"--CODEGEN--\":167:177   */\n      dup4\n        /* \"--CODEGEN--\":160:209   */\n      mstore\n        /* \"--CODEGEN--\":0:215   */\n      pop\n      pop\n      pop\n        /* \"openzeppelin-solidity-2.3.0/contracts/token/ERC20/SafeERC20.sol\":992:1060  abi.encodeWithSelector(token.transferFrom.selector, from, to, value) */\n      pop\n        /* \"openzeppelin-solidity-2.3.0/contracts/token/ERC20/SafeERC20.sol\":966:984  callOptionalReturn */\n      tag_240\n        /* \"openzeppelin-solidity-2.3.0/contracts/token/ERC20/SafeERC20.sol\":966:1061  callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value)) */\n      jump\t// in\n    tag_242:\n        /* \"openzeppelin-solidity-2.3.0/contracts/token/ERC20/SafeERC20.sol\":865:1069  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\r... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"openzeppelin-solidity-2.3.0/contracts/token/ERC20/SafeERC20.sol\":2675:3789  function callOptionalReturn(IERC20 token, bytes memory data) private {\r... */\n    tag_240:\n        /* \"openzeppelin-solidity-2.3.0/contracts/token/ERC20/SafeERC20.sol\":3279:3306  address(token).isContract() */\n      tag_244\n        /* \"openzeppelin-solidity-2.3.0/contracts/token/ERC20/SafeERC20.sol\":3287:3292  token */\n      dup3\n        /* \"openzeppelin-solidity-2.3.0/contracts/token/ERC20/SafeERC20.sol\":3279:3304  address(token).isContract */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_245\n        /* \"openzeppelin-solidity-2.3.0/contracts/token/ERC20/SafeERC20.sol\":3279:3306  address(token).isContract() */\n      jump\t// in\n    tag_244:\n        /* \"openzeppelin-solidity-2.3.0/contracts/token/ERC20/SafeERC20.sol\":3271:3342  require(address(token).isContract(), \"SafeERC20: call to non-contract\") */\n      tag_246\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1f\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x5361666545524332303a2063616c6c20746f206e6f6e2d636f6e747261637400\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_246:\n        /* \"openzeppelin-solidity-2.3.0/contracts/token/ERC20/SafeERC20.sol\":3416:3428  bool success */\n      0x00\n        /* \"openzeppelin-solidity-2.3.0/contracts/token/ERC20/SafeERC20.sol\":3430:3453  bytes memory returndata */\n      0x60\n        /* \"openzeppelin-solidity-2.3.0/contracts/token/ERC20/SafeERC20.sol\":3465:3470  token */\n      dup4\n        /* \"openzeppelin-solidity-2.3.0/contracts/token/ERC20/SafeERC20.sol\":3457:3476  address(token).call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"openzeppelin-solidity-2.3.0/contracts/token/ERC20/SafeERC20.sol\":3477:3481  data */\n      dup4\n        /* \"openzeppelin-solidity-2.3.0/contracts/token/ERC20/SafeERC20.sol\":3457:3482  address(token).call(data) */\n      mload(0x40)\n      dup1\n      dup3\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":36:189   */\n    tag_247:\n        /* \"--CODEGEN--\":66:68   */\n      0x20\n        /* \"--CODEGEN--\":61:64   */\n      dup4\n        /* \"--CODEGEN--\":58:69   */\n      lt\n        /* \"--CODEGEN--\":36:189   */\n      tag_249\n      jumpi\n        /* \"--CODEGEN--\":182:185   */\n      dup1\n        /* \"--CODEGEN--\":176:186   */\n      mload\n        /* \"--CODEGEN--\":171:174   */\n      dup3\n        /* \"--CODEGEN--\":164:187   */\n      mstore\n        /* \"--CODEGEN--\":98:100   */\n      0x20\n        /* \"--CODEGEN--\":93:96   */\n      dup3\n        /* \"--CODEGEN--\":89:101   */\n      add\n        /* \"--CODEGEN--\":82:101   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":123:125   */\n      0x20\n        /* \"--CODEGEN--\":118:121   */\n      dup2\n        /* \"--CODEGEN--\":114:126   */\n      add\n        /* \"--CODEGEN--\":107:126   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":148:150   */\n      0x20\n        /* \"--CODEGEN--\":143:146   */\n      dup4\n        /* \"--CODEGEN--\":139:151   */\n      sub\n        /* \"--CODEGEN--\":132:151   */\n      swap3\n      pop\n        /* \"--CODEGEN--\":36:189   */\n      jump(tag_247)\n    tag_249:\n        /* \"--CODEGEN--\":274:275   */\n      0x01\n        /* \"--CODEGEN--\":267:270   */\n      dup4\n        /* \"--CODEGEN--\":263:265   */\n      0x20\n        /* \"--CODEGEN--\":259:271   */\n      sub\n        /* \"--CODEGEN--\":254:257   */\n      0x0100\n        /* \"--CODEGEN--\":250:272   */\n      exp\n        /* \"--CODEGEN--\":246:276   */\n      sub\n        /* \"--CODEGEN--\":315:319   */\n      dup1\n        /* \"--CODEGEN--\":311:320   */\n      not\n        /* \"--CODEGEN--\":305:308   */\n      dup3\n        /* \"--CODEGEN--\":299:309   */\n      mload\n        /* \"--CODEGEN--\":295:321   */\n      and\n        /* \"--CODEGEN--\":356:360   */\n      dup2\n        /* \"--CODEGEN--\":350:353   */\n      dup5\n        /* \"--CODEGEN--\":344:354   */\n      mload\n        /* \"--CODEGEN--\":340:361   */\n      and\n        /* \"--CODEGEN--\":389:396   */\n      dup1\n        /* \"--CODEGEN--\":380:387   */\n      dup3\n        /* \"--CODEGEN--\":377:397   */\n      or\n        /* \"--CODEGEN--\":372:375   */\n      dup6\n        /* \"--CODEGEN--\":365:398   */\n      mstore\n        /* \"--CODEGEN--\":3:402   */\n      pop\n      pop\n      pop\n        /* \"openzeppelin-solidity-2.3.0/contracts/token/ERC20/SafeERC20.sol\":3457:3482  address(token).call(data) */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      add\n      swap2\n      pop\n      pop\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup7\n      gas\n      call\n      swap2\n      pop\n      pop\n      returndatasize\n        /* \"--CODEGEN--\":14:15   */\n      dup1\n        /* \"--CODEGEN--\":21:22   */\n      0x00\n        /* \"--CODEGEN--\":16:47   */\n      dup2\n      eq\n      tag_251\n      jumpi\n        /* \"--CODEGEN--\":75:79   */\n      0x40\n        /* \"--CODEGEN--\":69:80   */\n      mload\n        /* \"--CODEGEN--\":64:80   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":144:148   */\n      0x1f\n        /* \"--CODEGEN--\":140:149   */\n      not\n        /* \"--CODEGEN--\":133:137   */\n      0x3f\n        /* \"--CODEGEN--\":115:131   */\n      returndatasize\n        /* \"--CODEGEN--\":111:138   */\n      add\n        /* \"--CODEGEN--\":107:150   */\n      and\n        /* \"--CODEGEN--\":104:105   */\n      dup3\n        /* \"--CODEGEN--\":100:151   */\n      add\n        /* \"--CODEGEN--\":94:98   */\n      0x40\n        /* \"--CODEGEN--\":87:152   */\n      mstore\n        /* \"--CODEGEN--\":169:185   */\n      returndatasize\n        /* \"--CODEGEN--\":166:167   */\n      dup3\n        /* \"--CODEGEN--\":159:186   */\n      mstore\n        /* \"--CODEGEN--\":225:241   */\n      returndatasize\n        /* \"--CODEGEN--\":222:223   */\n      0x00\n        /* \"--CODEGEN--\":215:219   */\n      0x20\n        /* \"--CODEGEN--\":212:213   */\n      dup5\n        /* \"--CODEGEN--\":208:220   */\n      add\n        /* \"--CODEGEN--\":193:242   */\n      returndatacopy\n        /* \"--CODEGEN--\":7:249   */\n      jump(tag_250)\n        /* \"--CODEGEN--\":16:47   */\n    tag_251:\n        /* \"--CODEGEN--\":36:40   */\n      0x60\n        /* \"--CODEGEN--\":31:40   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":7:249   */\n    tag_250:\n      pop\n        /* \"openzeppelin-solidity-2.3.0/contracts/token/ERC20/SafeERC20.sol\":3415:3482  (bool success, bytes memory returndata) = address(token).call(data) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"openzeppelin-solidity-2.3.0/contracts/token/ERC20/SafeERC20.sol\":3501:3508  success */\n      dup2\n        /* \"openzeppelin-solidity-2.3.0/contracts/token/ERC20/SafeERC20.sol\":3493:3545  require(success, \"SafeERC20: low-level call failed\") */\n      tag_252\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_252:\n        /* \"openzeppelin-solidity-2.3.0/contracts/token/ERC20/SafeERC20.sol\":3582:3583  0 */\n      0x00\n        /* \"openzeppelin-solidity-2.3.0/contracts/token/ERC20/SafeERC20.sol\":3562:3572  returndata */\n      dup2\n        /* \"openzeppelin-solidity-2.3.0/contracts/token/ERC20/SafeERC20.sol\":3562:3579  returndata.length */\n      mload\n        /* \"openzeppelin-solidity-2.3.0/contracts/token/ERC20/SafeERC20.sol\":3562:3583  returndata.length > 0 */\n      gt\n        /* \"openzeppelin-solidity-2.3.0/contracts/token/ERC20/SafeERC20.sol\":3558:3782  if (returndata.length > 0) { // Return data is optional\r... */\n      iszero\n      tag_253\n      jumpi\n        /* \"openzeppelin-solidity-2.3.0/contracts/token/ERC20/SafeERC20.sol\":3704:3714  returndata */\n      dup1\n        /* \"openzeppelin-solidity-2.3.0/contracts/token/ERC20/SafeERC20.sol\":3693:3723  abi.decode(returndata, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_254\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_254:\n        /* \"openzeppelin-solidity-2.3.0/contracts/token/ERC20/SafeERC20.sol\":3693:3723  abi.decode(returndata, (bool)) */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"openzeppelin-solidity-2.3.0/contracts/token/ERC20/SafeERC20.sol\":3685:3770  require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\") */\n      tag_255\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x2a\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd\n      0x2a\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_255:\n        /* \"openzeppelin-solidity-2.3.0/contracts/token/ERC20/SafeERC20.sol\":3558:3782  if (returndata.length > 0) { // Return data is optional\r... */\n    tag_253:\n        /* \"openzeppelin-solidity-2.3.0/contracts/token/ERC20/SafeERC20.sol\":2675:3789  function callOptionalReturn(IERC20 token, bytes memory data) private {\r... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"openzeppelin-solidity-2.3.0/contracts/utils/Address.sol\":558:980  function isContract(address account) internal view returns (bool) {\r... */\n    tag_245:\n        /* \"openzeppelin-solidity-2.3.0/contracts/utils/Address.sol\":618:622  bool */\n      0x00\n        /* \"openzeppelin-solidity-2.3.0/contracts/utils/Address.sol\":826:838  uint256 size */\n      dup1\n        /* \"openzeppelin-solidity-2.3.0/contracts/utils/Address.sol\":937:944  account */\n      dup3\n        /* \"openzeppelin-solidity-2.3.0/contracts/utils/Address.sol\":925:945  extcodesize(account) */\n      extcodesize\n        /* \"openzeppelin-solidity-2.3.0/contracts/utils/Address.sol\":917:945  size := extcodesize(account) */\n      swap1\n      pop\n        /* \"openzeppelin-solidity-2.3.0/contracts/utils/Address.sol\":971:972  0 */\n      0x00\n        /* \"openzeppelin-solidity-2.3.0/contracts/utils/Address.sol\":964:968  size */\n      dup2\n        /* \"openzeppelin-solidity-2.3.0/contracts/utils/Address.sol\":964:972  size > 0 */\n      gt\n        /* \"openzeppelin-solidity-2.3.0/contracts/utils/Address.sol\":957:972  return size > 0 */\n      swap2\n      pop\n      pop\n        /* \"openzeppelin-solidity-2.3.0/contracts/utils/Address.sol\":558:980  function isContract(address account) internal view returns (bool) {\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n    stop\n    data_07f2725172f5941b576a01ec7036d341e0c837e280f27b110cb3e6fd2f2c4a56 50726576696f7573207265776172647320706572696f64206d75737420626520636f6d706c657465206265666f7265206368616e67696e6720746865206475726174696f6e20666f7220746865206e657720706572696f64\n    data_1149e36cd24095bebc9341ef03810e0e2a00039190624df6f2d7934141e2233b 596f75206d757374206265206e6f6d696e61746564206265666f726520796f752063616e20616363657074206f776e657273686970\n    data_873d2051b76e0142b287297afdfc273bf1ab5c24ee229ed4ef117f1ff0679a4a 4f6e6c792074686520636f6e7472616374206f776e6572206d617920706572666f726d207468697320616374696f6e\n    data_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3 536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77\n    data_b214273cdb244871f55e1966d43ad7febce81860c609dda0e226c7c1b7959d6f 5468697320616374696f6e2063616e6e6f7420626520706572666f726d6564207768696c652074686520636f6e747261637420697320706175736564\n    data_d50b095422f4cbfcb4c90fbd4d55aaf0967bf1d90e94bb6a1ae9fc4ee7e733de 43616c6c6572206973206e6f742052657761726473446973747269627574696f6e20636f6e7472616374\n    data_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd 5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564\n    data_f43de9f2a3539b2ac9cf1844588e9cc0acd1b2bdb1ec43734f76440993ede0a9 43616e6e6f7420776974686472617720746865207374616b696e6720746f6b656e\n\n    auxdata: 0xa265627a7a7231582006e94228cee1c056a7c52d7d287a7a59b0962bdf14a3600cb664e2cdc13b6e6264736f6c63430005100032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 PUSH1 0x7 SSTORE PUSH1 0x0 PUSH1 0x8 SSTORE PUSH3 0x93A80 PUSH1 0x9 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x21 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x2B24 CODESIZE SUB DUP1 PUSH2 0x2B24 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE PUSH1 0x80 DUP2 LT ISZERO PUSH2 0x44 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP DUP4 PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x117 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x19 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E657220616464726573732063616E6E6F74206265203000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0xB532073B38C83145E3E5135377A08BF9AAB55BC0FD7C1179CD4FB995D2A5159C PUSH1 0x0 DUP3 PUSH1 0x40 MLOAD DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP PUSH1 0x1 PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x2BC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x11 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E6572206D75737420626520736574000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x5 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x6 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP POP PUSH2 0x2792 DUP1 PUSH2 0x392 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1E4 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x72F702F3 GT PUSH2 0x10F JUMPI DUP1 PUSH4 0xA694FC3A GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xD1AF0C7D GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xD1AF0C7D EQ PUSH2 0x755 JUMPI DUP1 PUSH4 0xDF136D65 EQ PUSH2 0x79F JUMPI DUP1 PUSH4 0xE9FAD8EE EQ PUSH2 0x7BD JUMPI DUP1 PUSH4 0xEBE2B12B EQ PUSH2 0x7C7 JUMPI PUSH2 0x1E4 JUMP JUMPDEST DUP1 PUSH4 0xA694FC3A EQ PUSH2 0x6BD JUMPI DUP1 PUSH4 0xC8F33C91 EQ PUSH2 0x6EB JUMPI DUP1 PUSH4 0xCC1A378F EQ PUSH2 0x709 JUMPI DUP1 PUSH4 0xCD3DAF9D EQ PUSH2 0x737 JUMPI PUSH2 0x1E4 JUMP JUMPDEST DUP1 PUSH4 0x8980F11F GT PUSH2 0xDE JUMPI DUP1 PUSH4 0x8980F11F EQ PUSH2 0x5AF JUMPI DUP1 PUSH4 0x8B876347 EQ PUSH2 0x5FD JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x655 JUMPI DUP1 PUSH4 0x91B4DED9 EQ PUSH2 0x69F JUMPI PUSH2 0x1E4 JUMP JUMPDEST DUP1 PUSH4 0x72F702F3 EQ PUSH2 0x51F JUMPI DUP1 PUSH4 0x79BA5097 EQ PUSH2 0x569 JUMPI DUP1 PUSH4 0x7B0A47EE EQ PUSH2 0x573 JUMPI DUP1 PUSH4 0x80FAA57D EQ PUSH2 0x591 JUMPI PUSH2 0x1E4 JUMP JUMPDEST DUP1 PUSH4 0x2E1A7D4D GT PUSH2 0x187 JUMPI DUP1 PUSH4 0x3FC6DF6E GT PUSH2 0x156 JUMPI DUP1 PUSH4 0x3FC6DF6E EQ PUSH2 0x411 JUMPI DUP1 PUSH4 0x53A47BB7 EQ PUSH2 0x45B JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x4A5 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x4C7 JUMPI PUSH2 0x1E4 JUMP JUMPDEST DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x38D JUMPI DUP1 PUSH4 0x386A9525 EQ PUSH2 0x3BB JUMPI DUP1 PUSH4 0x3C6B16AB EQ PUSH2 0x3D9 JUMPI DUP1 PUSH4 0x3D18B912 EQ PUSH2 0x407 JUMPI PUSH2 0x1E4 JUMP JUMPDEST DUP1 PUSH4 0x16C38B3C GT PUSH2 0x1C3 JUMPI DUP1 PUSH4 0x16C38B3C EQ PUSH2 0x2DD JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x30D JUMPI DUP1 PUSH4 0x19762143 EQ PUSH2 0x32B JUMPI DUP1 PUSH4 0x1C1F78EB EQ PUSH2 0x36F JUMPI PUSH2 0x1E4 JUMP JUMPDEST DUP1 PUSH3 0x8CC262 EQ PUSH2 0x1E9 JUMPI DUP1 PUSH4 0x700037D EQ PUSH2 0x241 JUMPI DUP1 PUSH4 0x1627540C EQ PUSH2 0x299 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x22B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x7E5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x283 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x257 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x903 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2DB PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x91B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x30B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD ISZERO ISZERO SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x9CA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x315 PUSH2 0xA77 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x36D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x341 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xA81 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x377 PUSH2 0xACD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3B9 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xAEB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3C3 PUSH2 0xE24 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x405 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xE2A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x40F PUSH2 0x1208 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x419 PUSH2 0x14AE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x463 PUSH2 0x14D4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4AD PUSH2 0x14FA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x509 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x4DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x150D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x527 PUSH2 0x1556 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x571 PUSH2 0x157C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x57B PUSH2 0x17A2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x599 PUSH2 0x17A8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5FB PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x5C5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x17C2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x63F PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x613 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x192C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x65D PUSH2 0x1944 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6A7 PUSH2 0x1969 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6E9 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x6D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x196F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x6F3 PUSH2 0x1D10 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x735 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x71F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1D16 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x73F PUSH2 0x1DBB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x75D PUSH2 0x1E49 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7A7 PUSH2 0x1E6F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7C5 PUSH2 0x1E75 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x7CF PUSH2 0x1EC7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH2 0x8FC PUSH1 0xD PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x8EE PUSH8 0xDE0B6B3A7640000 PUSH2 0x8E0 PUSH2 0x892 PUSH1 0xC PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x884 PUSH2 0x1DBB JUMP JUMPDEST PUSH2 0x1ECD SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xF PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1F56 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1FDC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x206B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xD PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH2 0x923 PUSH2 0x20F3 JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0x906A1C6BD7E3091EA86693DD029A831C19049CE77F1DCE2CE0BAB1CACBABCE22 DUP2 PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0x9D2 PUSH2 0x20F3 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO DUP2 ISZERO ISZERO EQ ISZERO PUSH2 0x9F2 JUMPI PUSH2 0xA74 JUMP JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xA29 JUMPI TIMESTAMP PUSH1 0x4 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH32 0x8FB6C181EE25A520CF3DD6565006EF91229FCFE5A989566C2A3B8C115570CEC5 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xE SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xA89 PUSH2 0x20F3 JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAE6 PUSH1 0x9 SLOAD PUSH1 0x8 SLOAD PUSH2 0x1F56 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x3 SLOAD SWAP1 POP CALLER PUSH2 0xB0C PUSH2 0x1DBB JUMP JUMPDEST PUSH1 0xB DUP2 SWAP1 SSTORE POP PUSH2 0xB1A PUSH2 0x17A8 JUMP JUMPDEST PUSH1 0xA DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xBE7 JUMPI PUSH2 0xB5D DUP2 PUSH2 0x7E5 JUMP JUMPDEST PUSH1 0xD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0xB SLOAD PUSH1 0xC PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x0 DUP4 GT PUSH2 0xC5D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x11 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x43616E6E6F742077697468647261772030000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC72 DUP4 PUSH1 0xE SLOAD PUSH2 0x1ECD SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xE DUP2 SWAP1 SSTORE POP PUSH2 0xCCA DUP4 PUSH1 0xF PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1ECD SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xF PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0xD5A CALLER DUP5 PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x219A SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x7084F5476618D8E60B11EF0D7D3F06914655ADB8793E28FF7F018D4C76D505D5 DUP5 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP PUSH1 0x3 SLOAD DUP2 EQ PUSH2 0xE20 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1F DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xED0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x26E9 PUSH1 0x2A SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xEDA PUSH2 0x1DBB JUMP JUMPDEST PUSH1 0xB DUP2 SWAP1 SSTORE POP PUSH2 0xEE8 PUSH2 0x17A8 JUMP JUMPDEST PUSH1 0xA DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xFB5 JUMPI PUSH2 0xF2B DUP2 PUSH2 0x7E5 JUMP JUMPDEST PUSH1 0xD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0xB SLOAD PUSH1 0xC PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x7 SLOAD TIMESTAMP LT PUSH2 0xFDE JUMPI PUSH2 0xFD3 PUSH1 0x9 SLOAD DUP4 PUSH2 0x1FDC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x8 DUP2 SWAP1 SSTORE POP PUSH2 0x1040 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFF5 TIMESTAMP PUSH1 0x7 SLOAD PUSH2 0x1ECD SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x100E PUSH1 0x8 SLOAD DUP4 PUSH2 0x1F56 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x1037 PUSH1 0x9 SLOAD PUSH2 0x1029 DUP4 DUP8 PUSH2 0x206B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1FDC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x8 DUP2 SWAP1 SSTORE POP POP POP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x10E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x10F5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x110B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP1 POP PUSH2 0x1133 PUSH1 0x9 SLOAD DUP3 PUSH2 0x1FDC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x8 SLOAD GT ISZERO PUSH2 0x11AA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x18 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x50726F76696465642072657761726420746F6F20686967680000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST TIMESTAMP PUSH1 0xA DUP2 SWAP1 SSTORE POP PUSH2 0x11C6 PUSH1 0x9 SLOAD TIMESTAMP PUSH2 0x206B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x7 DUP2 SWAP1 SSTORE POP PUSH32 0xDE88A922E0D3B88B24E9623EFEB464919C6BF9F66857A65E2BFCF2CE87A9433D DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x3 SLOAD SWAP1 POP CALLER PUSH2 0x1229 PUSH2 0x1DBB JUMP JUMPDEST PUSH1 0xB DUP2 SWAP1 SSTORE POP PUSH2 0x1237 PUSH2 0x17A8 JUMP JUMPDEST PUSH1 0xA DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1304 JUMPI PUSH2 0x127A DUP2 PUSH2 0x7E5 JUMP JUMPDEST PUSH1 0xD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0xB SLOAD PUSH1 0xC PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x0 PUSH1 0xD PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 DUP2 GT ISZERO PUSH2 0x1432 JUMPI PUSH1 0x0 PUSH1 0xD PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x13E3 CALLER DUP3 PUSH1 0x5 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x219A SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xE2403640BA68FED3A2F88B7557551D1993F84B99BB10FF833F0CF8DB0C5E0486 DUP3 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST POP POP PUSH1 0x3 SLOAD DUP2 EQ PUSH2 0x14AB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1F DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xF PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1622 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x35 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2628 PUSH1 0x35 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0xB532073B38C83145E3E5135377A08BF9AAB55BC0FD7C1179CD4FB995D2A5159C PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x40 MLOAD DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 SLOAD TIMESTAMP LT PUSH2 0x17BB JUMPI PUSH1 0x7 SLOAD PUSH2 0x17BD JUMP JUMPDEST TIMESTAMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x17CA PUSH2 0x20F3 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1871 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x273D PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x18BD PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x219A SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH32 0x8C1256B8896378CD5044F80C202F9772B9D77DC85C8A6EB51967210B09BFAA28 DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0xC PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x3 SLOAD SWAP1 POP PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x19ED JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x3C DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x26AD PUSH1 0x3C SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH2 0x19F6 PUSH2 0x1DBB JUMP JUMPDEST PUSH1 0xB DUP2 SWAP1 SSTORE POP PUSH2 0x1A04 PUSH2 0x17A8 JUMP JUMPDEST PUSH1 0xA DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1AD1 JUMPI PUSH2 0x1A47 DUP2 PUSH2 0x7E5 JUMP JUMPDEST PUSH1 0xD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0xB SLOAD PUSH1 0xC PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x0 DUP4 GT PUSH2 0x1B47 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0xE DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x43616E6E6F74207374616B652030000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1B5C DUP4 PUSH1 0xE SLOAD PUSH2 0x206B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xE DUP2 SWAP1 SSTORE POP PUSH2 0x1BB4 DUP4 PUSH1 0xF PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x206B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xF PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x1C46 CALLER ADDRESS DUP6 PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x226B SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x9E71BC8EEA02A63969F509818F2DAFB9254532904319F9DBDA79B67BD34A5F3D DUP5 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP PUSH1 0x3 SLOAD DUP2 EQ PUSH2 0x1D0C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1F DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1D1E PUSH2 0x20F3 JUMP JUMPDEST PUSH1 0x7 SLOAD TIMESTAMP GT PUSH2 0x1D78 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x58 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x25D0 PUSH1 0x58 SWAP2 CODECOPY PUSH1 0x60 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x9 DUP2 SWAP1 SSTORE POP PUSH32 0xFB46CA5A5E06D4540D6387B930A7C978BCE0DB5F449EC6B3F5D07C6E1D44F2D3 PUSH1 0x9 SLOAD PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xE SLOAD EQ ISZERO PUSH2 0x1DD1 JUMPI PUSH1 0xB SLOAD SWAP1 POP PUSH2 0x1E46 JUMP JUMPDEST PUSH2 0x1E43 PUSH2 0x1E32 PUSH1 0xE SLOAD PUSH2 0x1E24 PUSH8 0xDE0B6B3A7640000 PUSH2 0x1E16 PUSH1 0x8 SLOAD PUSH2 0x1E08 PUSH1 0xA SLOAD PUSH2 0x1DFA PUSH2 0x17A8 JUMP JUMPDEST PUSH2 0x1ECD SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1F56 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1F56 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1FDC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xB SLOAD PUSH2 0x206B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1EBD PUSH1 0xF PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xAEB JUMP JUMPDEST PUSH2 0x1EC5 PUSH2 0x1208 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO PUSH2 0x1F45 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP5 SUB SWAP1 POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 EQ ISZERO PUSH2 0x1F69 JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x1FD6 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP5 MUL SWAP1 POP DUP3 DUP5 DUP3 DUP2 PUSH2 0x1F7A JUMPI INVALID JUMPDEST DIV EQ PUSH2 0x1FD1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x268C PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 GT PUSH2 0x2053 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A206469766973696F6E206279207A65726F000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP5 DUP2 PUSH2 0x205E JUMPI INVALID JUMPDEST DIV SWAP1 POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x20E9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2198 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2F DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x265D PUSH1 0x2F SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x2266 DUP4 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB SWAP1 POP PUSH1 0xE0 SHL DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x2371 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x236B DUP5 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD SWAP1 POP PUSH1 0xE0 SHL DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x2371 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x2390 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x25BC JUMP JUMPDEST PUSH2 0x2402 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1F DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x5361666545524332303A2063616C6C20746F206E6F6E2D636F6E747261637400 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x2451 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH1 0x20 DUP4 SUB SWAP3 POP PUSH2 0x242E JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x24B3 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x24B8 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH2 0x2530 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0x25B6 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x254F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x25B5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2713 PUSH1 0x2A SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 EXTCODESIZE SWAP1 POP PUSH1 0x0 DUP2 GT SWAP2 POP POP SWAP2 SWAP1 POP JUMP INVALID POP PUSH19 0x6576696F757320726577617264732070657269 PUSH16 0x64206D75737420626520636F6D706C65 PUSH21 0x65206265666F7265206368616E67696E6720746865 KECCAK256 PUSH5 0x7572617469 PUSH16 0x6E20666F7220746865206E6577207065 PUSH19 0x696F64596F75206D757374206265206E6F6D69 PUSH15 0x61746564206265666F726520796F75 KECCAK256 PUSH4 0x616E2061 PUSH4 0x63657074 KECCAK256 PUSH16 0x776E6572736869704F6E6C7920746865 KECCAK256 PUSH4 0x6F6E7472 PUSH2 0x6374 KECCAK256 PUSH16 0x776E6572206D617920706572666F726D KECCAK256 PUSH21 0x68697320616374696F6E536166654D6174683A206D PUSH22 0x6C7469706C69636174696F6E206F766572666C6F7754 PUSH9 0x697320616374696F6E KECCAK256 PUSH4 0x616E6E6F PUSH21 0x20626520706572666F726D6564207768696C652074 PUSH9 0x6520636F6E74726163 PUSH21 0x2069732070617573656443616C6C6572206973206E PUSH16 0x74205265776172647344697374726962 PUSH22 0x74696F6E20636F6E7472616374536166654552433230 GASPRICE KECCAK256 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS KECCAK256 PUSH16 0x7065726174696F6E20646964206E6F74 KECCAK256 PUSH20 0x75636365656443616E6E6F742077697468647261 PUSH24 0x20746865207374616B696E6720746F6B656EA265627A7A72 BALANCE PC KECCAK256 MOD 0xE9 TIMESTAMP 0x28 0xCE 0xE1 0xC0 JUMP 0xA7 0xC5 0x2D PUSH30 0x287A7A59B0962BDF14A3600CB664E2CDC13B6E6264736F6C634300051000 ORIGIN ",
							"sourceMap": "532:6079:3:-;;;854:1;824:31;;890:1;862:29;;931:6;898:39;;1275:323;8:9:-1;5:2;;;30:1;27;20:12;5:2;1275:323:3;;;;;;;;;;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;1275:323:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1435:6;250:1:0;232:20;;:6;:20;;;;224:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;301:6;293:5;;:14;;;;;;;;;;;;;;;;;;323:32;344:1;348:6;323:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;178:185;905:1:10;889:13;:17;;;;367:1:1;350:19;;:5;;;;;;;;;;;:19;;;;342:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1476:13:3;1454:12;;:36;;;;;;;;;;;;;;;;;;1523:13;1501:12;;:36;;;;;;;;;;;;;;;;;;1570:20;1548:19;;:42;;;;;;;;;;;;;;;;;;1275:323;;;;532:6079;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106101e45760003560e01c806372f702f31161010f578063a694fc3a116100a2578063d1af0c7d11610071578063d1af0c7d14610755578063df136d651461079f578063e9fad8ee146107bd578063ebe2b12b146107c7576101e4565b8063a694fc3a146106bd578063c8f33c91146106eb578063cc1a378f14610709578063cd3daf9d14610737576101e4565b80638980f11f116100de5780638980f11f146105af5780638b876347146105fd5780638da5cb5b1461065557806391b4ded91461069f576101e4565b806372f702f31461051f57806379ba5097146105695780637b0a47ee1461057357806380faa57d14610591576101e4565b80632e1a7d4d116101875780633fc6df6e116101565780633fc6df6e1461041157806353a47bb71461045b5780635c975abb146104a557806370a08231146104c7576101e4565b80632e1a7d4d1461038d578063386a9525146103bb5780633c6b16ab146103d95780633d18b91214610407576101e4565b806316c38b3c116101c357806316c38b3c146102dd57806318160ddd1461030d578063197621431461032b5780631c1f78eb1461036f576101e4565b80628cc262146101e95780630700037d146102415780631627540c14610299575b600080fd5b61022b600480360360208110156101ff57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506107e5565b6040518082815260200191505060405180910390f35b6102836004803603602081101561025757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610903565b6040518082815260200191505060405180910390f35b6102db600480360360208110156102af57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061091b565b005b61030b600480360360208110156102f357600080fd5b810190808035151590602001909291905050506109ca565b005b610315610a77565b6040518082815260200191505060405180910390f35b61036d6004803603602081101561034157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610a81565b005b610377610acd565b6040518082815260200191505060405180910390f35b6103b9600480360360208110156103a357600080fd5b8101908080359060200190929190505050610aeb565b005b6103c3610e24565b6040518082815260200191505060405180910390f35b610405600480360360208110156103ef57600080fd5b8101908080359060200190929190505050610e2a565b005b61040f611208565b005b6104196114ae565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6104636114d4565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6104ad6114fa565b604051808215151515815260200191505060405180910390f35b610509600480360360208110156104dd57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061150d565b6040518082815260200191505060405180910390f35b610527611556565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61057161157c565b005b61057b6117a2565b6040518082815260200191505060405180910390f35b6105996117a8565b6040518082815260200191505060405180910390f35b6105fb600480360360408110156105c557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506117c2565b005b61063f6004803603602081101561061357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061192c565b6040518082815260200191505060405180910390f35b61065d611944565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6106a7611969565b6040518082815260200191505060405180910390f35b6106e9600480360360208110156106d357600080fd5b810190808035906020019092919050505061196f565b005b6106f3611d10565b6040518082815260200191505060405180910390f35b6107356004803603602081101561071f57600080fd5b8101908080359060200190929190505050611d16565b005b61073f611dbb565b6040518082815260200191505060405180910390f35b61075d611e49565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6107a7611e6f565b6040518082815260200191505060405180910390f35b6107c5611e75565b005b6107cf611ec7565b6040518082815260200191505060405180910390f35b60006108fc600d60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546108ee670de0b6b3a76400006108e0610892600c60008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610884611dbb565b611ecd90919063ffffffff16565b600f60008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611f5690919063ffffffff16565b611fdc90919063ffffffff16565b61206b90919063ffffffff16565b9050919050565b600d6020528060005260406000206000915090505481565b6109236120f3565b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f906a1c6bd7e3091ea86693dd029a831c19049ce77f1dce2ce0bab1cacbabce2281604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a150565b6109d26120f3565b600560009054906101000a900460ff16151581151514156109f257610a74565b80600560006101000a81548160ff021916908315150217905550600560009054906101000a900460ff1615610a2957426004819055505b7f8fb6c181ee25a520cf3dd6565006ef91229fcfe5a989566c2a3b8c115570cec5600560009054906101000a900460ff16604051808215151515815260200191505060405180910390a15b50565b6000600e54905090565b610a896120f3565b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000610ae6600954600854611f5690919063ffffffff16565b905090565b60016003600082825401925050819055506000600354905033610b0c611dbb565b600b81905550610b1a6117a8565b600a81905550600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610be757610b5d816107e5565b600d60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600b54600c60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b60008311610c5d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f43616e6e6f74207769746864726177203000000000000000000000000000000081525060200191505060405180910390fd5b610c7283600e54611ecd90919063ffffffff16565b600e81905550610cca83600f60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611ecd90919063ffffffff16565b600f60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610d5a3384600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1661219a9092919063ffffffff16565b3373ffffffffffffffffffffffffffffffffffffffff167f7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d5846040518082815260200191505060405180910390a2506003548114610e20576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0081525060200191505060405180910390fd5b5050565b60095481565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610ed0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602a8152602001806126e9602a913960400191505060405180910390fd5b6000610eda611dbb565b600b81905550610ee86117a8565b600a81905550600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610fb557610f2b816107e5565b600d60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600b54600c60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b6007544210610fde57610fd360095483611fdc90919063ffffffff16565b600881905550611040565b6000610ff542600754611ecd90919063ffffffff16565b9050600061100e60085483611f5690919063ffffffff16565b9050611037600954611029838761206b90919063ffffffff16565b611fdc90919063ffffffff16565b60088190555050505b6000600560019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b1580156110e157600080fd5b505afa1580156110f5573d6000803e3d6000fd5b505050506040513d602081101561110b57600080fd5b8101908080519060200190929190505050905061113360095482611fdc90919063ffffffff16565b60085411156111aa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260188152602001807f50726f76696465642072657761726420746f6f2068696768000000000000000081525060200191505060405180910390fd5b42600a819055506111c66009544261206b90919063ffffffff16565b6007819055507fde88a922e0d3b88b24e9623efeb464919c6bf9f66857a65e2bfcf2ce87a9433d836040518082815260200191505060405180910390a1505050565b60016003600082825401925050819055506000600354905033611229611dbb565b600b819055506112376117a8565b600a81905550600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146113045761127a816107e5565b600d60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600b54600c60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b6000600d60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000811115611432576000600d60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506113e33382600560019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1661219a9092919063ffffffff16565b3373ffffffffffffffffffffffffffffffffffffffff167fe2403640ba68fed3a2f88b7557551d1993f84b99bb10ff833f0cf8db0c5e0486826040518082815260200191505060405180910390a25b505060035481146114ab576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0081525060200191505060405180910390fd5b50565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600560009054906101000a900460ff1681565b6000600f60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611622576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260358152602001806126286035913960400191505060405180910390fd5b7fb532073b38c83145e3e5135377a08bf9aab55bc0fd7c1179cd4fb995d2a5159c6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390a1600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60085481565b600060075442106117bb576007546117bd565b425b905090565b6117ca6120f3565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611871576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602181526020018061273d6021913960400191505060405180910390fd5b6118bd6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff16828473ffffffffffffffffffffffffffffffffffffffff1661219a9092919063ffffffff16565b7f8c1256b8896378cd5044f80c202f9772b9d77dc85c8a6eb51967210b09bfaa288282604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019250505060405180910390a15050565b600c6020528060005260406000206000915090505481565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60045481565b600160036000828254019250508190555060006003549050600560009054906101000a900460ff16156119ed576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603c8152602001806126ad603c913960400191505060405180910390fd5b336119f6611dbb565b600b81905550611a046117a8565b600a81905550600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614611ad157611a47816107e5565b600d60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600b54600c60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b60008311611b47576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600e8152602001807f43616e6e6f74207374616b65203000000000000000000000000000000000000081525060200191505060405180910390fd5b611b5c83600e5461206b90919063ffffffff16565b600e81905550611bb483600f60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461206b90919063ffffffff16565b600f60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550611c46333085600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1661226b909392919063ffffffff16565b3373ffffffffffffffffffffffffffffffffffffffff167f9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d846040518082815260200191505060405180910390a2506003548114611d0c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0081525060200191505060405180910390fd5b5050565b600a5481565b611d1e6120f3565b6007544211611d78576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260588152602001806125d06058913960600191505060405180910390fd5b806009819055507ffb46ca5a5e06d4540d6387b930a7c978bce0db5f449ec6b3f5d07c6e1d44f2d36009546040518082815260200191505060405180910390a150565b600080600e541415611dd157600b549050611e46565b611e43611e32600e54611e24670de0b6b3a7640000611e16600854611e08600a54611dfa6117a8565b611ecd90919063ffffffff16565b611f5690919063ffffffff16565b611f5690919063ffffffff16565b611fdc90919063ffffffff16565b600b5461206b90919063ffffffff16565b90505b90565b600560019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600b5481565b611ebd600f60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610aeb565b611ec5611208565b565b60075481565b600082821115611f45576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525060200191505060405180910390fd5b600082840390508091505092915050565b600080831415611f695760009050611fd6565b6000828402905082848281611f7a57fe5b0414611fd1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602181526020018061268c6021913960400191505060405180910390fd5b809150505b92915050565b6000808211612053576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f536166654d6174683a206469766973696f6e206279207a65726f00000000000081525060200191505060405180910390fd5b600082848161205e57fe5b0490508091505092915050565b6000808284019050838110156120e9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614612198576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602f81526020018061265d602f913960400191505060405180910390fd5b565b612266838473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb905060e01b8484604051602401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050612371565b505050565b61236b848573ffffffffffffffffffffffffffffffffffffffff166323b872dd905060e01b858585604051602401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050612371565b50505050565b6123908273ffffffffffffffffffffffffffffffffffffffff166125bc565b612402576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f5361666545524332303a2063616c6c20746f206e6f6e2d636f6e74726163740081525060200191505060405180910390fd5b600060608373ffffffffffffffffffffffffffffffffffffffff16836040518082805190602001908083835b60208310612451578051825260208201915060208101905060208303925061242e565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d80600081146124b3576040519150601f19603f3d011682016040523d82523d6000602084013e6124b8565b606091505b509150915081612530576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c656481525060200191505060405180910390fd5b6000815111156125b65780806020019051602081101561254f57600080fd5b81019080805190602001909291905050506125b5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602a815260200180612713602a913960400191505060405180910390fd5b5b50505050565b600080823b90506000811191505091905056fe50726576696f7573207265776172647320706572696f64206d75737420626520636f6d706c657465206265666f7265206368616e67696e6720746865206475726174696f6e20666f7220746865206e657720706572696f64596f75206d757374206265206e6f6d696e61746564206265666f726520796f752063616e20616363657074206f776e6572736869704f6e6c792074686520636f6e7472616374206f776e6572206d617920706572666f726d207468697320616374696f6e536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f775468697320616374696f6e2063616e6e6f7420626520706572666f726d6564207768696c652074686520636f6e74726163742069732070617573656443616c6c6572206973206e6f742052657761726473446973747269627574696f6e20636f6e74726163745361666545524332303a204552433230206f7065726174696f6e20646964206e6f74207375636365656443616e6e6f7420776974686472617720746865207374616b696e6720746f6b656ea265627a7a7231582006e94228cee1c056a7c52d7d287a7a59b0962bdf14a3600cb664e2cdc13b6e6264736f6c63430005100032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1E4 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x72F702F3 GT PUSH2 0x10F JUMPI DUP1 PUSH4 0xA694FC3A GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xD1AF0C7D GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xD1AF0C7D EQ PUSH2 0x755 JUMPI DUP1 PUSH4 0xDF136D65 EQ PUSH2 0x79F JUMPI DUP1 PUSH4 0xE9FAD8EE EQ PUSH2 0x7BD JUMPI DUP1 PUSH4 0xEBE2B12B EQ PUSH2 0x7C7 JUMPI PUSH2 0x1E4 JUMP JUMPDEST DUP1 PUSH4 0xA694FC3A EQ PUSH2 0x6BD JUMPI DUP1 PUSH4 0xC8F33C91 EQ PUSH2 0x6EB JUMPI DUP1 PUSH4 0xCC1A378F EQ PUSH2 0x709 JUMPI DUP1 PUSH4 0xCD3DAF9D EQ PUSH2 0x737 JUMPI PUSH2 0x1E4 JUMP JUMPDEST DUP1 PUSH4 0x8980F11F GT PUSH2 0xDE JUMPI DUP1 PUSH4 0x8980F11F EQ PUSH2 0x5AF JUMPI DUP1 PUSH4 0x8B876347 EQ PUSH2 0x5FD JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x655 JUMPI DUP1 PUSH4 0x91B4DED9 EQ PUSH2 0x69F JUMPI PUSH2 0x1E4 JUMP JUMPDEST DUP1 PUSH4 0x72F702F3 EQ PUSH2 0x51F JUMPI DUP1 PUSH4 0x79BA5097 EQ PUSH2 0x569 JUMPI DUP1 PUSH4 0x7B0A47EE EQ PUSH2 0x573 JUMPI DUP1 PUSH4 0x80FAA57D EQ PUSH2 0x591 JUMPI PUSH2 0x1E4 JUMP JUMPDEST DUP1 PUSH4 0x2E1A7D4D GT PUSH2 0x187 JUMPI DUP1 PUSH4 0x3FC6DF6E GT PUSH2 0x156 JUMPI DUP1 PUSH4 0x3FC6DF6E EQ PUSH2 0x411 JUMPI DUP1 PUSH4 0x53A47BB7 EQ PUSH2 0x45B JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x4A5 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x4C7 JUMPI PUSH2 0x1E4 JUMP JUMPDEST DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x38D JUMPI DUP1 PUSH4 0x386A9525 EQ PUSH2 0x3BB JUMPI DUP1 PUSH4 0x3C6B16AB EQ PUSH2 0x3D9 JUMPI DUP1 PUSH4 0x3D18B912 EQ PUSH2 0x407 JUMPI PUSH2 0x1E4 JUMP JUMPDEST DUP1 PUSH4 0x16C38B3C GT PUSH2 0x1C3 JUMPI DUP1 PUSH4 0x16C38B3C EQ PUSH2 0x2DD JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x30D JUMPI DUP1 PUSH4 0x19762143 EQ PUSH2 0x32B JUMPI DUP1 PUSH4 0x1C1F78EB EQ PUSH2 0x36F JUMPI PUSH2 0x1E4 JUMP JUMPDEST DUP1 PUSH3 0x8CC262 EQ PUSH2 0x1E9 JUMPI DUP1 PUSH4 0x700037D EQ PUSH2 0x241 JUMPI DUP1 PUSH4 0x1627540C EQ PUSH2 0x299 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x22B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x7E5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x283 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x257 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x903 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2DB PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x91B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x30B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD ISZERO ISZERO SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x9CA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x315 PUSH2 0xA77 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x36D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x341 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xA81 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x377 PUSH2 0xACD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3B9 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xAEB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3C3 PUSH2 0xE24 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x405 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xE2A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x40F PUSH2 0x1208 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x419 PUSH2 0x14AE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x463 PUSH2 0x14D4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4AD PUSH2 0x14FA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x509 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x4DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x150D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x527 PUSH2 0x1556 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x571 PUSH2 0x157C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x57B PUSH2 0x17A2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x599 PUSH2 0x17A8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5FB PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x5C5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x17C2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x63F PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x613 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x192C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x65D PUSH2 0x1944 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6A7 PUSH2 0x1969 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6E9 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x6D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x196F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x6F3 PUSH2 0x1D10 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x735 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x71F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1D16 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x73F PUSH2 0x1DBB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x75D PUSH2 0x1E49 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7A7 PUSH2 0x1E6F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7C5 PUSH2 0x1E75 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x7CF PUSH2 0x1EC7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH2 0x8FC PUSH1 0xD PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x8EE PUSH8 0xDE0B6B3A7640000 PUSH2 0x8E0 PUSH2 0x892 PUSH1 0xC PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x884 PUSH2 0x1DBB JUMP JUMPDEST PUSH2 0x1ECD SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xF PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1F56 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1FDC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x206B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xD PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH2 0x923 PUSH2 0x20F3 JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0x906A1C6BD7E3091EA86693DD029A831C19049CE77F1DCE2CE0BAB1CACBABCE22 DUP2 PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0x9D2 PUSH2 0x20F3 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO DUP2 ISZERO ISZERO EQ ISZERO PUSH2 0x9F2 JUMPI PUSH2 0xA74 JUMP JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xA29 JUMPI TIMESTAMP PUSH1 0x4 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH32 0x8FB6C181EE25A520CF3DD6565006EF91229FCFE5A989566C2A3B8C115570CEC5 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xE SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xA89 PUSH2 0x20F3 JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAE6 PUSH1 0x9 SLOAD PUSH1 0x8 SLOAD PUSH2 0x1F56 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x3 SLOAD SWAP1 POP CALLER PUSH2 0xB0C PUSH2 0x1DBB JUMP JUMPDEST PUSH1 0xB DUP2 SWAP1 SSTORE POP PUSH2 0xB1A PUSH2 0x17A8 JUMP JUMPDEST PUSH1 0xA DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xBE7 JUMPI PUSH2 0xB5D DUP2 PUSH2 0x7E5 JUMP JUMPDEST PUSH1 0xD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0xB SLOAD PUSH1 0xC PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x0 DUP4 GT PUSH2 0xC5D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x11 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x43616E6E6F742077697468647261772030000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC72 DUP4 PUSH1 0xE SLOAD PUSH2 0x1ECD SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xE DUP2 SWAP1 SSTORE POP PUSH2 0xCCA DUP4 PUSH1 0xF PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1ECD SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xF PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0xD5A CALLER DUP5 PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x219A SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x7084F5476618D8E60B11EF0D7D3F06914655ADB8793E28FF7F018D4C76D505D5 DUP5 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP PUSH1 0x3 SLOAD DUP2 EQ PUSH2 0xE20 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1F DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xED0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x26E9 PUSH1 0x2A SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xEDA PUSH2 0x1DBB JUMP JUMPDEST PUSH1 0xB DUP2 SWAP1 SSTORE POP PUSH2 0xEE8 PUSH2 0x17A8 JUMP JUMPDEST PUSH1 0xA DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xFB5 JUMPI PUSH2 0xF2B DUP2 PUSH2 0x7E5 JUMP JUMPDEST PUSH1 0xD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0xB SLOAD PUSH1 0xC PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x7 SLOAD TIMESTAMP LT PUSH2 0xFDE JUMPI PUSH2 0xFD3 PUSH1 0x9 SLOAD DUP4 PUSH2 0x1FDC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x8 DUP2 SWAP1 SSTORE POP PUSH2 0x1040 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFF5 TIMESTAMP PUSH1 0x7 SLOAD PUSH2 0x1ECD SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x100E PUSH1 0x8 SLOAD DUP4 PUSH2 0x1F56 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x1037 PUSH1 0x9 SLOAD PUSH2 0x1029 DUP4 DUP8 PUSH2 0x206B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1FDC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x8 DUP2 SWAP1 SSTORE POP POP POP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x10E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x10F5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x110B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP1 POP PUSH2 0x1133 PUSH1 0x9 SLOAD DUP3 PUSH2 0x1FDC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x8 SLOAD GT ISZERO PUSH2 0x11AA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x18 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x50726F76696465642072657761726420746F6F20686967680000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST TIMESTAMP PUSH1 0xA DUP2 SWAP1 SSTORE POP PUSH2 0x11C6 PUSH1 0x9 SLOAD TIMESTAMP PUSH2 0x206B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x7 DUP2 SWAP1 SSTORE POP PUSH32 0xDE88A922E0D3B88B24E9623EFEB464919C6BF9F66857A65E2BFCF2CE87A9433D DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x3 SLOAD SWAP1 POP CALLER PUSH2 0x1229 PUSH2 0x1DBB JUMP JUMPDEST PUSH1 0xB DUP2 SWAP1 SSTORE POP PUSH2 0x1237 PUSH2 0x17A8 JUMP JUMPDEST PUSH1 0xA DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1304 JUMPI PUSH2 0x127A DUP2 PUSH2 0x7E5 JUMP JUMPDEST PUSH1 0xD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0xB SLOAD PUSH1 0xC PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x0 PUSH1 0xD PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 DUP2 GT ISZERO PUSH2 0x1432 JUMPI PUSH1 0x0 PUSH1 0xD PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x13E3 CALLER DUP3 PUSH1 0x5 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x219A SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xE2403640BA68FED3A2F88B7557551D1993F84B99BB10FF833F0CF8DB0C5E0486 DUP3 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST POP POP PUSH1 0x3 SLOAD DUP2 EQ PUSH2 0x14AB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1F DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xF PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1622 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x35 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2628 PUSH1 0x35 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0xB532073B38C83145E3E5135377A08BF9AAB55BC0FD7C1179CD4FB995D2A5159C PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x40 MLOAD DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 SLOAD TIMESTAMP LT PUSH2 0x17BB JUMPI PUSH1 0x7 SLOAD PUSH2 0x17BD JUMP JUMPDEST TIMESTAMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x17CA PUSH2 0x20F3 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1871 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x273D PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x18BD PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x219A SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH32 0x8C1256B8896378CD5044F80C202F9772B9D77DC85C8A6EB51967210B09BFAA28 DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0xC PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x3 SLOAD SWAP1 POP PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x19ED JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x3C DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x26AD PUSH1 0x3C SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH2 0x19F6 PUSH2 0x1DBB JUMP JUMPDEST PUSH1 0xB DUP2 SWAP1 SSTORE POP PUSH2 0x1A04 PUSH2 0x17A8 JUMP JUMPDEST PUSH1 0xA DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1AD1 JUMPI PUSH2 0x1A47 DUP2 PUSH2 0x7E5 JUMP JUMPDEST PUSH1 0xD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0xB SLOAD PUSH1 0xC PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x0 DUP4 GT PUSH2 0x1B47 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0xE DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x43616E6E6F74207374616B652030000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1B5C DUP4 PUSH1 0xE SLOAD PUSH2 0x206B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xE DUP2 SWAP1 SSTORE POP PUSH2 0x1BB4 DUP4 PUSH1 0xF PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x206B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xF PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x1C46 CALLER ADDRESS DUP6 PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x226B SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x9E71BC8EEA02A63969F509818F2DAFB9254532904319F9DBDA79B67BD34A5F3D DUP5 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP PUSH1 0x3 SLOAD DUP2 EQ PUSH2 0x1D0C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1F DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1D1E PUSH2 0x20F3 JUMP JUMPDEST PUSH1 0x7 SLOAD TIMESTAMP GT PUSH2 0x1D78 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x58 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x25D0 PUSH1 0x58 SWAP2 CODECOPY PUSH1 0x60 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x9 DUP2 SWAP1 SSTORE POP PUSH32 0xFB46CA5A5E06D4540D6387B930A7C978BCE0DB5F449EC6B3F5D07C6E1D44F2D3 PUSH1 0x9 SLOAD PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xE SLOAD EQ ISZERO PUSH2 0x1DD1 JUMPI PUSH1 0xB SLOAD SWAP1 POP PUSH2 0x1E46 JUMP JUMPDEST PUSH2 0x1E43 PUSH2 0x1E32 PUSH1 0xE SLOAD PUSH2 0x1E24 PUSH8 0xDE0B6B3A7640000 PUSH2 0x1E16 PUSH1 0x8 SLOAD PUSH2 0x1E08 PUSH1 0xA SLOAD PUSH2 0x1DFA PUSH2 0x17A8 JUMP JUMPDEST PUSH2 0x1ECD SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1F56 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1F56 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1FDC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xB SLOAD PUSH2 0x206B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1EBD PUSH1 0xF PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xAEB JUMP JUMPDEST PUSH2 0x1EC5 PUSH2 0x1208 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO PUSH2 0x1F45 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP5 SUB SWAP1 POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 EQ ISZERO PUSH2 0x1F69 JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x1FD6 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP5 MUL SWAP1 POP DUP3 DUP5 DUP3 DUP2 PUSH2 0x1F7A JUMPI INVALID JUMPDEST DIV EQ PUSH2 0x1FD1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x268C PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 GT PUSH2 0x2053 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A206469766973696F6E206279207A65726F000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP5 DUP2 PUSH2 0x205E JUMPI INVALID JUMPDEST DIV SWAP1 POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x20E9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2198 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2F DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x265D PUSH1 0x2F SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x2266 DUP4 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB SWAP1 POP PUSH1 0xE0 SHL DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x2371 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x236B DUP5 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD SWAP1 POP PUSH1 0xE0 SHL DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x2371 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x2390 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x25BC JUMP JUMPDEST PUSH2 0x2402 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1F DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x5361666545524332303A2063616C6C20746F206E6F6E2D636F6E747261637400 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x2451 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH1 0x20 DUP4 SUB SWAP3 POP PUSH2 0x242E JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x24B3 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x24B8 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH2 0x2530 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0x25B6 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x254F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x25B5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2713 PUSH1 0x2A SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 EXTCODESIZE SWAP1 POP PUSH1 0x0 DUP2 GT SWAP2 POP POP SWAP2 SWAP1 POP JUMP INVALID POP PUSH19 0x6576696F757320726577617264732070657269 PUSH16 0x64206D75737420626520636F6D706C65 PUSH21 0x65206265666F7265206368616E67696E6720746865 KECCAK256 PUSH5 0x7572617469 PUSH16 0x6E20666F7220746865206E6577207065 PUSH19 0x696F64596F75206D757374206265206E6F6D69 PUSH15 0x61746564206265666F726520796F75 KECCAK256 PUSH4 0x616E2061 PUSH4 0x63657074 KECCAK256 PUSH16 0x776E6572736869704F6E6C7920746865 KECCAK256 PUSH4 0x6F6E7472 PUSH2 0x6374 KECCAK256 PUSH16 0x776E6572206D617920706572666F726D KECCAK256 PUSH21 0x68697320616374696F6E536166654D6174683A206D PUSH22 0x6C7469706C69636174696F6E206F766572666C6F7754 PUSH9 0x697320616374696F6E KECCAK256 PUSH4 0x616E6E6F PUSH21 0x20626520706572666F726D6564207768696C652074 PUSH9 0x6520636F6E74726163 PUSH21 0x2069732070617573656443616C6C6572206973206E PUSH16 0x74205265776172647344697374726962 PUSH22 0x74696F6E20636F6E7472616374536166654552433230 GASPRICE KECCAK256 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS KECCAK256 PUSH16 0x7065726174696F6E20646964206E6F74 KECCAK256 PUSH20 0x75636365656443616E6E6F742077697468647261 PUSH24 0x20746865207374616B696E6720746F6B656EA265627A7A72 BALANCE PC KECCAK256 MOD 0xE9 TIMESTAMP 0x28 0xCE 0xE1 0xC0 JUMP 0xA7 0xC5 0x2D PUSH30 0x287A7A59B0962BDF14A3600CB664E2CDC13B6E6264736F6C634300051000 ORIGIN ",
							"sourceMap": "532:6079:3:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;532:6079:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2369:198;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2369:198:3;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1088:42;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1088:42:3;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;371:141:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;371:141:0;;;;;;;;;;;;;;;;;;;:::i;:::-;;615:488:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;615:488:1;;;;;;;;;;;;;;;;;;;:::i;:::-;;1647:93:3;;;:::i;:::-;;;;;;;;;;;;;;;;;;;475:142:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;475:142:2;;;;;;;;;;;;;;;;;;;:::i;:::-;;2575:121:3;;;:::i;:::-;;;;;;;;;;;;;;;;;;;3145:357;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3145:357:3;;;;;;;;;;;;;;;;;:::i;:::-;;898:39;;;:::i;:::-;;;;;;;;;;;;;;;;;;;3986:1083;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3986:1083:3;;;;;;;;;;;;;;;;;:::i;:::-;;3510:307;;;:::i;:::-;;209:34:2;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;140:29:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;201:18:1;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1748:112:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1748:112:3;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;791:26;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;520:271:0;;;:::i;:::-;;862:29:3;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1868:155;;;:::i;:::-;;;;;;;;;;;;;;;;;;;5184:302;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5184:302:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1024:57;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1024:57:3;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;113:20:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;169:25:1;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2758:379:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2758:379:3;;;;;;;;;;;;;;;;;:::i;:::-;;944:29;;;:::i;:::-;;;;;;;;;;;;;;;;;;;5494:360;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5494:360:3;;;;;;;;;;;;;;;;;:::i;:::-;;2031:330;;;:::i;:::-;;;;;;;;;;;;;;;;;;;758:26;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;980:35;;;:::i;:::-;;;;;;;;;;;;;;;;;;;3825:97;;;:::i;:::-;;824:31;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2369:198;2423:7;2450:109;2542:7;:16;2550:7;2542:16;;;;;;;;;;;;;;;;2450:87;2532:4;2450:77;2473:53;2494:22;:31;2517:7;2494:31;;;;;;;;;;;;;;;;2473:16;:14;:16::i;:::-;:20;;:53;;;;:::i;:::-;2450:9;:18;2460:7;2450:18;;;;;;;;;;;;;;;;:22;;:77;;;;:::i;:::-;:81;;:87;;;;:::i;:::-;:91;;:109;;;;:::i;:::-;2443:116;;2369:198;;;:::o;1088:42::-;;;;;;;;;;;;;;;;;:::o;371:141:0:-;829:12;:10;:12::i;:::-;460:6;443:14;;:23;;;;;;;;;;;;;;;;;;482:22;497:6;482:22;;;;;;;;;;;;;;;;;;;;;;371:141;:::o;615:488:1:-;829:12:0;:10;:12::i;:::-;768:6:1;;;;;;;;;;;757:17;;:7;:17;;;753:56;;;791:7;;753:56;864:7;855:6;;:16;;;;;;;;;;;;;;;;;;940:6;;;;;;;;;;;936:58;;;979:3;963:13;:19;;;;936:58;1075:20;1088:6;;;;;;;;;;;1075:20;;;;;;;;;;;;;;;;;;;;;;852:1:0;615:488:1;:::o;1647:93:3:-;1693:7;1720:12;;1713:19;;1647:93;:::o;475:142:2:-;829:12:0;:10;:12::i;:::-;589:20:2;567:19;;:42;;;;;;;;;;;;;;;;;;475:142;:::o;2575:121:3:-;2630:7;2657:31;2672:15;;2657:10;;:14;;:31;;;;:::i;:::-;2650:38;;2575:121;:::o;3145:357::-;1350:1:10;1333:13;;:18;;;;;;;;;;;1362:20;1385:13;;1362:36;;3212:10:3;5980:16;:14;:16::i;:::-;5957:20;:39;;;;6024:26;:24;:26::i;:::-;6007:14;:43;;;;6084:1;6065:21;;:7;:21;;;6061:157;;6122:15;6129:7;6122:6;:15::i;:::-;6103:7;:16;6111:7;6103:16;;;;;;;;;;;;;;;:34;;;;6186:20;;6152:22;:31;6175:7;6152:31;;;;;;;;;;;;;;;:54;;;;6061:157;3252:1;3243:6;:10;3235:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3301:24;3318:6;3301:12;;:16;;:24;;;;:::i;:::-;3286:12;:39;;;;3360:33;3386:6;3360:9;:21;3370:10;3360:21;;;;;;;;;;;;;;;;:25;;:33;;;;:::i;:::-;3336:9;:21;3346:10;3336:21;;;;;;;;;;;;;;;:57;;;;3404:45;3430:10;3442:6;3404:12;;;;;;;;;;;:25;;;;:45;;;;;:::i;:::-;3475:10;3465:29;;;3487:6;3465:29;;;;;;;;;;;;;;;;;;1409:1:10;1445:13;;1429:12;:29;1421:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3145:357:3;;:::o;898:39::-;;;;:::o;3986:1083::-;381:19:2;;;;;;;;;;;367:33;;:10;:33;;;359:88;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4084:1:3;5980:16;:14;:16::i;:::-;5957:20;:39;;;;6024:26;:24;:26::i;:::-;6007:14;:43;;;;6084:1;6065:21;;:7;:21;;;6061:157;;6122:15;6129:7;6122:6;:15::i;:::-;6103:7;:16;6111:7;6103:16;;;;;;;;;;;;;;;:34;;;;6186:20;;6152:22;:31;6175:7;6152:31;;;;;;;;;;;;;;;:54;;;;6061:157;4122:12;;4103:15;:31;4099:318;;4164:27;4175:15;;4164:6;:10;;:27;;;;:::i;:::-;4151:10;:40;;;;4099:318;;;4224:17;4244:33;4261:15;4244:12;;:16;;:33;;;;:::i;:::-;4224:53;;4292:16;4311:25;4325:10;;4311:9;:13;;:25;;;;:::i;:::-;4292:44;;4364:41;4389:15;;4364:20;4375:8;4364:6;:10;;:20;;;;:::i;:::-;:24;;:41;;;;:::i;:::-;4351:10;:54;;;;4099:318;;;4777:12;4792;;;;;;;;;;;:22;;;4823:4;4792:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4792:37:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4792:37:3;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4792:37:3;;;;;;;;;;;;;;;;4777:52;;4862:28;4874:15;;4862:7;:11;;:28;;;;:::i;:::-;4848:10;;:42;;4840:79;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4949:15;4932:14;:32;;;;4990:36;5010:15;;4990;:19;;:36;;;;:::i;:::-;4975:12;:51;;;;5042:19;5054:6;5042:19;;;;;;;;;;;;;;;;;;6228:1;458::2;3986:1083:3;:::o;3510:307::-;1350:1:10;1333:13;;:18;;;;;;;;;;;1362:20;1385:13;;1362:36;;3564:10:3;5980:16;:14;:16::i;:::-;5957:20;:39;;;;6024:26;:24;:26::i;:::-;6007:14;:43;;;;6084:1;6065:21;;:7;:21;;;6061:157;;6122:15;6129:7;6122:6;:15::i;:::-;6103:7;:16;6111:7;6103:16;;;;;;;;;;;;;;;:34;;;;6186:20;;6152:22;:31;6175:7;6152:31;;;;;;;;;;;;;;;:54;;;;6061:157;3587:14;3604:7;:19;3612:10;3604:19;;;;;;;;;;;;;;;;3587:36;;3647:1;3638:6;:10;3634:176;;;3687:1;3665:7;:19;3673:10;3665:19;;;;;;;;;;;;;;;:23;;;;3703:45;3729:10;3741:6;3703:12;;;;;;;;;;;:25;;;;:45;;;;;:::i;:::-;3779:10;3768:30;;;3791:6;3768:30;;;;;;;;;;;;;;;;;;3634:176;6228:1;1409::10;1445:13;;1429:12;:29;1421:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3510:307:3;:::o;209:34:2:-;;;;;;;;;;;;;:::o;140:29:0:-;;;;;;;;;;;;;:::o;201:18:1:-;;;;;;;;;;;;;:::o;1748:112:3:-;1807:7;1834:9;:18;1844:7;1834:18;;;;;;;;;;;;;;;;1827:25;;1748:112;;;:::o;791:26::-;;;;;;;;;;;;;:::o;520:271:0:-;589:14;;;;;;;;;;;575:28;;:10;:28;;;567:94;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;677:35;690:5;;;;;;;;;;;697:14;;;;;;;;;;;677:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;731:14;;;;;;;;;;;723:5;;:22;;;;;;;;;;;;;;;;;;781:1;756:14;;:27;;;;;;;;;;;;;;;;;;520:271::o;862:29:3:-;;;;:::o;1868:155::-;1925:7;1970:12;;1952:15;:30;:63;;2003:12;;1952:63;;;1985:15;1952:63;1945:70;;1868:155;:::o;5184:302::-;829:12:0;:10;:12::i;:::-;5311::3;;;;;;;;;;;5287:37;;:12;:37;;;;5279:83;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5373:53;5407:5;;;;;;;;;;;5414:11;5380:12;5373:33;;;;:53;;;;;:::i;:::-;5442:36;5452:12;5466:11;5442:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;5184:302;;:::o;1024:57::-;;;;;;;;;;;;;;;;;:::o;113:20:0:-;;;;;;;;;;;;;:::o;169:25:1:-;;;;:::o;2758:379:3:-;1350:1:10;1333:13;;:18;;;;;;;;;;;1362:20;1385:13;;1362:36;;1192:6:1;;;;;;;;;;;1191:7;1183:80;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2834:10:3;5980:16;:14;:16::i;:::-;5957:20;:39;;;;6024:26;:24;:26::i;:::-;6007:14;:43;;;;6084:1;6065:21;;:7;:21;;;6061:157;;6122:15;6129:7;6122:6;:15::i;:::-;6103:7;:16;6111:7;6103:16;;;;;;;;;;;;;;;:34;;;;6186:20;;6152:22;:31;6175:7;6152:31;;;;;;;;;;;;;;;:54;;;;6061:157;2874:1;2865:6;:10;2857:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2920:24;2937:6;2920:12;;:16;;:24;;;;:::i;:::-;2905:12;:39;;;;2979:33;3005:6;2979:9;:21;2989:10;2979:21;;;;;;;;;;;;;;;;:25;;:33;;;;:::i;:::-;2955:9;:21;2965:10;2955:21;;;;;;;;;;;;;;;:57;;;;3023:64;3053:10;3073:4;3080:6;3023:12;;;;;;;;;;;:29;;;;:64;;;;;;:::i;:::-;3110:10;3103:26;;;3122:6;3103:26;;;;;;;;;;;;;;;;;;1274:1:1;1445:13:10;;1429:12;:29;1421:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2758:379:3;;:::o;944:29::-;;;;:::o;5494:360::-;829:12:0;:10;:12::i;:::-;5618::3;;5600:15;:30;5578:168;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5775:16;5757:15;:34;;;;5807:39;5830:15;;5807:39;;;;;;;;;;;;;;;;;;5494:360;:::o;2031:330::-;2078:7;2118:1;2102:12;;:17;2098:77;;;2143:20;;2136:27;;;;2098:77;2205:148;2248:90;2325:12;;2248:72;2315:4;2248:62;2299:10;;2248:46;2279:14;;2248:26;:24;:26::i;:::-;:30;;:46;;;;:::i;:::-;:50;;:62;;;;:::i;:::-;:66;;:72;;;;:::i;:::-;:76;;:90;;;;:::i;:::-;2205:20;;:24;;:148;;;;:::i;:::-;2185:168;;2031:330;;:::o;758:26::-;;;;;;;;;;;;;:::o;980:35::-;;;;:::o;3825:97::-;3861:31;3870:9;:21;3880:10;3870:21;;;;;;;;;;;;;;;;3861:8;:31::i;:::-;3903:11;:9;:11::i;:::-;3825:97::o;824:31::-;;;;:::o;1315:184:5:-;1373:7;1406:1;1401;:6;;1393:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1453:9;1469:1;1465;:5;1453:17;;1490:1;1483:8;;;1315:184;;;;:::o;1750:471::-;1808:7;2058:1;2053;:6;2049:47;;;2083:1;2076:8;;;;2049:47;2108:9;2124:1;2120;:5;2108:17;;2153:1;2148;2144;:5;;;;;;:10;2136:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2212:1;2205:8;;;1750:471;;;;;:::o;2689:333::-;2747:7;2846:1;2842;:5;2834:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2889:9;2905:1;2901;:5;;;;;;2889:17;;3013:1;3006:8;;;2689:333;;;;:::o;859:181::-;917:7;937:9;953:1;949;:5;937:17;;978:1;973;:6;;965:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1031:1;1024:8;;;859:181;;;;:::o;869:133:0:-;937:5;;;;;;;;;;;923:19;;:10;:19;;;915:79;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;869:133::o;681:176:8:-;764:85;783:5;813;:14;;;:23;;;;838:2;842:5;790:58;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;790:58:8;;;;;;;38:4:-1;29:7;25:18;67:10;61:17;96:58;199:8;192:4;186;182:15;179:29;167:10;160:49;0:215;;;790:58:8;764:18;:85::i;:::-;681:176;;;:::o;865:204::-;966:95;985:5;1015;:18;;;:27;;;;1044:4;1050:2;1054:5;992:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;992:68:8;;;;;;;38:4:-1;29:7;25:18;67:10;61:17;96:58;199:8;192:4;186;182:15;179:29;167:10;160:49;0:215;;;992:68:8;966:18;:95::i;:::-;865:204;;;;:::o;2675:1114::-;3279:27;3287:5;3279:25;;;:27::i;:::-;3271:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3416:12;3430:23;3465:5;3457:19;;3477:4;3457:25;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;3457:25:8;;;;;;;;;;;;;;;;;;;;;;;;14:1:-1;21;16:31;;;;75:4;69:11;64:16;;144:4;140:9;133:4;115:16;111:27;107:43;104:1;100:51;94:4;87:65;169:16;166:1;159:27;225:16;222:1;215:4;212:1;208:12;193:49;7:242;;16:31;36:4;31:9;;7:242;;3415:67:8;;;;3501:7;3493:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3582:1;3562:10;:17;:21;3558:224;;;3704:10;3693:30;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3693:30:8;;;;;;;;;;;;;;;;3685:85;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3558:224;2675:1114;;;;:::o;558:422:9:-;618:4;826:12;937:7;925:20;917:28;;971:1;964:4;:8;957:15;;;558:422;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "2026000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"acceptOwnership()": "infinite",
								"balanceOf(address)": "1307",
								"earned(address)": "infinite",
								"exit()": "infinite",
								"getReward()": "infinite",
								"getRewardForDuration()": "infinite",
								"lastPauseTime()": "1116",
								"lastTimeRewardApplicable()": "1958",
								"lastUpdateTime()": "1072",
								"nominateNewOwner(address)": "infinite",
								"nominatedOwner()": "1120",
								"notifyRewardAmount(uint256)": "infinite",
								"owner()": "1142",
								"paused()": "1142",
								"periodFinish()": "1115",
								"recoverERC20(address,uint256)": "infinite",
								"rewardPerToken()": "infinite",
								"rewardPerTokenStored()": "1071",
								"rewardRate()": "1095",
								"rewards(address)": "1238",
								"rewardsDistribution()": "1098",
								"rewardsDuration()": "1073",
								"rewardsToken()": "1147",
								"setPaused(bool)": "infinite",
								"setRewardsDistribution(address)": "infinite",
								"setRewardsDuration(uint256)": "infinite",
								"stake(uint256)": "infinite",
								"stakingToken()": "1099",
								"totalSupply()": "1081",
								"userRewardPerTokenPaid(address)": "1236",
								"withdraw(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 532,
									"end": 6611,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 532,
									"end": 6611,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 532,
									"end": 6611,
									"name": "MSTORE"
								},
								{
									"begin": 854,
									"end": 855,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 824,
									"end": 855,
									"name": "PUSH",
									"value": "7"
								},
								{
									"begin": 824,
									"end": 855,
									"name": "SSTORE"
								},
								{
									"begin": 890,
									"end": 891,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 862,
									"end": 891,
									"name": "PUSH",
									"value": "8"
								},
								{
									"begin": 862,
									"end": 891,
									"name": "SSTORE"
								},
								{
									"begin": 931,
									"end": 937,
									"name": "PUSH",
									"value": "93A80"
								},
								{
									"begin": 898,
									"end": 937,
									"name": "PUSH",
									"value": "9"
								},
								{
									"begin": 898,
									"end": 937,
									"name": "SSTORE"
								},
								{
									"begin": 1275,
									"end": 1598,
									"name": "CALLVALUE"
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": 1275,
									"end": 1598,
									"name": "POP"
								},
								{
									"begin": 1275,
									"end": 1598,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 1275,
									"end": 1598,
									"name": "MLOAD"
								},
								{
									"begin": 1275,
									"end": 1598,
									"name": "PUSHSIZE"
								},
								{
									"begin": 1275,
									"end": 1598,
									"name": "CODESIZE"
								},
								{
									"begin": 1275,
									"end": 1598,
									"name": "SUB"
								},
								{
									"begin": 1275,
									"end": 1598,
									"name": "DUP1"
								},
								{
									"begin": 1275,
									"end": 1598,
									"name": "PUSHSIZE"
								},
								{
									"begin": 1275,
									"end": 1598,
									"name": "DUP4"
								},
								{
									"begin": 1275,
									"end": 1598,
									"name": "CODECOPY"
								},
								{
									"begin": 1275,
									"end": 1598,
									"name": "DUP2"
								},
								{
									"begin": 1275,
									"end": 1598,
									"name": "DUP2"
								},
								{
									"begin": 1275,
									"end": 1598,
									"name": "ADD"
								},
								{
									"begin": 1275,
									"end": 1598,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 1275,
									"end": 1598,
									"name": "MSTORE"
								},
								{
									"begin": 13,
									"end": 16,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 8,
									"end": 11,
									"name": "DUP2"
								},
								{
									"begin": 5,
									"end": 17,
									"name": "LT"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "ISZERO"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "PUSH [tag]",
									"value": "2"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "tag",
									"value": "2"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "JUMPDEST"
								},
								{
									"begin": 1275,
									"end": 1598,
									"name": "DUP2"
								},
								{
									"begin": 1275,
									"end": 1598,
									"name": "ADD"
								},
								{
									"begin": 1275,
									"end": 1598,
									"name": "SWAP1"
								},
								{
									"begin": 1275,
									"end": 1598,
									"name": "DUP1"
								},
								{
									"begin": 1275,
									"end": 1598,
									"name": "DUP1"
								},
								{
									"begin": 1275,
									"end": 1598,
									"name": "MLOAD"
								},
								{
									"begin": 1275,
									"end": 1598,
									"name": "SWAP1"
								},
								{
									"begin": 1275,
									"end": 1598,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 1275,
									"end": 1598,
									"name": "ADD"
								},
								{
									"begin": 1275,
									"end": 1598,
									"name": "SWAP1"
								},
								{
									"begin": 1275,
									"end": 1598,
									"name": "SWAP3"
								},
								{
									"begin": 1275,
									"end": 1598,
									"name": "SWAP2"
								},
								{
									"begin": 1275,
									"end": 1598,
									"name": "SWAP1"
								},
								{
									"begin": 1275,
									"end": 1598,
									"name": "DUP1"
								},
								{
									"begin": 1275,
									"end": 1598,
									"name": "MLOAD"
								},
								{
									"begin": 1275,
									"end": 1598,
									"name": "SWAP1"
								},
								{
									"begin": 1275,
									"end": 1598,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 1275,
									"end": 1598,
									"name": "ADD"
								},
								{
									"begin": 1275,
									"end": 1598,
									"name": "SWAP1"
								},
								{
									"begin": 1275,
									"end": 1598,
									"name": "SWAP3"
								},
								{
									"begin": 1275,
									"end": 1598,
									"name": "SWAP2"
								},
								{
									"begin": 1275,
									"end": 1598,
									"name": "SWAP1"
								},
								{
									"begin": 1275,
									"end": 1598,
									"name": "DUP1"
								},
								{
									"begin": 1275,
									"end": 1598,
									"name": "MLOAD"
								},
								{
									"begin": 1275,
									"end": 1598,
									"name": "SWAP1"
								},
								{
									"begin": 1275,
									"end": 1598,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 1275,
									"end": 1598,
									"name": "ADD"
								},
								{
									"begin": 1275,
									"end": 1598,
									"name": "SWAP1"
								},
								{
									"begin": 1275,
									"end": 1598,
									"name": "SWAP3"
								},
								{
									"begin": 1275,
									"end": 1598,
									"name": "SWAP2"
								},
								{
									"begin": 1275,
									"end": 1598,
									"name": "SWAP1"
								},
								{
									"begin": 1275,
									"end": 1598,
									"name": "DUP1"
								},
								{
									"begin": 1275,
									"end": 1598,
									"name": "MLOAD"
								},
								{
									"begin": 1275,
									"end": 1598,
									"name": "SWAP1"
								},
								{
									"begin": 1275,
									"end": 1598,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 1275,
									"end": 1598,
									"name": "ADD"
								},
								{
									"begin": 1275,
									"end": 1598,
									"name": "SWAP1"
								},
								{
									"begin": 1275,
									"end": 1598,
									"name": "SWAP3"
								},
								{
									"begin": 1275,
									"end": 1598,
									"name": "SWAP2"
								},
								{
									"begin": 1275,
									"end": 1598,
									"name": "SWAP1"
								},
								{
									"begin": 1275,
									"end": 1598,
									"name": "POP"
								},
								{
									"begin": 1275,
									"end": 1598,
									"name": "POP"
								},
								{
									"begin": 1275,
									"end": 1598,
									"name": "POP"
								},
								{
									"begin": 1435,
									"end": 1441,
									"name": "DUP4"
								},
								{
									"begin": 250,
									"end": 251,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 232,
									"end": 252,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 232,
									"end": 252,
									"name": "AND"
								},
								{
									"begin": 232,
									"end": 238,
									"name": "DUP2"
								},
								{
									"begin": 232,
									"end": 252,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 232,
									"end": 252,
									"name": "AND"
								},
								{
									"begin": 232,
									"end": 252,
									"name": "EQ"
								},
								{
									"begin": 232,
									"end": 252,
									"name": "ISZERO"
								},
								{
									"begin": 224,
									"end": 282,
									"name": "PUSH [tag]",
									"value": "8"
								},
								{
									"begin": 224,
									"end": 282,
									"name": "JUMPI"
								},
								{
									"begin": 224,
									"end": 282,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 224,
									"end": 282,
									"name": "MLOAD"
								},
								{
									"begin": 224,
									"end": 282,
									"name": "PUSH",
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 224,
									"end": 282,
									"name": "DUP2"
								},
								{
									"begin": 224,
									"end": 282,
									"name": "MSTORE"
								},
								{
									"begin": 224,
									"end": 282,
									"name": "PUSH",
									"value": "4"
								},
								{
									"begin": 224,
									"end": 282,
									"name": "ADD"
								},
								{
									"begin": 224,
									"end": 282,
									"name": "DUP1"
								},
								{
									"begin": 224,
									"end": 282,
									"name": "DUP1"
								},
								{
									"begin": 224,
									"end": 282,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 224,
									"end": 282,
									"name": "ADD"
								},
								{
									"begin": 224,
									"end": 282,
									"name": "DUP3"
								},
								{
									"begin": 224,
									"end": 282,
									"name": "DUP2"
								},
								{
									"begin": 224,
									"end": 282,
									"name": "SUB"
								},
								{
									"begin": 224,
									"end": 282,
									"name": "DUP3"
								},
								{
									"begin": 224,
									"end": 282,
									"name": "MSTORE"
								},
								{
									"begin": 224,
									"end": 282,
									"name": "PUSH",
									"value": "19"
								},
								{
									"begin": 224,
									"end": 282,
									"name": "DUP2"
								},
								{
									"begin": 224,
									"end": 282,
									"name": "MSTORE"
								},
								{
									"begin": 224,
									"end": 282,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 224,
									"end": 282,
									"name": "ADD"
								},
								{
									"begin": 224,
									"end": 282,
									"name": "DUP1"
								},
								{
									"begin": 224,
									"end": 282,
									"name": "PUSH",
									"value": "4F776E657220616464726573732063616E6E6F74206265203000000000000000"
								},
								{
									"begin": 224,
									"end": 282,
									"name": "DUP2"
								},
								{
									"begin": 224,
									"end": 282,
									"name": "MSTORE"
								},
								{
									"begin": 224,
									"end": 282,
									"name": "POP"
								},
								{
									"begin": 224,
									"end": 282,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 224,
									"end": 282,
									"name": "ADD"
								},
								{
									"begin": 224,
									"end": 282,
									"name": "SWAP2"
								},
								{
									"begin": 224,
									"end": 282,
									"name": "POP"
								},
								{
									"begin": 224,
									"end": 282,
									"name": "POP"
								},
								{
									"begin": 224,
									"end": 282,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 224,
									"end": 282,
									"name": "MLOAD"
								},
								{
									"begin": 224,
									"end": 282,
									"name": "DUP1"
								},
								{
									"begin": 224,
									"end": 282,
									"name": "SWAP2"
								},
								{
									"begin": 224,
									"end": 282,
									"name": "SUB"
								},
								{
									"begin": 224,
									"end": 282,
									"name": "SWAP1"
								},
								{
									"begin": 224,
									"end": 282,
									"name": "REVERT"
								},
								{
									"begin": 224,
									"end": 282,
									"name": "tag",
									"value": "8"
								},
								{
									"begin": 224,
									"end": 282,
									"name": "JUMPDEST"
								},
								{
									"begin": 301,
									"end": 307,
									"name": "DUP1"
								},
								{
									"begin": 293,
									"end": 298,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 293,
									"end": 298,
									"name": "DUP1"
								},
								{
									"begin": 293,
									"end": 307,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 293,
									"end": 307,
									"name": "EXP"
								},
								{
									"begin": 293,
									"end": 307,
									"name": "DUP2"
								},
								{
									"begin": 293,
									"end": 307,
									"name": "SLOAD"
								},
								{
									"begin": 293,
									"end": 307,
									"name": "DUP2"
								},
								{
									"begin": 293,
									"end": 307,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 293,
									"end": 307,
									"name": "MUL"
								},
								{
									"begin": 293,
									"end": 307,
									"name": "NOT"
								},
								{
									"begin": 293,
									"end": 307,
									"name": "AND"
								},
								{
									"begin": 293,
									"end": 307,
									"name": "SWAP1"
								},
								{
									"begin": 293,
									"end": 307,
									"name": "DUP4"
								},
								{
									"begin": 293,
									"end": 307,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 293,
									"end": 307,
									"name": "AND"
								},
								{
									"begin": 293,
									"end": 307,
									"name": "MUL"
								},
								{
									"begin": 293,
									"end": 307,
									"name": "OR"
								},
								{
									"begin": 293,
									"end": 307,
									"name": "SWAP1"
								},
								{
									"begin": 293,
									"end": 307,
									"name": "SSTORE"
								},
								{
									"begin": 293,
									"end": 307,
									"name": "POP"
								},
								{
									"begin": 323,
									"end": 355,
									"name": "PUSH",
									"value": "B532073B38C83145E3E5135377A08BF9AAB55BC0FD7C1179CD4FB995D2A5159C"
								},
								{
									"begin": 344,
									"end": 345,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 348,
									"end": 354,
									"name": "DUP3"
								},
								{
									"begin": 323,
									"end": 355,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 323,
									"end": 355,
									"name": "MLOAD"
								},
								{
									"begin": 323,
									"end": 355,
									"name": "DUP1"
								},
								{
									"begin": 323,
									"end": 355,
									"name": "DUP4"
								},
								{
									"begin": 323,
									"end": 355,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 323,
									"end": 355,
									"name": "AND"
								},
								{
									"begin": 323,
									"end": 355,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 323,
									"end": 355,
									"name": "AND"
								},
								{
									"begin": 323,
									"end": 355,
									"name": "DUP2"
								},
								{
									"begin": 323,
									"end": 355,
									"name": "MSTORE"
								},
								{
									"begin": 323,
									"end": 355,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 323,
									"end": 355,
									"name": "ADD"
								},
								{
									"begin": 323,
									"end": 355,
									"name": "DUP3"
								},
								{
									"begin": 323,
									"end": 355,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 323,
									"end": 355,
									"name": "AND"
								},
								{
									"begin": 323,
									"end": 355,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 323,
									"end": 355,
									"name": "AND"
								},
								{
									"begin": 323,
									"end": 355,
									"name": "DUP2"
								},
								{
									"begin": 323,
									"end": 355,
									"name": "MSTORE"
								},
								{
									"begin": 323,
									"end": 355,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 323,
									"end": 355,
									"name": "ADD"
								},
								{
									"begin": 323,
									"end": 355,
									"name": "SWAP3"
								},
								{
									"begin": 323,
									"end": 355,
									"name": "POP"
								},
								{
									"begin": 323,
									"end": 355,
									"name": "POP"
								},
								{
									"begin": 323,
									"end": 355,
									"name": "POP"
								},
								{
									"begin": 323,
									"end": 355,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 323,
									"end": 355,
									"name": "MLOAD"
								},
								{
									"begin": 323,
									"end": 355,
									"name": "DUP1"
								},
								{
									"begin": 323,
									"end": 355,
									"name": "SWAP2"
								},
								{
									"begin": 323,
									"end": 355,
									"name": "SUB"
								},
								{
									"begin": 323,
									"end": 355,
									"name": "SWAP1"
								},
								{
									"begin": 323,
									"end": 355,
									"name": "LOG1"
								},
								{
									"begin": 178,
									"end": 363,
									"name": "POP"
								},
								{
									"begin": 905,
									"end": 906,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 889,
									"end": 902,
									"name": "PUSH",
									"value": "3"
								},
								{
									"begin": 889,
									"end": 906,
									"name": "DUP2"
								},
								{
									"begin": 889,
									"end": 906,
									"name": "SWAP1"
								},
								{
									"begin": 889,
									"end": 906,
									"name": "SSTORE"
								},
								{
									"begin": 889,
									"end": 906,
									"name": "POP"
								},
								{
									"begin": 367,
									"end": 368,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 350,
									"end": 369,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 350,
									"end": 369,
									"name": "AND"
								},
								{
									"begin": 350,
									"end": 355,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 350,
									"end": 355,
									"name": "DUP1"
								},
								{
									"begin": 350,
									"end": 355,
									"name": "SWAP1"
								},
								{
									"begin": 350,
									"end": 355,
									"name": "SLOAD"
								},
								{
									"begin": 350,
									"end": 355,
									"name": "SWAP1"
								},
								{
									"begin": 350,
									"end": 355,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 350,
									"end": 355,
									"name": "EXP"
								},
								{
									"begin": 350,
									"end": 355,
									"name": "SWAP1"
								},
								{
									"begin": 350,
									"end": 355,
									"name": "DIV"
								},
								{
									"begin": 350,
									"end": 355,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 350,
									"end": 355,
									"name": "AND"
								},
								{
									"begin": 350,
									"end": 369,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 350,
									"end": 369,
									"name": "AND"
								},
								{
									"begin": 350,
									"end": 369,
									"name": "EQ"
								},
								{
									"begin": 350,
									"end": 369,
									"name": "ISZERO"
								},
								{
									"begin": 342,
									"end": 391,
									"name": "PUSH [tag]",
									"value": "11"
								},
								{
									"begin": 342,
									"end": 391,
									"name": "JUMPI"
								},
								{
									"begin": 342,
									"end": 391,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 342,
									"end": 391,
									"name": "MLOAD"
								},
								{
									"begin": 342,
									"end": 391,
									"name": "PUSH",
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 342,
									"end": 391,
									"name": "DUP2"
								},
								{
									"begin": 342,
									"end": 391,
									"name": "MSTORE"
								},
								{
									"begin": 342,
									"end": 391,
									"name": "PUSH",
									"value": "4"
								},
								{
									"begin": 342,
									"end": 391,
									"name": "ADD"
								},
								{
									"begin": 342,
									"end": 391,
									"name": "DUP1"
								},
								{
									"begin": 342,
									"end": 391,
									"name": "DUP1"
								},
								{
									"begin": 342,
									"end": 391,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 342,
									"end": 391,
									"name": "ADD"
								},
								{
									"begin": 342,
									"end": 391,
									"name": "DUP3"
								},
								{
									"begin": 342,
									"end": 391,
									"name": "DUP2"
								},
								{
									"begin": 342,
									"end": 391,
									"name": "SUB"
								},
								{
									"begin": 342,
									"end": 391,
									"name": "DUP3"
								},
								{
									"begin": 342,
									"end": 391,
									"name": "MSTORE"
								},
								{
									"begin": 342,
									"end": 391,
									"name": "PUSH",
									"value": "11"
								},
								{
									"begin": 342,
									"end": 391,
									"name": "DUP2"
								},
								{
									"begin": 342,
									"end": 391,
									"name": "MSTORE"
								},
								{
									"begin": 342,
									"end": 391,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 342,
									"end": 391,
									"name": "ADD"
								},
								{
									"begin": 342,
									"end": 391,
									"name": "DUP1"
								},
								{
									"begin": 342,
									"end": 391,
									"name": "PUSH",
									"value": "4F776E6572206D75737420626520736574000000000000000000000000000000"
								},
								{
									"begin": 342,
									"end": 391,
									"name": "DUP2"
								},
								{
									"begin": 342,
									"end": 391,
									"name": "MSTORE"
								},
								{
									"begin": 342,
									"end": 391,
									"name": "POP"
								},
								{
									"begin": 342,
									"end": 391,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 342,
									"end": 391,
									"name": "ADD"
								},
								{
									"begin": 342,
									"end": 391,
									"name": "SWAP2"
								},
								{
									"begin": 342,
									"end": 391,
									"name": "POP"
								},
								{
									"begin": 342,
									"end": 391,
									"name": "POP"
								},
								{
									"begin": 342,
									"end": 391,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 342,
									"end": 391,
									"name": "MLOAD"
								},
								{
									"begin": 342,
									"end": 391,
									"name": "DUP1"
								},
								{
									"begin": 342,
									"end": 391,
									"name": "SWAP2"
								},
								{
									"begin": 342,
									"end": 391,
									"name": "SUB"
								},
								{
									"begin": 342,
									"end": 391,
									"name": "SWAP1"
								},
								{
									"begin": 342,
									"end": 391,
									"name": "REVERT"
								},
								{
									"begin": 342,
									"end": 391,
									"name": "tag",
									"value": "11"
								},
								{
									"begin": 342,
									"end": 391,
									"name": "JUMPDEST"
								},
								{
									"begin": 1476,
									"end": 1489,
									"name": "DUP2"
								},
								{
									"begin": 1454,
									"end": 1466,
									"name": "PUSH",
									"value": "5"
								},
								{
									"begin": 1454,
									"end": 1466,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 1454,
									"end": 1490,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 1454,
									"end": 1490,
									"name": "EXP"
								},
								{
									"begin": 1454,
									"end": 1490,
									"name": "DUP2"
								},
								{
									"begin": 1454,
									"end": 1490,
									"name": "SLOAD"
								},
								{
									"begin": 1454,
									"end": 1490,
									"name": "DUP2"
								},
								{
									"begin": 1454,
									"end": 1490,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1454,
									"end": 1490,
									"name": "MUL"
								},
								{
									"begin": 1454,
									"end": 1490,
									"name": "NOT"
								},
								{
									"begin": 1454,
									"end": 1490,
									"name": "AND"
								},
								{
									"begin": 1454,
									"end": 1490,
									"name": "SWAP1"
								},
								{
									"begin": 1454,
									"end": 1490,
									"name": "DUP4"
								},
								{
									"begin": 1454,
									"end": 1490,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1454,
									"end": 1490,
									"name": "AND"
								},
								{
									"begin": 1454,
									"end": 1490,
									"name": "MUL"
								},
								{
									"begin": 1454,
									"end": 1490,
									"name": "OR"
								},
								{
									"begin": 1454,
									"end": 1490,
									"name": "SWAP1"
								},
								{
									"begin": 1454,
									"end": 1490,
									"name": "SSTORE"
								},
								{
									"begin": 1454,
									"end": 1490,
									"name": "POP"
								},
								{
									"begin": 1523,
									"end": 1536,
									"name": "DUP1"
								},
								{
									"begin": 1501,
									"end": 1513,
									"name": "PUSH",
									"value": "6"
								},
								{
									"begin": 1501,
									"end": 1513,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 1501,
									"end": 1537,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 1501,
									"end": 1537,
									"name": "EXP"
								},
								{
									"begin": 1501,
									"end": 1537,
									"name": "DUP2"
								},
								{
									"begin": 1501,
									"end": 1537,
									"name": "SLOAD"
								},
								{
									"begin": 1501,
									"end": 1537,
									"name": "DUP2"
								},
								{
									"begin": 1501,
									"end": 1537,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1501,
									"end": 1537,
									"name": "MUL"
								},
								{
									"begin": 1501,
									"end": 1537,
									"name": "NOT"
								},
								{
									"begin": 1501,
									"end": 1537,
									"name": "AND"
								},
								{
									"begin": 1501,
									"end": 1537,
									"name": "SWAP1"
								},
								{
									"begin": 1501,
									"end": 1537,
									"name": "DUP4"
								},
								{
									"begin": 1501,
									"end": 1537,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1501,
									"end": 1537,
									"name": "AND"
								},
								{
									"begin": 1501,
									"end": 1537,
									"name": "MUL"
								},
								{
									"begin": 1501,
									"end": 1537,
									"name": "OR"
								},
								{
									"begin": 1501,
									"end": 1537,
									"name": "SWAP1"
								},
								{
									"begin": 1501,
									"end": 1537,
									"name": "SSTORE"
								},
								{
									"begin": 1501,
									"end": 1537,
									"name": "POP"
								},
								{
									"begin": 1570,
									"end": 1590,
									"name": "DUP3"
								},
								{
									"begin": 1548,
									"end": 1567,
									"name": "PUSH",
									"value": "2"
								},
								{
									"begin": 1548,
									"end": 1567,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 1548,
									"end": 1590,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 1548,
									"end": 1590,
									"name": "EXP"
								},
								{
									"begin": 1548,
									"end": 1590,
									"name": "DUP2"
								},
								{
									"begin": 1548,
									"end": 1590,
									"name": "SLOAD"
								},
								{
									"begin": 1548,
									"end": 1590,
									"name": "DUP2"
								},
								{
									"begin": 1548,
									"end": 1590,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1548,
									"end": 1590,
									"name": "MUL"
								},
								{
									"begin": 1548,
									"end": 1590,
									"name": "NOT"
								},
								{
									"begin": 1548,
									"end": 1590,
									"name": "AND"
								},
								{
									"begin": 1548,
									"end": 1590,
									"name": "SWAP1"
								},
								{
									"begin": 1548,
									"end": 1590,
									"name": "DUP4"
								},
								{
									"begin": 1548,
									"end": 1590,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1548,
									"end": 1590,
									"name": "AND"
								},
								{
									"begin": 1548,
									"end": 1590,
									"name": "MUL"
								},
								{
									"begin": 1548,
									"end": 1590,
									"name": "OR"
								},
								{
									"begin": 1548,
									"end": 1590,
									"name": "SWAP1"
								},
								{
									"begin": 1548,
									"end": 1590,
									"name": "SSTORE"
								},
								{
									"begin": 1548,
									"end": 1590,
									"name": "POP"
								},
								{
									"begin": 1275,
									"end": 1598,
									"name": "POP"
								},
								{
									"begin": 1275,
									"end": 1598,
									"name": "POP"
								},
								{
									"begin": 1275,
									"end": 1598,
									"name": "POP"
								},
								{
									"begin": 1275,
									"end": 1598,
									"name": "POP"
								},
								{
									"begin": 532,
									"end": 6611,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 532,
									"end": 6611,
									"name": "DUP1"
								},
								{
									"begin": 532,
									"end": 6611,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 532,
									"end": 6611,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 532,
									"end": 6611,
									"name": "CODECOPY"
								},
								{
									"begin": 532,
									"end": 6611,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 532,
									"end": 6611,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a7231582006e94228cee1c056a7c52d7d287a7a59b0962bdf14a3600cb664e2cdc13b6e6264736f6c63430005100032",
									".code": [
										{
											"begin": 532,
											"end": 6611,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 532,
											"end": 6611,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 532,
											"end": 6611,
											"name": "MSTORE"
										},
										{
											"begin": 532,
											"end": 6611,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 532,
											"end": 6611,
											"name": "POP"
										},
										{
											"begin": 532,
											"end": 6611,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 532,
											"end": 6611,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 532,
											"end": 6611,
											"name": "LT"
										},
										{
											"begin": 532,
											"end": 6611,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 532,
											"end": 6611,
											"name": "JUMPI"
										},
										{
											"begin": 532,
											"end": 6611,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 532,
											"end": 6611,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 532,
											"end": 6611,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 532,
											"end": 6611,
											"name": "SHR"
										},
										{
											"begin": 532,
											"end": 6611,
											"name": "DUP1"
										},
										{
											"begin": 532,
											"end": 6611,
											"name": "PUSH",
											"value": "72F702F3"
										},
										{
											"begin": 532,
											"end": 6611,
											"name": "GT"
										},
										{
											"begin": 532,
											"end": 6611,
											"name": "PUSH [tag]",
											"value": "34"
										},
										{
											"begin": 532,
											"end": 6611,
											"name": "JUMPI"
										},
										{
											"begin": 532,
											"end": 6611,
											"name": "DUP1"
										},
										{
											"begin": 532,
											"end": 6611,
											"name": "PUSH",
											"value": "A694FC3A"
										},
										{
											"begin": 532,
											"end": 6611,
											"name": "GT"
										},
										{
											"begin": 532,
											"end": 6611,
											"name": "PUSH [tag]",
											"value": "35"
										},
										{
											"begin": 532,
											"end": 6611,
											"name": "JUMPI"
										},
										{
											"begin": 532,
											"end": 6611,
											"name": "DUP1"
										},
										{
											"begin": 532,
											"end": 6611,
											"name": "PUSH",
											"value": "D1AF0C7D"
										},
										{
											"begin": 532,
											"end": 6611,
											"name": "GT"
										},
										{
											"begin": 532,
											"end": 6611,
											"name": "PUSH [tag]",
											"value": "36"
										},
										{
											"begin": 532,
											"end": 6611,
											"name": "JUMPI"
										},
										{
											"begin": 532,
											"end": 6611,
											"name": "DUP1"
										},
										{
											"begin": 532,
											"end": 6611,
											"name": "PUSH",
											"value": "D1AF0C7D"
										},
										{
											"begin": 532,
											"end": 6611,
											"name": "EQ"
										},
										{
											"begin": 532,
											"end": 6611,
											"name": "PUSH [tag]",
											"value": "30"
										},
										{
											"begin": 532,
											"end": 6611,
											"name": "JUMPI"
										},
										{
											"begin": 532,
											"end": 6611,
											"name": "DUP1"
										},
										{
											"begin": 532,
											"end": 6611,
											"name": "PUSH",
											"value": "DF136D65"
										},
										{
											"begin": 532,
											"end": 6611,
											"name": "EQ"
										},
										{
											"begin": 532,
											"end": 6611,
											"name": "PUSH [tag]",
											"value": "31"
										},
										{
											"begin": 532,
											"end": 6611,
											"name": "JUMPI"
										},
										{
											"begin": 532,
											"end": 6611,
											"name": "DUP1"
										},
										{
											"begin": 532,
											"end": 6611,
											"name": "PUSH",
											"value": "E9FAD8EE"
										},
										{
											"begin": 532,
											"end": 6611,
											"name": "EQ"
										},
										{
											"begin": 532,
											"end": 6611,
											"name": "PUSH [tag]",
											"value": "32"
										},
										{
											"begin": 532,
											"end": 6611,
											"name": "JUMPI"
										},
										{
											"begin": 532,
											"end": 6611,
											"name": "DUP1"
										},
										{
											"begin": 532,
											"end": 6611,
											"name": "PUSH",
											"value": "EBE2B12B"
										},
										{
											"begin": 532,
											"end": 6611,
											"name": "EQ"
										},
										{
											"begin": 532,
											"end": 6611,
											"name": "PUSH [tag]",
											"value": "33"
										},
										{
											"begin": 532,
											"end": 6611,
											"name": "JUMPI"
										},
										{
											"begin": 532,
											"end": 6611,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 532,
											"end": 6611,
											"name": "JUMP"
										},
										{
											"begin": 532,
											"end": 6611,
											"name": "tag",
											"value": "36"
										},
										{
											"begin": 532,
											"end": 6611,
											"name": "JUMPDEST"
										},
										{
											"begin": 532,
											"end": 6611,
											"name": "DUP1"
										},
										{
											"begin": 532,
											"end": 6611,
											"name": "PUSH",
											"value": "A694FC3A"
										},
										{
											"begin": 532,
											"end": 6611,
											"name": "EQ"
										},
										{
											"begin": 532,
											"end": 6611,
											"name": "PUSH [tag]",
											"value": "26"
										},
										{
											"begin": 532,
											"end": 6611,
											"name": "JUMPI"
										},
										{
											"begin": 532,
											"end": 6611,
											"name": "DUP1"
										},
										{
											"begin": 532,
											"end": 6611,
											"name": "PUSH",
											"value": "C8F33C91"
										},
										{
											"begin": 532,
											"end": 6611,
											"name": "EQ"
										},
										{
											"begin": 532,
											"end": 6611,
											"name": "PUSH [tag]",
											"value": "27"
										},
										{
											"begin": 532,
											"end": 6611,
											"name": "JUMPI"
										},
										{
											"begin": 532,
											"end": 6611,
											"name": "DUP1"
										},
										{
											"begin": 532,
											"end": 6611,
											"name": "PUSH",
											"value": "CC1A378F"
										},
										{
											"begin": 532,
											"end": 6611,
											"name": "EQ"
										},
										{
											"begin": 532,
											"end": 6611,
											"name": "PUSH [tag]",
											"value": "28"
										},
										{
											"begin": 532,
											"end": 6611,
											"name": "JUMPI"
										},
										{
											"begin": 532,
											"end": 6611,
											"name": "DUP1"
										},
										{
											"begin": 532,
											"end": 6611,
											"name": "PUSH",
											"value": "CD3DAF9D"
										},
										{
											"begin": 532,
											"end": 6611,
											"name": "EQ"
										},
										{
											"begin": 532,
											"end": 6611,
											"name": "PUSH [tag]",
											"value": "29"
										},
										{
											"begin": 532,
											"end": 6611,
											"name": "JUMPI"
										},
										{
											"begin": 532,
											"end": 6611,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 532,
											"end": 6611,
											"name": "JUMP"
										},
										{
											"begin": 532,
											"end": 6611,
											"name": "tag",
											"value": "35"
										},
										{
											"begin": 532,
											"end": 6611,
											"name": "JUMPDEST"
										},
										{
											"begin": 532,
											"end": 6611,
											"name": "DUP1"
										},
										{
											"begin": 532,
											"end": 6611,
											"name": "PUSH",
											"value": "8980F11F"
										},
										{
											"begin": 532,
											"end": 6611,
											"name": "GT"
										},
										{
											"begin": 532,
											"end": 6611,
											"name": "PUSH [tag]",
											"value": "37"
										},
										{
											"begin": 532,
											"end": 6611,
											"name": "JUMPI"
										},
										{
											"begin": 532,
											"end": 6611,
											"name": "DUP1"
										},
										{
											"begin": 532,
											"end": 6611,
											"name": "PUSH",
											"value": "8980F11F"
										},
										{
											"begin": 532,
											"end": 6611,
											"name": "EQ"
										},
										{
											"begin": 532,
											"end": 6611,
											"name": "PUSH [tag]",
											"value": "22"
										},
										{
											"begin": 532,
											"end": 6611,
											"name": "JUMPI"
										},
										{
											"begin": 532,
											"end": 6611,
											"name": "DUP1"
										},
										{
											"begin": 532,
											"end": 6611,
											"name": "PUSH",
											"value": "8B876347"
										},
										{
											"begin": 532,
											"end": 6611,
											"name": "EQ"
										},
										{
											"begin": 532,
											"end": 6611,
											"name": "PUSH [tag]",
											"value": "23"
										},
										{
											"begin": 532,
											"end": 6611,
											"name": "JUMPI"
										},
										{
											"begin": 532,
											"end": 6611,
											"name": "DUP1"
										},
										{
											"begin": 532,
											"end": 6611,
											"name": "PUSH",
											"value": "8DA5CB5B"
										},
										{
											"begin": 532,
											"end": 6611,
											"name": "EQ"
										},
										{
											"begin": 532,
											"end": 6611,
											"name": "PUSH [tag]",
											"value": "24"
										},
										{
											"begin": 532,
											"end": 6611,
											"name": "JUMPI"
										},
										{
											"begin": 532,
											"end": 6611,
											"name": "DUP1"
										},
										{
											"begin": 532,
											"end": 6611,
											"name": "PUSH",
											"value": "91B4DED9"
										},
										{
											"begin": 532,
											"end": 6611,
											"name": "EQ"
										},
										{
											"begin": 532,
											"end": 6611,
											"name": "PUSH [tag]",
											"value": "25"
										},
										{
											"begin": 532,
											"end": 6611,
											"name": "JUMPI"
										},
										{
											"begin": 532,
											"end": 6611,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 532,
											"end": 6611,
											"name": "JUMP"
										},
										{
											"begin": 532,
											"end": 6611,
											"name": "tag",
											"value": "37"
										},
										{
											"begin": 532,
											"end": 6611,
											"name": "JUMPDEST"
										},
										{
											"begin": 532,
											"end": 6611,
											"name": "DUP1"
										},
										{
											"begin": 532,
											"end": 6611,
											"name": "PUSH",
											"value": "72F702F3"
										},
										{
											"begin": 532,
											"end": 6611,
											"name": "EQ"
										},
										{
											"begin": 532,
											"end": 6611,
											"name": "PUSH [tag]",
											"value": "18"
										},
										{
											"begin": 532,
											"end": 6611,
											"name": "JUMPI"
										},
										{
											"begin": 532,
											"end": 6611,
											"name": "DUP1"
										},
										{
											"begin": 532,
											"end": 6611,
											"name": "PUSH",
											"value": "79BA5097"
										},
										{
											"begin": 532,
											"end": 6611,
											"name": "EQ"
										},
										{
											"begin": 532,
											"end": 6611,
											"name": "PUSH [tag]",
											"value": "19"
										},
										{
											"begin": 532,
											"end": 6611,
											"name": "JUMPI"
										},
										{
											"begin": 532,
											"end": 6611,
											"name": "DUP1"
										},
										{
											"begin": 532,
											"end": 6611,
											"name": "PUSH",
											"value": "7B0A47EE"
										},
										{
											"begin": 532,
											"end": 6611,
											"name": "EQ"
										},
										{
											"begin": 532,
											"end": 6611,
											"name": "PUSH [tag]",
											"value": "20"
										},
										{
											"begin": 532,
											"end": 6611,
											"name": "JUMPI"
										},
										{
											"begin": 532,
											"end": 6611,
											"name": "DUP1"
										},
										{
											"begin": 532,
											"end": 6611,
											"name": "PUSH",
											"value": "80FAA57D"
										},
										{
											"begin": 532,
											"end": 6611,
											"name": "EQ"
										},
										{
											"begin": 532,
											"end": 6611,
											"name": "PUSH [tag]",
											"value": "21"
										},
										{
											"begin": 532,
											"end": 6611,
											"name": "JUMPI"
										},
										{
											"begin": 532,
											"end": 6611,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 532,
											"end": 6611,
											"name": "JUMP"
										},
										{
											"begin": 532,
											"end": 6611,
											"name": "tag",
											"value": "34"
										},
										{
											"begin": 532,
											"end": 6611,
											"name": "JUMPDEST"
										},
										{
											"begin": 532,
											"end": 6611,
											"name": "DUP1"
										},
										{
											"begin": 532,
											"end": 6611,
											"name": "PUSH",
											"value": "2E1A7D4D"
										},
										{
											"begin": 532,
											"end": 6611,
											"name": "GT"
										},
										{
											"begin": 532,
											"end": 6611,
											"name": "PUSH [tag]",
											"value": "38"
										},
										{
											"begin": 532,
											"end": 6611,
											"name": "JUMPI"
										},
										{
											"begin": 532,
											"end": 6611,
											"name": "DUP1"
										},
										{
											"begin": 532,
											"end": 6611,
											"name": "PUSH",
											"value": "3FC6DF6E"
										},
										{
											"begin": 532,
											"end": 6611,
											"name": "GT"
										},
										{
											"begin": 532,
											"end": 6611,
											"name": "PUSH [tag]",
											"value": "39"
										},
										{
											"begin": 532,
											"end": 6611,
											"name": "JUMPI"
										},
										{
											"begin": 532,
											"end": 6611,
											"name": "DUP1"
										},
										{
											"begin": 532,
											"end": 6611,
											"name": "PUSH",
											"value": "3FC6DF6E"
										},
										{
											"begin": 532,
											"end": 6611,
											"name": "EQ"
										},
										{
											"begin": 532,
											"end": 6611,
											"name": "PUSH [tag]",
											"value": "14"
										},
										{
											"begin": 532,
											"end": 6611,
											"name": "JUMPI"
										},
										{
											"begin": 532,
											"end": 6611,
											"name": "DUP1"
										},
										{
											"begin": 532,
											"end": 6611,
											"name": "PUSH",
											"value": "53A47BB7"
										},
										{
											"begin": 532,
											"end": 6611,
											"name": "EQ"
										},
										{
											"begin": 532,
											"end": 6611,
											"name": "PUSH [tag]",
											"value": "15"
										},
										{
											"begin": 532,
											"end": 6611,
											"name": "JUMPI"
										},
										{
											"begin": 532,
											"end": 6611,
											"name": "DUP1"
										},
										{
											"begin": 532,
											"end": 6611,
											"name": "PUSH",
											"value": "5C975ABB"
										},
										{
											"begin": 532,
											"end": 6611,
											"name": "EQ"
										},
										{
											"begin": 532,
											"end": 6611,
											"name": "PUSH [tag]",
											"value": "16"
										},
										{
											"begin": 532,
											"end": 6611,
											"name": "JUMPI"
										},
										{
											"begin": 532,
											"end": 6611,
											"name": "DUP1"
										},
										{
											"begin": 532,
											"end": 6611,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": 532,
											"end": 6611,
											"name": "EQ"
										},
										{
											"begin": 532,
											"end": 6611,
											"name": "PUSH [tag]",
											"value": "17"
										},
										{
											"begin": 532,
											"end": 6611,
											"name": "JUMPI"
										},
										{
											"begin": 532,
											"end": 6611,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 532,
											"end": 6611,
											"name": "JUMP"
										},
										{
											"begin": 532,
											"end": 6611,
											"name": "tag",
											"value": "39"
										},
										{
											"begin": 532,
											"end": 6611,
											"name": "JUMPDEST"
										},
										{
											"begin": 532,
											"end": 6611,
											"name": "DUP1"
										},
										{
											"begin": 532,
											"end": 6611,
											"name": "PUSH",
											"value": "2E1A7D4D"
										},
										{
											"begin": 532,
											"end": 6611,
											"name": "EQ"
										},
										{
											"begin": 532,
											"end": 6611,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 532,
											"end": 6611,
											"name": "JUMPI"
										},
										{
											"begin": 532,
											"end": 6611,
											"name": "DUP1"
										},
										{
											"begin": 532,
											"end": 6611,
											"name": "PUSH",
											"value": "386A9525"
										},
										{
											"begin": 532,
											"end": 6611,
											"name": "EQ"
										},
										{
											"begin": 532,
											"end": 6611,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 532,
											"end": 6611,
											"name": "JUMPI"
										},
										{
											"begin": 532,
											"end": 6611,
											"name": "DUP1"
										},
										{
											"begin": 532,
											"end": 6611,
											"name": "PUSH",
											"value": "3C6B16AB"
										},
										{
											"begin": 532,
											"end": 6611,
											"name": "EQ"
										},
										{
											"begin": 532,
											"end": 6611,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 532,
											"end": 6611,
											"name": "JUMPI"
										},
										{
											"begin": 532,
											"end": 6611,
											"name": "DUP1"
										},
										{
											"begin": 532,
											"end": 6611,
											"name": "PUSH",
											"value": "3D18B912"
										},
										{
											"begin": 532,
											"end": 6611,
											"name": "EQ"
										},
										{
											"begin": 532,
											"end": 6611,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 532,
											"end": 6611,
											"name": "JUMPI"
										},
										{
											"begin": 532,
											"end": 6611,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 532,
											"end": 6611,
											"name": "JUMP"
										},
										{
											"begin": 532,
											"end": 6611,
											"name": "tag",
											"value": "38"
										},
										{
											"begin": 532,
											"end": 6611,
											"name": "JUMPDEST"
										},
										{
											"begin": 532,
											"end": 6611,
											"name": "DUP1"
										},
										{
											"begin": 532,
											"end": 6611,
											"name": "PUSH",
											"value": "16C38B3C"
										},
										{
											"begin": 532,
											"end": 6611,
											"name": "GT"
										},
										{
											"begin": 532,
											"end": 6611,
											"name": "PUSH [tag]",
											"value": "40"
										},
										{
											"begin": 532,
											"end": 6611,
											"name": "JUMPI"
										},
										{
											"begin": 532,
											"end": 6611,
											"name": "DUP1"
										},
										{
											"begin": 532,
											"end": 6611,
											"name": "PUSH",
											"value": "16C38B3C"
										},
										{
											"begin": 532,
											"end": 6611,
											"name": "EQ"
										},
										{
											"begin": 532,
											"end": 6611,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 532,
											"end": 6611,
											"name": "JUMPI"
										},
										{
											"begin": 532,
											"end": 6611,
											"name": "DUP1"
										},
										{
											"begin": 532,
											"end": 6611,
											"name": "PUSH",
											"value": "18160DDD"
										},
										{
											"begin": 532,
											"end": 6611,
											"name": "EQ"
										},
										{
											"begin": 532,
											"end": 6611,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 532,
											"end": 6611,
											"name": "JUMPI"
										},
										{
											"begin": 532,
											"end": 6611,
											"name": "DUP1"
										},
										{
											"begin": 532,
											"end": 6611,
											"name": "PUSH",
											"value": "19762143"
										},
										{
											"begin": 532,
											"end": 6611,
											"name": "EQ"
										},
										{
											"begin": 532,
											"end": 6611,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 532,
											"end": 6611,
											"name": "JUMPI"
										},
										{
											"begin": 532,
											"end": 6611,
											"name": "DUP1"
										},
										{
											"begin": 532,
											"end": 6611,
											"name": "PUSH",
											"value": "1C1F78EB"
										},
										{
											"begin": 532,
											"end": 6611,
											"name": "EQ"
										},
										{
											"begin": 532,
											"end": 6611,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 532,
											"end": 6611,
											"name": "JUMPI"
										},
										{
											"begin": 532,
											"end": 6611,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 532,
											"end": 6611,
											"name": "JUMP"
										},
										{
											"begin": 532,
											"end": 6611,
											"name": "tag",
											"value": "40"
										},
										{
											"begin": 532,
											"end": 6611,
											"name": "JUMPDEST"
										},
										{
											"begin": 532,
											"end": 6611,
											"name": "DUP1"
										},
										{
											"begin": 532,
											"end": 6611,
											"name": "PUSH",
											"value": "8CC262"
										},
										{
											"begin": 532,
											"end": 6611,
											"name": "EQ"
										},
										{
											"begin": 532,
											"end": 6611,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 532,
											"end": 6611,
											"name": "JUMPI"
										},
										{
											"begin": 532,
											"end": 6611,
											"name": "DUP1"
										},
										{
											"begin": 532,
											"end": 6611,
											"name": "PUSH",
											"value": "700037D"
										},
										{
											"begin": 532,
											"end": 6611,
											"name": "EQ"
										},
										{
											"begin": 532,
											"end": 6611,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 532,
											"end": 6611,
											"name": "JUMPI"
										},
										{
											"begin": 532,
											"end": 6611,
											"name": "DUP1"
										},
										{
											"begin": 532,
											"end": 6611,
											"name": "PUSH",
											"value": "1627540C"
										},
										{
											"begin": 532,
											"end": 6611,
											"name": "EQ"
										},
										{
											"begin": 532,
											"end": 6611,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 532,
											"end": 6611,
											"name": "JUMPI"
										},
										{
											"begin": 532,
											"end": 6611,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 532,
											"end": 6611,
											"name": "JUMPDEST"
										},
										{
											"begin": 532,
											"end": 6611,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 532,
											"end": 6611,
											"name": "DUP1"
										},
										{
											"begin": 532,
											"end": 6611,
											"name": "REVERT"
										},
										{
											"begin": 2369,
											"end": 2567,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 2369,
											"end": 2567,
											"name": "JUMPDEST"
										},
										{
											"begin": 2369,
											"end": 2567,
											"name": "PUSH [tag]",
											"value": "41"
										},
										{
											"begin": 2369,
											"end": 2567,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2369,
											"end": 2567,
											"name": "DUP1"
										},
										{
											"begin": 2369,
											"end": 2567,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 2369,
											"end": 2567,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "42"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "42"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 2369,
											"end": 2567,
											"name": "DUP2"
										},
										{
											"begin": 2369,
											"end": 2567,
											"name": "ADD"
										},
										{
											"begin": 2369,
											"end": 2567,
											"name": "SWAP1"
										},
										{
											"begin": 2369,
											"end": 2567,
											"name": "DUP1"
										},
										{
											"begin": 2369,
											"end": 2567,
											"name": "DUP1"
										},
										{
											"begin": 2369,
											"end": 2567,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2369,
											"end": 2567,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2369,
											"end": 2567,
											"name": "AND"
										},
										{
											"begin": 2369,
											"end": 2567,
											"name": "SWAP1"
										},
										{
											"begin": 2369,
											"end": 2567,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2369,
											"end": 2567,
											"name": "ADD"
										},
										{
											"begin": 2369,
											"end": 2567,
											"name": "SWAP1"
										},
										{
											"begin": 2369,
											"end": 2567,
											"name": "SWAP3"
										},
										{
											"begin": 2369,
											"end": 2567,
											"name": "SWAP2"
										},
										{
											"begin": 2369,
											"end": 2567,
											"name": "SWAP1"
										},
										{
											"begin": 2369,
											"end": 2567,
											"name": "POP"
										},
										{
											"begin": 2369,
											"end": 2567,
											"name": "POP"
										},
										{
											"begin": 2369,
											"end": 2567,
											"name": "POP"
										},
										{
											"begin": 2369,
											"end": 2567,
											"name": "PUSH [tag]",
											"value": "43"
										},
										{
											"begin": 2369,
											"end": 2567,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2369,
											"end": 2567,
											"name": "tag",
											"value": "41"
										},
										{
											"begin": 2369,
											"end": 2567,
											"name": "JUMPDEST"
										},
										{
											"begin": 2369,
											"end": 2567,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2369,
											"end": 2567,
											"name": "MLOAD"
										},
										{
											"begin": 2369,
											"end": 2567,
											"name": "DUP1"
										},
										{
											"begin": 2369,
											"end": 2567,
											"name": "DUP3"
										},
										{
											"begin": 2369,
											"end": 2567,
											"name": "DUP2"
										},
										{
											"begin": 2369,
											"end": 2567,
											"name": "MSTORE"
										},
										{
											"begin": 2369,
											"end": 2567,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2369,
											"end": 2567,
											"name": "ADD"
										},
										{
											"begin": 2369,
											"end": 2567,
											"name": "SWAP2"
										},
										{
											"begin": 2369,
											"end": 2567,
											"name": "POP"
										},
										{
											"begin": 2369,
											"end": 2567,
											"name": "POP"
										},
										{
											"begin": 2369,
											"end": 2567,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2369,
											"end": 2567,
											"name": "MLOAD"
										},
										{
											"begin": 2369,
											"end": 2567,
											"name": "DUP1"
										},
										{
											"begin": 2369,
											"end": 2567,
											"name": "SWAP2"
										},
										{
											"begin": 2369,
											"end": 2567,
											"name": "SUB"
										},
										{
											"begin": 2369,
											"end": 2567,
											"name": "SWAP1"
										},
										{
											"begin": 2369,
											"end": 2567,
											"name": "RETURN"
										},
										{
											"begin": 1088,
											"end": 1130,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 1088,
											"end": 1130,
											"name": "JUMPDEST"
										},
										{
											"begin": 1088,
											"end": 1130,
											"name": "PUSH [tag]",
											"value": "44"
										},
										{
											"begin": 1088,
											"end": 1130,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1088,
											"end": 1130,
											"name": "DUP1"
										},
										{
											"begin": 1088,
											"end": 1130,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 1088,
											"end": 1130,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "45"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "45"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 1088,
											"end": 1130,
											"name": "DUP2"
										},
										{
											"begin": 1088,
											"end": 1130,
											"name": "ADD"
										},
										{
											"begin": 1088,
											"end": 1130,
											"name": "SWAP1"
										},
										{
											"begin": 1088,
											"end": 1130,
											"name": "DUP1"
										},
										{
											"begin": 1088,
											"end": 1130,
											"name": "DUP1"
										},
										{
											"begin": 1088,
											"end": 1130,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1088,
											"end": 1130,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1088,
											"end": 1130,
											"name": "AND"
										},
										{
											"begin": 1088,
											"end": 1130,
											"name": "SWAP1"
										},
										{
											"begin": 1088,
											"end": 1130,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1088,
											"end": 1130,
											"name": "ADD"
										},
										{
											"begin": 1088,
											"end": 1130,
											"name": "SWAP1"
										},
										{
											"begin": 1088,
											"end": 1130,
											"name": "SWAP3"
										},
										{
											"begin": 1088,
											"end": 1130,
											"name": "SWAP2"
										},
										{
											"begin": 1088,
											"end": 1130,
											"name": "SWAP1"
										},
										{
											"begin": 1088,
											"end": 1130,
											"name": "POP"
										},
										{
											"begin": 1088,
											"end": 1130,
											"name": "POP"
										},
										{
											"begin": 1088,
											"end": 1130,
											"name": "POP"
										},
										{
											"begin": 1088,
											"end": 1130,
											"name": "PUSH [tag]",
											"value": "46"
										},
										{
											"begin": 1088,
											"end": 1130,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1088,
											"end": 1130,
											"name": "tag",
											"value": "44"
										},
										{
											"begin": 1088,
											"end": 1130,
											"name": "JUMPDEST"
										},
										{
											"begin": 1088,
											"end": 1130,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1088,
											"end": 1130,
											"name": "MLOAD"
										},
										{
											"begin": 1088,
											"end": 1130,
											"name": "DUP1"
										},
										{
											"begin": 1088,
											"end": 1130,
											"name": "DUP3"
										},
										{
											"begin": 1088,
											"end": 1130,
											"name": "DUP2"
										},
										{
											"begin": 1088,
											"end": 1130,
											"name": "MSTORE"
										},
										{
											"begin": 1088,
											"end": 1130,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1088,
											"end": 1130,
											"name": "ADD"
										},
										{
											"begin": 1088,
											"end": 1130,
											"name": "SWAP2"
										},
										{
											"begin": 1088,
											"end": 1130,
											"name": "POP"
										},
										{
											"begin": 1088,
											"end": 1130,
											"name": "POP"
										},
										{
											"begin": 1088,
											"end": 1130,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1088,
											"end": 1130,
											"name": "MLOAD"
										},
										{
											"begin": 1088,
											"end": 1130,
											"name": "DUP1"
										},
										{
											"begin": 1088,
											"end": 1130,
											"name": "SWAP2"
										},
										{
											"begin": 1088,
											"end": 1130,
											"name": "SUB"
										},
										{
											"begin": 1088,
											"end": 1130,
											"name": "SWAP1"
										},
										{
											"begin": 1088,
											"end": 1130,
											"name": "RETURN"
										},
										{
											"begin": 371,
											"end": 512,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 371,
											"end": 512,
											"name": "JUMPDEST"
										},
										{
											"begin": 371,
											"end": 512,
											"name": "PUSH [tag]",
											"value": "47"
										},
										{
											"begin": 371,
											"end": 512,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 371,
											"end": 512,
											"name": "DUP1"
										},
										{
											"begin": 371,
											"end": 512,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 371,
											"end": 512,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "48"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "48"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 371,
											"end": 512,
											"name": "DUP2"
										},
										{
											"begin": 371,
											"end": 512,
											"name": "ADD"
										},
										{
											"begin": 371,
											"end": 512,
											"name": "SWAP1"
										},
										{
											"begin": 371,
											"end": 512,
											"name": "DUP1"
										},
										{
											"begin": 371,
											"end": 512,
											"name": "DUP1"
										},
										{
											"begin": 371,
											"end": 512,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 371,
											"end": 512,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 371,
											"end": 512,
											"name": "AND"
										},
										{
											"begin": 371,
											"end": 512,
											"name": "SWAP1"
										},
										{
											"begin": 371,
											"end": 512,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 371,
											"end": 512,
											"name": "ADD"
										},
										{
											"begin": 371,
											"end": 512,
											"name": "SWAP1"
										},
										{
											"begin": 371,
											"end": 512,
											"name": "SWAP3"
										},
										{
											"begin": 371,
											"end": 512,
											"name": "SWAP2"
										},
										{
											"begin": 371,
											"end": 512,
											"name": "SWAP1"
										},
										{
											"begin": 371,
											"end": 512,
											"name": "POP"
										},
										{
											"begin": 371,
											"end": 512,
											"name": "POP"
										},
										{
											"begin": 371,
											"end": 512,
											"name": "POP"
										},
										{
											"begin": 371,
											"end": 512,
											"name": "PUSH [tag]",
											"value": "49"
										},
										{
											"begin": 371,
											"end": 512,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 371,
											"end": 512,
											"name": "tag",
											"value": "47"
										},
										{
											"begin": 371,
											"end": 512,
											"name": "JUMPDEST"
										},
										{
											"begin": 371,
											"end": 512,
											"name": "STOP"
										},
										{
											"begin": 615,
											"end": 1103,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 615,
											"end": 1103,
											"name": "JUMPDEST"
										},
										{
											"begin": 615,
											"end": 1103,
											"name": "PUSH [tag]",
											"value": "50"
										},
										{
											"begin": 615,
											"end": 1103,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 615,
											"end": 1103,
											"name": "DUP1"
										},
										{
											"begin": 615,
											"end": 1103,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 615,
											"end": 1103,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "51"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "51"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 615,
											"end": 1103,
											"name": "DUP2"
										},
										{
											"begin": 615,
											"end": 1103,
											"name": "ADD"
										},
										{
											"begin": 615,
											"end": 1103,
											"name": "SWAP1"
										},
										{
											"begin": 615,
											"end": 1103,
											"name": "DUP1"
										},
										{
											"begin": 615,
											"end": 1103,
											"name": "DUP1"
										},
										{
											"begin": 615,
											"end": 1103,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 615,
											"end": 1103,
											"name": "ISZERO"
										},
										{
											"begin": 615,
											"end": 1103,
											"name": "ISZERO"
										},
										{
											"begin": 615,
											"end": 1103,
											"name": "SWAP1"
										},
										{
											"begin": 615,
											"end": 1103,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 615,
											"end": 1103,
											"name": "ADD"
										},
										{
											"begin": 615,
											"end": 1103,
											"name": "SWAP1"
										},
										{
											"begin": 615,
											"end": 1103,
											"name": "SWAP3"
										},
										{
											"begin": 615,
											"end": 1103,
											"name": "SWAP2"
										},
										{
											"begin": 615,
											"end": 1103,
											"name": "SWAP1"
										},
										{
											"begin": 615,
											"end": 1103,
											"name": "POP"
										},
										{
											"begin": 615,
											"end": 1103,
											"name": "POP"
										},
										{
											"begin": 615,
											"end": 1103,
											"name": "POP"
										},
										{
											"begin": 615,
											"end": 1103,
											"name": "PUSH [tag]",
											"value": "52"
										},
										{
											"begin": 615,
											"end": 1103,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 615,
											"end": 1103,
											"name": "tag",
											"value": "50"
										},
										{
											"begin": 615,
											"end": 1103,
											"name": "JUMPDEST"
										},
										{
											"begin": 615,
											"end": 1103,
											"name": "STOP"
										},
										{
											"begin": 1647,
											"end": 1740,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 1647,
											"end": 1740,
											"name": "JUMPDEST"
										},
										{
											"begin": 1647,
											"end": 1740,
											"name": "PUSH [tag]",
											"value": "53"
										},
										{
											"begin": 1647,
											"end": 1740,
											"name": "PUSH [tag]",
											"value": "54"
										},
										{
											"begin": 1647,
											"end": 1740,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1647,
											"end": 1740,
											"name": "tag",
											"value": "53"
										},
										{
											"begin": 1647,
											"end": 1740,
											"name": "JUMPDEST"
										},
										{
											"begin": 1647,
											"end": 1740,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1647,
											"end": 1740,
											"name": "MLOAD"
										},
										{
											"begin": 1647,
											"end": 1740,
											"name": "DUP1"
										},
										{
											"begin": 1647,
											"end": 1740,
											"name": "DUP3"
										},
										{
											"begin": 1647,
											"end": 1740,
											"name": "DUP2"
										},
										{
											"begin": 1647,
											"end": 1740,
											"name": "MSTORE"
										},
										{
											"begin": 1647,
											"end": 1740,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1647,
											"end": 1740,
											"name": "ADD"
										},
										{
											"begin": 1647,
											"end": 1740,
											"name": "SWAP2"
										},
										{
											"begin": 1647,
											"end": 1740,
											"name": "POP"
										},
										{
											"begin": 1647,
											"end": 1740,
											"name": "POP"
										},
										{
											"begin": 1647,
											"end": 1740,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1647,
											"end": 1740,
											"name": "MLOAD"
										},
										{
											"begin": 1647,
											"end": 1740,
											"name": "DUP1"
										},
										{
											"begin": 1647,
											"end": 1740,
											"name": "SWAP2"
										},
										{
											"begin": 1647,
											"end": 1740,
											"name": "SUB"
										},
										{
											"begin": 1647,
											"end": 1740,
											"name": "SWAP1"
										},
										{
											"begin": 1647,
											"end": 1740,
											"name": "RETURN"
										},
										{
											"begin": 475,
											"end": 617,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 475,
											"end": 617,
											"name": "JUMPDEST"
										},
										{
											"begin": 475,
											"end": 617,
											"name": "PUSH [tag]",
											"value": "55"
										},
										{
											"begin": 475,
											"end": 617,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 475,
											"end": 617,
											"name": "DUP1"
										},
										{
											"begin": 475,
											"end": 617,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 475,
											"end": 617,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "56"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "56"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 475,
											"end": 617,
											"name": "DUP2"
										},
										{
											"begin": 475,
											"end": 617,
											"name": "ADD"
										},
										{
											"begin": 475,
											"end": 617,
											"name": "SWAP1"
										},
										{
											"begin": 475,
											"end": 617,
											"name": "DUP1"
										},
										{
											"begin": 475,
											"end": 617,
											"name": "DUP1"
										},
										{
											"begin": 475,
											"end": 617,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 475,
											"end": 617,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 475,
											"end": 617,
											"name": "AND"
										},
										{
											"begin": 475,
											"end": 617,
											"name": "SWAP1"
										},
										{
											"begin": 475,
											"end": 617,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 475,
											"end": 617,
											"name": "ADD"
										},
										{
											"begin": 475,
											"end": 617,
											"name": "SWAP1"
										},
										{
											"begin": 475,
											"end": 617,
											"name": "SWAP3"
										},
										{
											"begin": 475,
											"end": 617,
											"name": "SWAP2"
										},
										{
											"begin": 475,
											"end": 617,
											"name": "SWAP1"
										},
										{
											"begin": 475,
											"end": 617,
											"name": "POP"
										},
										{
											"begin": 475,
											"end": 617,
											"name": "POP"
										},
										{
											"begin": 475,
											"end": 617,
											"name": "POP"
										},
										{
											"begin": 475,
											"end": 617,
											"name": "PUSH [tag]",
											"value": "57"
										},
										{
											"begin": 475,
											"end": 617,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 475,
											"end": 617,
											"name": "tag",
											"value": "55"
										},
										{
											"begin": 475,
											"end": 617,
											"name": "JUMPDEST"
										},
										{
											"begin": 475,
											"end": 617,
											"name": "STOP"
										},
										{
											"begin": 2575,
											"end": 2696,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 2575,
											"end": 2696,
											"name": "JUMPDEST"
										},
										{
											"begin": 2575,
											"end": 2696,
											"name": "PUSH [tag]",
											"value": "58"
										},
										{
											"begin": 2575,
											"end": 2696,
											"name": "PUSH [tag]",
											"value": "59"
										},
										{
											"begin": 2575,
											"end": 2696,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2575,
											"end": 2696,
											"name": "tag",
											"value": "58"
										},
										{
											"begin": 2575,
											"end": 2696,
											"name": "JUMPDEST"
										},
										{
											"begin": 2575,
											"end": 2696,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2575,
											"end": 2696,
											"name": "MLOAD"
										},
										{
											"begin": 2575,
											"end": 2696,
											"name": "DUP1"
										},
										{
											"begin": 2575,
											"end": 2696,
											"name": "DUP3"
										},
										{
											"begin": 2575,
											"end": 2696,
											"name": "DUP2"
										},
										{
											"begin": 2575,
											"end": 2696,
											"name": "MSTORE"
										},
										{
											"begin": 2575,
											"end": 2696,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2575,
											"end": 2696,
											"name": "ADD"
										},
										{
											"begin": 2575,
											"end": 2696,
											"name": "SWAP2"
										},
										{
											"begin": 2575,
											"end": 2696,
											"name": "POP"
										},
										{
											"begin": 2575,
											"end": 2696,
											"name": "POP"
										},
										{
											"begin": 2575,
											"end": 2696,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2575,
											"end": 2696,
											"name": "MLOAD"
										},
										{
											"begin": 2575,
											"end": 2696,
											"name": "DUP1"
										},
										{
											"begin": 2575,
											"end": 2696,
											"name": "SWAP2"
										},
										{
											"begin": 2575,
											"end": 2696,
											"name": "SUB"
										},
										{
											"begin": 2575,
											"end": 2696,
											"name": "SWAP1"
										},
										{
											"begin": 2575,
											"end": 2696,
											"name": "RETURN"
										},
										{
											"begin": 3145,
											"end": 3502,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 3145,
											"end": 3502,
											"name": "JUMPDEST"
										},
										{
											"begin": 3145,
											"end": 3502,
											"name": "PUSH [tag]",
											"value": "60"
										},
										{
											"begin": 3145,
											"end": 3502,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3145,
											"end": 3502,
											"name": "DUP1"
										},
										{
											"begin": 3145,
											"end": 3502,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 3145,
											"end": 3502,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "61"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "61"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 3145,
											"end": 3502,
											"name": "DUP2"
										},
										{
											"begin": 3145,
											"end": 3502,
											"name": "ADD"
										},
										{
											"begin": 3145,
											"end": 3502,
											"name": "SWAP1"
										},
										{
											"begin": 3145,
											"end": 3502,
											"name": "DUP1"
										},
										{
											"begin": 3145,
											"end": 3502,
											"name": "DUP1"
										},
										{
											"begin": 3145,
											"end": 3502,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 3145,
											"end": 3502,
											"name": "SWAP1"
										},
										{
											"begin": 3145,
											"end": 3502,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3145,
											"end": 3502,
											"name": "ADD"
										},
										{
											"begin": 3145,
											"end": 3502,
											"name": "SWAP1"
										},
										{
											"begin": 3145,
											"end": 3502,
											"name": "SWAP3"
										},
										{
											"begin": 3145,
											"end": 3502,
											"name": "SWAP2"
										},
										{
											"begin": 3145,
											"end": 3502,
											"name": "SWAP1"
										},
										{
											"begin": 3145,
											"end": 3502,
											"name": "POP"
										},
										{
											"begin": 3145,
											"end": 3502,
											"name": "POP"
										},
										{
											"begin": 3145,
											"end": 3502,
											"name": "POP"
										},
										{
											"begin": 3145,
											"end": 3502,
											"name": "PUSH [tag]",
											"value": "62"
										},
										{
											"begin": 3145,
											"end": 3502,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3145,
											"end": 3502,
											"name": "tag",
											"value": "60"
										},
										{
											"begin": 3145,
											"end": 3502,
											"name": "JUMPDEST"
										},
										{
											"begin": 3145,
											"end": 3502,
											"name": "STOP"
										},
										{
											"begin": 898,
											"end": 937,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 898,
											"end": 937,
											"name": "JUMPDEST"
										},
										{
											"begin": 898,
											"end": 937,
											"name": "PUSH [tag]",
											"value": "63"
										},
										{
											"begin": 898,
											"end": 937,
											"name": "PUSH [tag]",
											"value": "64"
										},
										{
											"begin": 898,
											"end": 937,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 898,
											"end": 937,
											"name": "tag",
											"value": "63"
										},
										{
											"begin": 898,
											"end": 937,
											"name": "JUMPDEST"
										},
										{
											"begin": 898,
											"end": 937,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 898,
											"end": 937,
											"name": "MLOAD"
										},
										{
											"begin": 898,
											"end": 937,
											"name": "DUP1"
										},
										{
											"begin": 898,
											"end": 937,
											"name": "DUP3"
										},
										{
											"begin": 898,
											"end": 937,
											"name": "DUP2"
										},
										{
											"begin": 898,
											"end": 937,
											"name": "MSTORE"
										},
										{
											"begin": 898,
											"end": 937,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 898,
											"end": 937,
											"name": "ADD"
										},
										{
											"begin": 898,
											"end": 937,
											"name": "SWAP2"
										},
										{
											"begin": 898,
											"end": 937,
											"name": "POP"
										},
										{
											"begin": 898,
											"end": 937,
											"name": "POP"
										},
										{
											"begin": 898,
											"end": 937,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 898,
											"end": 937,
											"name": "MLOAD"
										},
										{
											"begin": 898,
											"end": 937,
											"name": "DUP1"
										},
										{
											"begin": 898,
											"end": 937,
											"name": "SWAP2"
										},
										{
											"begin": 898,
											"end": 937,
											"name": "SUB"
										},
										{
											"begin": 898,
											"end": 937,
											"name": "SWAP1"
										},
										{
											"begin": 898,
											"end": 937,
											"name": "RETURN"
										},
										{
											"begin": 3986,
											"end": 5069,
											"name": "tag",
											"value": "12"
										},
										{
											"begin": 3986,
											"end": 5069,
											"name": "JUMPDEST"
										},
										{
											"begin": 3986,
											"end": 5069,
											"name": "PUSH [tag]",
											"value": "65"
										},
										{
											"begin": 3986,
											"end": 5069,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3986,
											"end": 5069,
											"name": "DUP1"
										},
										{
											"begin": 3986,
											"end": 5069,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 3986,
											"end": 5069,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "66"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "66"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 3986,
											"end": 5069,
											"name": "DUP2"
										},
										{
											"begin": 3986,
											"end": 5069,
											"name": "ADD"
										},
										{
											"begin": 3986,
											"end": 5069,
											"name": "SWAP1"
										},
										{
											"begin": 3986,
											"end": 5069,
											"name": "DUP1"
										},
										{
											"begin": 3986,
											"end": 5069,
											"name": "DUP1"
										},
										{
											"begin": 3986,
											"end": 5069,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 3986,
											"end": 5069,
											"name": "SWAP1"
										},
										{
											"begin": 3986,
											"end": 5069,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3986,
											"end": 5069,
											"name": "ADD"
										},
										{
											"begin": 3986,
											"end": 5069,
											"name": "SWAP1"
										},
										{
											"begin": 3986,
											"end": 5069,
											"name": "SWAP3"
										},
										{
											"begin": 3986,
											"end": 5069,
											"name": "SWAP2"
										},
										{
											"begin": 3986,
											"end": 5069,
											"name": "SWAP1"
										},
										{
											"begin": 3986,
											"end": 5069,
											"name": "POP"
										},
										{
											"begin": 3986,
											"end": 5069,
											"name": "POP"
										},
										{
											"begin": 3986,
											"end": 5069,
											"name": "POP"
										},
										{
											"begin": 3986,
											"end": 5069,
											"name": "PUSH [tag]",
											"value": "67"
										},
										{
											"begin": 3986,
											"end": 5069,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3986,
											"end": 5069,
											"name": "tag",
											"value": "65"
										},
										{
											"begin": 3986,
											"end": 5069,
											"name": "JUMPDEST"
										},
										{
											"begin": 3986,
											"end": 5069,
											"name": "STOP"
										},
										{
											"begin": 3510,
											"end": 3817,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 3510,
											"end": 3817,
											"name": "JUMPDEST"
										},
										{
											"begin": 3510,
											"end": 3817,
											"name": "PUSH [tag]",
											"value": "68"
										},
										{
											"begin": 3510,
											"end": 3817,
											"name": "PUSH [tag]",
											"value": "69"
										},
										{
											"begin": 3510,
											"end": 3817,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3510,
											"end": 3817,
											"name": "tag",
											"value": "68"
										},
										{
											"begin": 3510,
											"end": 3817,
											"name": "JUMPDEST"
										},
										{
											"begin": 3510,
											"end": 3817,
											"name": "STOP"
										},
										{
											"begin": 209,
											"end": 243,
											"name": "tag",
											"value": "14"
										},
										{
											"begin": 209,
											"end": 243,
											"name": "JUMPDEST"
										},
										{
											"begin": 209,
											"end": 243,
											"name": "PUSH [tag]",
											"value": "70"
										},
										{
											"begin": 209,
											"end": 243,
											"name": "PUSH [tag]",
											"value": "71"
										},
										{
											"begin": 209,
											"end": 243,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 209,
											"end": 243,
											"name": "tag",
											"value": "70"
										},
										{
											"begin": 209,
											"end": 243,
											"name": "JUMPDEST"
										},
										{
											"begin": 209,
											"end": 243,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 209,
											"end": 243,
											"name": "MLOAD"
										},
										{
											"begin": 209,
											"end": 243,
											"name": "DUP1"
										},
										{
											"begin": 209,
											"end": 243,
											"name": "DUP3"
										},
										{
											"begin": 209,
											"end": 243,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 209,
											"end": 243,
											"name": "AND"
										},
										{
											"begin": 209,
											"end": 243,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 209,
											"end": 243,
											"name": "AND"
										},
										{
											"begin": 209,
											"end": 243,
											"name": "DUP2"
										},
										{
											"begin": 209,
											"end": 243,
											"name": "MSTORE"
										},
										{
											"begin": 209,
											"end": 243,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 209,
											"end": 243,
											"name": "ADD"
										},
										{
											"begin": 209,
											"end": 243,
											"name": "SWAP2"
										},
										{
											"begin": 209,
											"end": 243,
											"name": "POP"
										},
										{
											"begin": 209,
											"end": 243,
											"name": "POP"
										},
										{
											"begin": 209,
											"end": 243,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 209,
											"end": 243,
											"name": "MLOAD"
										},
										{
											"begin": 209,
											"end": 243,
											"name": "DUP1"
										},
										{
											"begin": 209,
											"end": 243,
											"name": "SWAP2"
										},
										{
											"begin": 209,
											"end": 243,
											"name": "SUB"
										},
										{
											"begin": 209,
											"end": 243,
											"name": "SWAP1"
										},
										{
											"begin": 209,
											"end": 243,
											"name": "RETURN"
										},
										{
											"begin": 140,
											"end": 169,
											"name": "tag",
											"value": "15"
										},
										{
											"begin": 140,
											"end": 169,
											"name": "JUMPDEST"
										},
										{
											"begin": 140,
											"end": 169,
											"name": "PUSH [tag]",
											"value": "72"
										},
										{
											"begin": 140,
											"end": 169,
											"name": "PUSH [tag]",
											"value": "73"
										},
										{
											"begin": 140,
											"end": 169,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 140,
											"end": 169,
											"name": "tag",
											"value": "72"
										},
										{
											"begin": 140,
											"end": 169,
											"name": "JUMPDEST"
										},
										{
											"begin": 140,
											"end": 169,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 140,
											"end": 169,
											"name": "MLOAD"
										},
										{
											"begin": 140,
											"end": 169,
											"name": "DUP1"
										},
										{
											"begin": 140,
											"end": 169,
											"name": "DUP3"
										},
										{
											"begin": 140,
											"end": 169,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 140,
											"end": 169,
											"name": "AND"
										},
										{
											"begin": 140,
											"end": 169,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 140,
											"end": 169,
											"name": "AND"
										},
										{
											"begin": 140,
											"end": 169,
											"name": "DUP2"
										},
										{
											"begin": 140,
											"end": 169,
											"name": "MSTORE"
										},
										{
											"begin": 140,
											"end": 169,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 140,
											"end": 169,
											"name": "ADD"
										},
										{
											"begin": 140,
											"end": 169,
											"name": "SWAP2"
										},
										{
											"begin": 140,
											"end": 169,
											"name": "POP"
										},
										{
											"begin": 140,
											"end": 169,
											"name": "POP"
										},
										{
											"begin": 140,
											"end": 169,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 140,
											"end": 169,
											"name": "MLOAD"
										},
										{
											"begin": 140,
											"end": 169,
											"name": "DUP1"
										},
										{
											"begin": 140,
											"end": 169,
											"name": "SWAP2"
										},
										{
											"begin": 140,
											"end": 169,
											"name": "SUB"
										},
										{
											"begin": 140,
											"end": 169,
											"name": "SWAP1"
										},
										{
											"begin": 140,
											"end": 169,
											"name": "RETURN"
										},
										{
											"begin": 201,
											"end": 219,
											"name": "tag",
											"value": "16"
										},
										{
											"begin": 201,
											"end": 219,
											"name": "JUMPDEST"
										},
										{
											"begin": 201,
											"end": 219,
											"name": "PUSH [tag]",
											"value": "74"
										},
										{
											"begin": 201,
											"end": 219,
											"name": "PUSH [tag]",
											"value": "75"
										},
										{
											"begin": 201,
											"end": 219,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 201,
											"end": 219,
											"name": "tag",
											"value": "74"
										},
										{
											"begin": 201,
											"end": 219,
											"name": "JUMPDEST"
										},
										{
											"begin": 201,
											"end": 219,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 201,
											"end": 219,
											"name": "MLOAD"
										},
										{
											"begin": 201,
											"end": 219,
											"name": "DUP1"
										},
										{
											"begin": 201,
											"end": 219,
											"name": "DUP3"
										},
										{
											"begin": 201,
											"end": 219,
											"name": "ISZERO"
										},
										{
											"begin": 201,
											"end": 219,
											"name": "ISZERO"
										},
										{
											"begin": 201,
											"end": 219,
											"name": "ISZERO"
										},
										{
											"begin": 201,
											"end": 219,
											"name": "ISZERO"
										},
										{
											"begin": 201,
											"end": 219,
											"name": "DUP2"
										},
										{
											"begin": 201,
											"end": 219,
											"name": "MSTORE"
										},
										{
											"begin": 201,
											"end": 219,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 201,
											"end": 219,
											"name": "ADD"
										},
										{
											"begin": 201,
											"end": 219,
											"name": "SWAP2"
										},
										{
											"begin": 201,
											"end": 219,
											"name": "POP"
										},
										{
											"begin": 201,
											"end": 219,
											"name": "POP"
										},
										{
											"begin": 201,
											"end": 219,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 201,
											"end": 219,
											"name": "MLOAD"
										},
										{
											"begin": 201,
											"end": 219,
											"name": "DUP1"
										},
										{
											"begin": 201,
											"end": 219,
											"name": "SWAP2"
										},
										{
											"begin": 201,
											"end": 219,
											"name": "SUB"
										},
										{
											"begin": 201,
											"end": 219,
											"name": "SWAP1"
										},
										{
											"begin": 201,
											"end": 219,
											"name": "RETURN"
										},
										{
											"begin": 1748,
											"end": 1860,
											"name": "tag",
											"value": "17"
										},
										{
											"begin": 1748,
											"end": 1860,
											"name": "JUMPDEST"
										},
										{
											"begin": 1748,
											"end": 1860,
											"name": "PUSH [tag]",
											"value": "76"
										},
										{
											"begin": 1748,
											"end": 1860,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1748,
											"end": 1860,
											"name": "DUP1"
										},
										{
											"begin": 1748,
											"end": 1860,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 1748,
											"end": 1860,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "77"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "77"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 1748,
											"end": 1860,
											"name": "DUP2"
										},
										{
											"begin": 1748,
											"end": 1860,
											"name": "ADD"
										},
										{
											"begin": 1748,
											"end": 1860,
											"name": "SWAP1"
										},
										{
											"begin": 1748,
											"end": 1860,
											"name": "DUP1"
										},
										{
											"begin": 1748,
											"end": 1860,
											"name": "DUP1"
										},
										{
											"begin": 1748,
											"end": 1860,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1748,
											"end": 1860,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1748,
											"end": 1860,
											"name": "AND"
										},
										{
											"begin": 1748,
											"end": 1860,
											"name": "SWAP1"
										},
										{
											"begin": 1748,
											"end": 1860,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1748,
											"end": 1860,
											"name": "ADD"
										},
										{
											"begin": 1748,
											"end": 1860,
											"name": "SWAP1"
										},
										{
											"begin": 1748,
											"end": 1860,
											"name": "SWAP3"
										},
										{
											"begin": 1748,
											"end": 1860,
											"name": "SWAP2"
										},
										{
											"begin": 1748,
											"end": 1860,
											"name": "SWAP1"
										},
										{
											"begin": 1748,
											"end": 1860,
											"name": "POP"
										},
										{
											"begin": 1748,
											"end": 1860,
											"name": "POP"
										},
										{
											"begin": 1748,
											"end": 1860,
											"name": "POP"
										},
										{
											"begin": 1748,
											"end": 1860,
											"name": "PUSH [tag]",
											"value": "78"
										},
										{
											"begin": 1748,
											"end": 1860,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1748,
											"end": 1860,
											"name": "tag",
											"value": "76"
										},
										{
											"begin": 1748,
											"end": 1860,
											"name": "JUMPDEST"
										},
										{
											"begin": 1748,
											"end": 1860,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1748,
											"end": 1860,
											"name": "MLOAD"
										},
										{
											"begin": 1748,
											"end": 1860,
											"name": "DUP1"
										},
										{
											"begin": 1748,
											"end": 1860,
											"name": "DUP3"
										},
										{
											"begin": 1748,
											"end": 1860,
											"name": "DUP2"
										},
										{
											"begin": 1748,
											"end": 1860,
											"name": "MSTORE"
										},
										{
											"begin": 1748,
											"end": 1860,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1748,
											"end": 1860,
											"name": "ADD"
										},
										{
											"begin": 1748,
											"end": 1860,
											"name": "SWAP2"
										},
										{
											"begin": 1748,
											"end": 1860,
											"name": "POP"
										},
										{
											"begin": 1748,
											"end": 1860,
											"name": "POP"
										},
										{
											"begin": 1748,
											"end": 1860,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1748,
											"end": 1860,
											"name": "MLOAD"
										},
										{
											"begin": 1748,
											"end": 1860,
											"name": "DUP1"
										},
										{
											"begin": 1748,
											"end": 1860,
											"name": "SWAP2"
										},
										{
											"begin": 1748,
											"end": 1860,
											"name": "SUB"
										},
										{
											"begin": 1748,
											"end": 1860,
											"name": "SWAP1"
										},
										{
											"begin": 1748,
											"end": 1860,
											"name": "RETURN"
										},
										{
											"begin": 791,
											"end": 817,
											"name": "tag",
											"value": "18"
										},
										{
											"begin": 791,
											"end": 817,
											"name": "JUMPDEST"
										},
										{
											"begin": 791,
											"end": 817,
											"name": "PUSH [tag]",
											"value": "79"
										},
										{
											"begin": 791,
											"end": 817,
											"name": "PUSH [tag]",
											"value": "80"
										},
										{
											"begin": 791,
											"end": 817,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 791,
											"end": 817,
											"name": "tag",
											"value": "79"
										},
										{
											"begin": 791,
											"end": 817,
											"name": "JUMPDEST"
										},
										{
											"begin": 791,
											"end": 817,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 791,
											"end": 817,
											"name": "MLOAD"
										},
										{
											"begin": 791,
											"end": 817,
											"name": "DUP1"
										},
										{
											"begin": 791,
											"end": 817,
											"name": "DUP3"
										},
										{
											"begin": 791,
											"end": 817,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 791,
											"end": 817,
											"name": "AND"
										},
										{
											"begin": 791,
											"end": 817,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 791,
											"end": 817,
											"name": "AND"
										},
										{
											"begin": 791,
											"end": 817,
											"name": "DUP2"
										},
										{
											"begin": 791,
											"end": 817,
											"name": "MSTORE"
										},
										{
											"begin": 791,
											"end": 817,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 791,
											"end": 817,
											"name": "ADD"
										},
										{
											"begin": 791,
											"end": 817,
											"name": "SWAP2"
										},
										{
											"begin": 791,
											"end": 817,
											"name": "POP"
										},
										{
											"begin": 791,
											"end": 817,
											"name": "POP"
										},
										{
											"begin": 791,
											"end": 817,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 791,
											"end": 817,
											"name": "MLOAD"
										},
										{
											"begin": 791,
											"end": 817,
											"name": "DUP1"
										},
										{
											"begin": 791,
											"end": 817,
											"name": "SWAP2"
										},
										{
											"begin": 791,
											"end": 817,
											"name": "SUB"
										},
										{
											"begin": 791,
											"end": 817,
											"name": "SWAP1"
										},
										{
											"begin": 791,
											"end": 817,
											"name": "RETURN"
										},
										{
											"begin": 520,
											"end": 791,
											"name": "tag",
											"value": "19"
										},
										{
											"begin": 520,
											"end": 791,
											"name": "JUMPDEST"
										},
										{
											"begin": 520,
											"end": 791,
											"name": "PUSH [tag]",
											"value": "81"
										},
										{
											"begin": 520,
											"end": 791,
											"name": "PUSH [tag]",
											"value": "82"
										},
										{
											"begin": 520,
											"end": 791,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 520,
											"end": 791,
											"name": "tag",
											"value": "81"
										},
										{
											"begin": 520,
											"end": 791,
											"name": "JUMPDEST"
										},
										{
											"begin": 520,
											"end": 791,
											"name": "STOP"
										},
										{
											"begin": 862,
											"end": 891,
											"name": "tag",
											"value": "20"
										},
										{
											"begin": 862,
											"end": 891,
											"name": "JUMPDEST"
										},
										{
											"begin": 862,
											"end": 891,
											"name": "PUSH [tag]",
											"value": "83"
										},
										{
											"begin": 862,
											"end": 891,
											"name": "PUSH [tag]",
											"value": "84"
										},
										{
											"begin": 862,
											"end": 891,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 862,
											"end": 891,
											"name": "tag",
											"value": "83"
										},
										{
											"begin": 862,
											"end": 891,
											"name": "JUMPDEST"
										},
										{
											"begin": 862,
											"end": 891,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 862,
											"end": 891,
											"name": "MLOAD"
										},
										{
											"begin": 862,
											"end": 891,
											"name": "DUP1"
										},
										{
											"begin": 862,
											"end": 891,
											"name": "DUP3"
										},
										{
											"begin": 862,
											"end": 891,
											"name": "DUP2"
										},
										{
											"begin": 862,
											"end": 891,
											"name": "MSTORE"
										},
										{
											"begin": 862,
											"end": 891,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 862,
											"end": 891,
											"name": "ADD"
										},
										{
											"begin": 862,
											"end": 891,
											"name": "SWAP2"
										},
										{
											"begin": 862,
											"end": 891,
											"name": "POP"
										},
										{
											"begin": 862,
											"end": 891,
											"name": "POP"
										},
										{
											"begin": 862,
											"end": 891,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 862,
											"end": 891,
											"name": "MLOAD"
										},
										{
											"begin": 862,
											"end": 891,
											"name": "DUP1"
										},
										{
											"begin": 862,
											"end": 891,
											"name": "SWAP2"
										},
										{
											"begin": 862,
											"end": 891,
											"name": "SUB"
										},
										{
											"begin": 862,
											"end": 891,
											"name": "SWAP1"
										},
										{
											"begin": 862,
											"end": 891,
											"name": "RETURN"
										},
										{
											"begin": 1868,
											"end": 2023,
											"name": "tag",
											"value": "21"
										},
										{
											"begin": 1868,
											"end": 2023,
											"name": "JUMPDEST"
										},
										{
											"begin": 1868,
											"end": 2023,
											"name": "PUSH [tag]",
											"value": "85"
										},
										{
											"begin": 1868,
											"end": 2023,
											"name": "PUSH [tag]",
											"value": "86"
										},
										{
											"begin": 1868,
											"end": 2023,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1868,
											"end": 2023,
											"name": "tag",
											"value": "85"
										},
										{
											"begin": 1868,
											"end": 2023,
											"name": "JUMPDEST"
										},
										{
											"begin": 1868,
											"end": 2023,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1868,
											"end": 2023,
											"name": "MLOAD"
										},
										{
											"begin": 1868,
											"end": 2023,
											"name": "DUP1"
										},
										{
											"begin": 1868,
											"end": 2023,
											"name": "DUP3"
										},
										{
											"begin": 1868,
											"end": 2023,
											"name": "DUP2"
										},
										{
											"begin": 1868,
											"end": 2023,
											"name": "MSTORE"
										},
										{
											"begin": 1868,
											"end": 2023,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1868,
											"end": 2023,
											"name": "ADD"
										},
										{
											"begin": 1868,
											"end": 2023,
											"name": "SWAP2"
										},
										{
											"begin": 1868,
											"end": 2023,
											"name": "POP"
										},
										{
											"begin": 1868,
											"end": 2023,
											"name": "POP"
										},
										{
											"begin": 1868,
											"end": 2023,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1868,
											"end": 2023,
											"name": "MLOAD"
										},
										{
											"begin": 1868,
											"end": 2023,
											"name": "DUP1"
										},
										{
											"begin": 1868,
											"end": 2023,
											"name": "SWAP2"
										},
										{
											"begin": 1868,
											"end": 2023,
											"name": "SUB"
										},
										{
											"begin": 1868,
											"end": 2023,
											"name": "SWAP1"
										},
										{
											"begin": 1868,
											"end": 2023,
											"name": "RETURN"
										},
										{
											"begin": 5184,
											"end": 5486,
											"name": "tag",
											"value": "22"
										},
										{
											"begin": 5184,
											"end": 5486,
											"name": "JUMPDEST"
										},
										{
											"begin": 5184,
											"end": 5486,
											"name": "PUSH [tag]",
											"value": "87"
										},
										{
											"begin": 5184,
											"end": 5486,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 5184,
											"end": 5486,
											"name": "DUP1"
										},
										{
											"begin": 5184,
											"end": 5486,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 5184,
											"end": 5486,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "88"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "88"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 5184,
											"end": 5486,
											"name": "DUP2"
										},
										{
											"begin": 5184,
											"end": 5486,
											"name": "ADD"
										},
										{
											"begin": 5184,
											"end": 5486,
											"name": "SWAP1"
										},
										{
											"begin": 5184,
											"end": 5486,
											"name": "DUP1"
										},
										{
											"begin": 5184,
											"end": 5486,
											"name": "DUP1"
										},
										{
											"begin": 5184,
											"end": 5486,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 5184,
											"end": 5486,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5184,
											"end": 5486,
											"name": "AND"
										},
										{
											"begin": 5184,
											"end": 5486,
											"name": "SWAP1"
										},
										{
											"begin": 5184,
											"end": 5486,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5184,
											"end": 5486,
											"name": "ADD"
										},
										{
											"begin": 5184,
											"end": 5486,
											"name": "SWAP1"
										},
										{
											"begin": 5184,
											"end": 5486,
											"name": "SWAP3"
										},
										{
											"begin": 5184,
											"end": 5486,
											"name": "SWAP2"
										},
										{
											"begin": 5184,
											"end": 5486,
											"name": "SWAP1"
										},
										{
											"begin": 5184,
											"end": 5486,
											"name": "DUP1"
										},
										{
											"begin": 5184,
											"end": 5486,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 5184,
											"end": 5486,
											"name": "SWAP1"
										},
										{
											"begin": 5184,
											"end": 5486,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5184,
											"end": 5486,
											"name": "ADD"
										},
										{
											"begin": 5184,
											"end": 5486,
											"name": "SWAP1"
										},
										{
											"begin": 5184,
											"end": 5486,
											"name": "SWAP3"
										},
										{
											"begin": 5184,
											"end": 5486,
											"name": "SWAP2"
										},
										{
											"begin": 5184,
											"end": 5486,
											"name": "SWAP1"
										},
										{
											"begin": 5184,
											"end": 5486,
											"name": "POP"
										},
										{
											"begin": 5184,
											"end": 5486,
											"name": "POP"
										},
										{
											"begin": 5184,
											"end": 5486,
											"name": "POP"
										},
										{
											"begin": 5184,
											"end": 5486,
											"name": "PUSH [tag]",
											"value": "89"
										},
										{
											"begin": 5184,
											"end": 5486,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5184,
											"end": 5486,
											"name": "tag",
											"value": "87"
										},
										{
											"begin": 5184,
											"end": 5486,
											"name": "JUMPDEST"
										},
										{
											"begin": 5184,
											"end": 5486,
											"name": "STOP"
										},
										{
											"begin": 1024,
											"end": 1081,
											"name": "tag",
											"value": "23"
										},
										{
											"begin": 1024,
											"end": 1081,
											"name": "JUMPDEST"
										},
										{
											"begin": 1024,
											"end": 1081,
											"name": "PUSH [tag]",
											"value": "90"
										},
										{
											"begin": 1024,
											"end": 1081,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1024,
											"end": 1081,
											"name": "DUP1"
										},
										{
											"begin": 1024,
											"end": 1081,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 1024,
											"end": 1081,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "91"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "91"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 1024,
											"end": 1081,
											"name": "DUP2"
										},
										{
											"begin": 1024,
											"end": 1081,
											"name": "ADD"
										},
										{
											"begin": 1024,
											"end": 1081,
											"name": "SWAP1"
										},
										{
											"begin": 1024,
											"end": 1081,
											"name": "DUP1"
										},
										{
											"begin": 1024,
											"end": 1081,
											"name": "DUP1"
										},
										{
											"begin": 1024,
											"end": 1081,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1024,
											"end": 1081,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1024,
											"end": 1081,
											"name": "AND"
										},
										{
											"begin": 1024,
											"end": 1081,
											"name": "SWAP1"
										},
										{
											"begin": 1024,
											"end": 1081,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1024,
											"end": 1081,
											"name": "ADD"
										},
										{
											"begin": 1024,
											"end": 1081,
											"name": "SWAP1"
										},
										{
											"begin": 1024,
											"end": 1081,
											"name": "SWAP3"
										},
										{
											"begin": 1024,
											"end": 1081,
											"name": "SWAP2"
										},
										{
											"begin": 1024,
											"end": 1081,
											"name": "SWAP1"
										},
										{
											"begin": 1024,
											"end": 1081,
											"name": "POP"
										},
										{
											"begin": 1024,
											"end": 1081,
											"name": "POP"
										},
										{
											"begin": 1024,
											"end": 1081,
											"name": "POP"
										},
										{
											"begin": 1024,
											"end": 1081,
											"name": "PUSH [tag]",
											"value": "92"
										},
										{
											"begin": 1024,
											"end": 1081,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1024,
											"end": 1081,
											"name": "tag",
											"value": "90"
										},
										{
											"begin": 1024,
											"end": 1081,
											"name": "JUMPDEST"
										},
										{
											"begin": 1024,
											"end": 1081,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1024,
											"end": 1081,
											"name": "MLOAD"
										},
										{
											"begin": 1024,
											"end": 1081,
											"name": "DUP1"
										},
										{
											"begin": 1024,
											"end": 1081,
											"name": "DUP3"
										},
										{
											"begin": 1024,
											"end": 1081,
											"name": "DUP2"
										},
										{
											"begin": 1024,
											"end": 1081,
											"name": "MSTORE"
										},
										{
											"begin": 1024,
											"end": 1081,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1024,
											"end": 1081,
											"name": "ADD"
										},
										{
											"begin": 1024,
											"end": 1081,
											"name": "SWAP2"
										},
										{
											"begin": 1024,
											"end": 1081,
											"name": "POP"
										},
										{
											"begin": 1024,
											"end": 1081,
											"name": "POP"
										},
										{
											"begin": 1024,
											"end": 1081,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1024,
											"end": 1081,
											"name": "MLOAD"
										},
										{
											"begin": 1024,
											"end": 1081,
											"name": "DUP1"
										},
										{
											"begin": 1024,
											"end": 1081,
											"name": "SWAP2"
										},
										{
											"begin": 1024,
											"end": 1081,
											"name": "SUB"
										},
										{
											"begin": 1024,
											"end": 1081,
											"name": "SWAP1"
										},
										{
											"begin": 1024,
											"end": 1081,
											"name": "RETURN"
										},
										{
											"begin": 113,
											"end": 133,
											"name": "tag",
											"value": "24"
										},
										{
											"begin": 113,
											"end": 133,
											"name": "JUMPDEST"
										},
										{
											"begin": 113,
											"end": 133,
											"name": "PUSH [tag]",
											"value": "93"
										},
										{
											"begin": 113,
											"end": 133,
											"name": "PUSH [tag]",
											"value": "94"
										},
										{
											"begin": 113,
											"end": 133,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 113,
											"end": 133,
											"name": "tag",
											"value": "93"
										},
										{
											"begin": 113,
											"end": 133,
											"name": "JUMPDEST"
										},
										{
											"begin": 113,
											"end": 133,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 113,
											"end": 133,
											"name": "MLOAD"
										},
										{
											"begin": 113,
											"end": 133,
											"name": "DUP1"
										},
										{
											"begin": 113,
											"end": 133,
											"name": "DUP3"
										},
										{
											"begin": 113,
											"end": 133,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 113,
											"end": 133,
											"name": "AND"
										},
										{
											"begin": 113,
											"end": 133,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 113,
											"end": 133,
											"name": "AND"
										},
										{
											"begin": 113,
											"end": 133,
											"name": "DUP2"
										},
										{
											"begin": 113,
											"end": 133,
											"name": "MSTORE"
										},
										{
											"begin": 113,
											"end": 133,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 113,
											"end": 133,
											"name": "ADD"
										},
										{
											"begin": 113,
											"end": 133,
											"name": "SWAP2"
										},
										{
											"begin": 113,
											"end": 133,
											"name": "POP"
										},
										{
											"begin": 113,
											"end": 133,
											"name": "POP"
										},
										{
											"begin": 113,
											"end": 133,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 113,
											"end": 133,
											"name": "MLOAD"
										},
										{
											"begin": 113,
											"end": 133,
											"name": "DUP1"
										},
										{
											"begin": 113,
											"end": 133,
											"name": "SWAP2"
										},
										{
											"begin": 113,
											"end": 133,
											"name": "SUB"
										},
										{
											"begin": 113,
											"end": 133,
											"name": "SWAP1"
										},
										{
											"begin": 113,
											"end": 133,
											"name": "RETURN"
										},
										{
											"begin": 169,
											"end": 194,
											"name": "tag",
											"value": "25"
										},
										{
											"begin": 169,
											"end": 194,
											"name": "JUMPDEST"
										},
										{
											"begin": 169,
											"end": 194,
											"name": "PUSH [tag]",
											"value": "95"
										},
										{
											"begin": 169,
											"end": 194,
											"name": "PUSH [tag]",
											"value": "96"
										},
										{
											"begin": 169,
											"end": 194,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 169,
											"end": 194,
											"name": "tag",
											"value": "95"
										},
										{
											"begin": 169,
											"end": 194,
											"name": "JUMPDEST"
										},
										{
											"begin": 169,
											"end": 194,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 169,
											"end": 194,
											"name": "MLOAD"
										},
										{
											"begin": 169,
											"end": 194,
											"name": "DUP1"
										},
										{
											"begin": 169,
											"end": 194,
											"name": "DUP3"
										},
										{
											"begin": 169,
											"end": 194,
											"name": "DUP2"
										},
										{
											"begin": 169,
											"end": 194,
											"name": "MSTORE"
										},
										{
											"begin": 169,
											"end": 194,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 169,
											"end": 194,
											"name": "ADD"
										},
										{
											"begin": 169,
											"end": 194,
											"name": "SWAP2"
										},
										{
											"begin": 169,
											"end": 194,
											"name": "POP"
										},
										{
											"begin": 169,
											"end": 194,
											"name": "POP"
										},
										{
											"begin": 169,
											"end": 194,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 169,
											"end": 194,
											"name": "MLOAD"
										},
										{
											"begin": 169,
											"end": 194,
											"name": "DUP1"
										},
										{
											"begin": 169,
											"end": 194,
											"name": "SWAP2"
										},
										{
											"begin": 169,
											"end": 194,
											"name": "SUB"
										},
										{
											"begin": 169,
											"end": 194,
											"name": "SWAP1"
										},
										{
											"begin": 169,
											"end": 194,
											"name": "RETURN"
										},
										{
											"begin": 2758,
											"end": 3137,
											"name": "tag",
											"value": "26"
										},
										{
											"begin": 2758,
											"end": 3137,
											"name": "JUMPDEST"
										},
										{
											"begin": 2758,
											"end": 3137,
											"name": "PUSH [tag]",
											"value": "97"
										},
										{
											"begin": 2758,
											"end": 3137,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2758,
											"end": 3137,
											"name": "DUP1"
										},
										{
											"begin": 2758,
											"end": 3137,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 2758,
											"end": 3137,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "98"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "98"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 2758,
											"end": 3137,
											"name": "DUP2"
										},
										{
											"begin": 2758,
											"end": 3137,
											"name": "ADD"
										},
										{
											"begin": 2758,
											"end": 3137,
											"name": "SWAP1"
										},
										{
											"begin": 2758,
											"end": 3137,
											"name": "DUP1"
										},
										{
											"begin": 2758,
											"end": 3137,
											"name": "DUP1"
										},
										{
											"begin": 2758,
											"end": 3137,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2758,
											"end": 3137,
											"name": "SWAP1"
										},
										{
											"begin": 2758,
											"end": 3137,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2758,
											"end": 3137,
											"name": "ADD"
										},
										{
											"begin": 2758,
											"end": 3137,
											"name": "SWAP1"
										},
										{
											"begin": 2758,
											"end": 3137,
											"name": "SWAP3"
										},
										{
											"begin": 2758,
											"end": 3137,
											"name": "SWAP2"
										},
										{
											"begin": 2758,
											"end": 3137,
											"name": "SWAP1"
										},
										{
											"begin": 2758,
											"end": 3137,
											"name": "POP"
										},
										{
											"begin": 2758,
											"end": 3137,
											"name": "POP"
										},
										{
											"begin": 2758,
											"end": 3137,
											"name": "POP"
										},
										{
											"begin": 2758,
											"end": 3137,
											"name": "PUSH [tag]",
											"value": "99"
										},
										{
											"begin": 2758,
											"end": 3137,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2758,
											"end": 3137,
											"name": "tag",
											"value": "97"
										},
										{
											"begin": 2758,
											"end": 3137,
											"name": "JUMPDEST"
										},
										{
											"begin": 2758,
											"end": 3137,
											"name": "STOP"
										},
										{
											"begin": 944,
											"end": 973,
											"name": "tag",
											"value": "27"
										},
										{
											"begin": 944,
											"end": 973,
											"name": "JUMPDEST"
										},
										{
											"begin": 944,
											"end": 973,
											"name": "PUSH [tag]",
											"value": "100"
										},
										{
											"begin": 944,
											"end": 973,
											"name": "PUSH [tag]",
											"value": "101"
										},
										{
											"begin": 944,
											"end": 973,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 944,
											"end": 973,
											"name": "tag",
											"value": "100"
										},
										{
											"begin": 944,
											"end": 973,
											"name": "JUMPDEST"
										},
										{
											"begin": 944,
											"end": 973,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 944,
											"end": 973,
											"name": "MLOAD"
										},
										{
											"begin": 944,
											"end": 973,
											"name": "DUP1"
										},
										{
											"begin": 944,
											"end": 973,
											"name": "DUP3"
										},
										{
											"begin": 944,
											"end": 973,
											"name": "DUP2"
										},
										{
											"begin": 944,
											"end": 973,
											"name": "MSTORE"
										},
										{
											"begin": 944,
											"end": 973,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 944,
											"end": 973,
											"name": "ADD"
										},
										{
											"begin": 944,
											"end": 973,
											"name": "SWAP2"
										},
										{
											"begin": 944,
											"end": 973,
											"name": "POP"
										},
										{
											"begin": 944,
											"end": 973,
											"name": "POP"
										},
										{
											"begin": 944,
											"end": 973,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 944,
											"end": 973,
											"name": "MLOAD"
										},
										{
											"begin": 944,
											"end": 973,
											"name": "DUP1"
										},
										{
											"begin": 944,
											"end": 973,
											"name": "SWAP2"
										},
										{
											"begin": 944,
											"end": 973,
											"name": "SUB"
										},
										{
											"begin": 944,
											"end": 973,
											"name": "SWAP1"
										},
										{
											"begin": 944,
											"end": 973,
											"name": "RETURN"
										},
										{
											"begin": 5494,
											"end": 5854,
											"name": "tag",
											"value": "28"
										},
										{
											"begin": 5494,
											"end": 5854,
											"name": "JUMPDEST"
										},
										{
											"begin": 5494,
											"end": 5854,
											"name": "PUSH [tag]",
											"value": "102"
										},
										{
											"begin": 5494,
											"end": 5854,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 5494,
											"end": 5854,
											"name": "DUP1"
										},
										{
											"begin": 5494,
											"end": 5854,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 5494,
											"end": 5854,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "103"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "103"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 5494,
											"end": 5854,
											"name": "DUP2"
										},
										{
											"begin": 5494,
											"end": 5854,
											"name": "ADD"
										},
										{
											"begin": 5494,
											"end": 5854,
											"name": "SWAP1"
										},
										{
											"begin": 5494,
											"end": 5854,
											"name": "DUP1"
										},
										{
											"begin": 5494,
											"end": 5854,
											"name": "DUP1"
										},
										{
											"begin": 5494,
											"end": 5854,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 5494,
											"end": 5854,
											"name": "SWAP1"
										},
										{
											"begin": 5494,
											"end": 5854,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5494,
											"end": 5854,
											"name": "ADD"
										},
										{
											"begin": 5494,
											"end": 5854,
											"name": "SWAP1"
										},
										{
											"begin": 5494,
											"end": 5854,
											"name": "SWAP3"
										},
										{
											"begin": 5494,
											"end": 5854,
											"name": "SWAP2"
										},
										{
											"begin": 5494,
											"end": 5854,
											"name": "SWAP1"
										},
										{
											"begin": 5494,
											"end": 5854,
											"name": "POP"
										},
										{
											"begin": 5494,
											"end": 5854,
											"name": "POP"
										},
										{
											"begin": 5494,
											"end": 5854,
											"name": "POP"
										},
										{
											"begin": 5494,
											"end": 5854,
											"name": "PUSH [tag]",
											"value": "104"
										},
										{
											"begin": 5494,
											"end": 5854,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5494,
											"end": 5854,
											"name": "tag",
											"value": "102"
										},
										{
											"begin": 5494,
											"end": 5854,
											"name": "JUMPDEST"
										},
										{
											"begin": 5494,
											"end": 5854,
											"name": "STOP"
										},
										{
											"begin": 2031,
											"end": 2361,
											"name": "tag",
											"value": "29"
										},
										{
											"begin": 2031,
											"end": 2361,
											"name": "JUMPDEST"
										},
										{
											"begin": 2031,
											"end": 2361,
											"name": "PUSH [tag]",
											"value": "105"
										},
										{
											"begin": 2031,
											"end": 2361,
											"name": "PUSH [tag]",
											"value": "106"
										},
										{
											"begin": 2031,
											"end": 2361,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2031,
											"end": 2361,
											"name": "tag",
											"value": "105"
										},
										{
											"begin": 2031,
											"end": 2361,
											"name": "JUMPDEST"
										},
										{
											"begin": 2031,
											"end": 2361,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2031,
											"end": 2361,
											"name": "MLOAD"
										},
										{
											"begin": 2031,
											"end": 2361,
											"name": "DUP1"
										},
										{
											"begin": 2031,
											"end": 2361,
											"name": "DUP3"
										},
										{
											"begin": 2031,
											"end": 2361,
											"name": "DUP2"
										},
										{
											"begin": 2031,
											"end": 2361,
											"name": "MSTORE"
										},
										{
											"begin": 2031,
											"end": 2361,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2031,
											"end": 2361,
											"name": "ADD"
										},
										{
											"begin": 2031,
											"end": 2361,
											"name": "SWAP2"
										},
										{
											"begin": 2031,
											"end": 2361,
											"name": "POP"
										},
										{
											"begin": 2031,
											"end": 2361,
											"name": "POP"
										},
										{
											"begin": 2031,
											"end": 2361,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2031,
											"end": 2361,
											"name": "MLOAD"
										},
										{
											"begin": 2031,
											"end": 2361,
											"name": "DUP1"
										},
										{
											"begin": 2031,
											"end": 2361,
											"name": "SWAP2"
										},
										{
											"begin": 2031,
											"end": 2361,
											"name": "SUB"
										},
										{
											"begin": 2031,
											"end": 2361,
											"name": "SWAP1"
										},
										{
											"begin": 2031,
											"end": 2361,
											"name": "RETURN"
										},
										{
											"begin": 758,
											"end": 784,
											"name": "tag",
											"value": "30"
										},
										{
											"begin": 758,
											"end": 784,
											"name": "JUMPDEST"
										},
										{
											"begin": 758,
											"end": 784,
											"name": "PUSH [tag]",
											"value": "107"
										},
										{
											"begin": 758,
											"end": 784,
											"name": "PUSH [tag]",
											"value": "108"
										},
										{
											"begin": 758,
											"end": 784,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 758,
											"end": 784,
											"name": "tag",
											"value": "107"
										},
										{
											"begin": 758,
											"end": 784,
											"name": "JUMPDEST"
										},
										{
											"begin": 758,
											"end": 784,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 758,
											"end": 784,
											"name": "MLOAD"
										},
										{
											"begin": 758,
											"end": 784,
											"name": "DUP1"
										},
										{
											"begin": 758,
											"end": 784,
											"name": "DUP3"
										},
										{
											"begin": 758,
											"end": 784,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 758,
											"end": 784,
											"name": "AND"
										},
										{
											"begin": 758,
											"end": 784,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 758,
											"end": 784,
											"name": "AND"
										},
										{
											"begin": 758,
											"end": 784,
											"name": "DUP2"
										},
										{
											"begin": 758,
											"end": 784,
											"name": "MSTORE"
										},
										{
											"begin": 758,
											"end": 784,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 758,
											"end": 784,
											"name": "ADD"
										},
										{
											"begin": 758,
											"end": 784,
											"name": "SWAP2"
										},
										{
											"begin": 758,
											"end": 784,
											"name": "POP"
										},
										{
											"begin": 758,
											"end": 784,
											"name": "POP"
										},
										{
											"begin": 758,
											"end": 784,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 758,
											"end": 784,
											"name": "MLOAD"
										},
										{
											"begin": 758,
											"end": 784,
											"name": "DUP1"
										},
										{
											"begin": 758,
											"end": 784,
											"name": "SWAP2"
										},
										{
											"begin": 758,
											"end": 784,
											"name": "SUB"
										},
										{
											"begin": 758,
											"end": 784,
											"name": "SWAP1"
										},
										{
											"begin": 758,
											"end": 784,
											"name": "RETURN"
										},
										{
											"begin": 980,
											"end": 1015,
											"name": "tag",
											"value": "31"
										},
										{
											"begin": 980,
											"end": 1015,
											"name": "JUMPDEST"
										},
										{
											"begin": 980,
											"end": 1015,
											"name": "PUSH [tag]",
											"value": "109"
										},
										{
											"begin": 980,
											"end": 1015,
											"name": "PUSH [tag]",
											"value": "110"
										},
										{
											"begin": 980,
											"end": 1015,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 980,
											"end": 1015,
											"name": "tag",
											"value": "109"
										},
										{
											"begin": 980,
											"end": 1015,
											"name": "JUMPDEST"
										},
										{
											"begin": 980,
											"end": 1015,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 980,
											"end": 1015,
											"name": "MLOAD"
										},
										{
											"begin": 980,
											"end": 1015,
											"name": "DUP1"
										},
										{
											"begin": 980,
											"end": 1015,
											"name": "DUP3"
										},
										{
											"begin": 980,
											"end": 1015,
											"name": "DUP2"
										},
										{
											"begin": 980,
											"end": 1015,
											"name": "MSTORE"
										},
										{
											"begin": 980,
											"end": 1015,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 980,
											"end": 1015,
											"name": "ADD"
										},
										{
											"begin": 980,
											"end": 1015,
											"name": "SWAP2"
										},
										{
											"begin": 980,
											"end": 1015,
											"name": "POP"
										},
										{
											"begin": 980,
											"end": 1015,
											"name": "POP"
										},
										{
											"begin": 980,
											"end": 1015,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 980,
											"end": 1015,
											"name": "MLOAD"
										},
										{
											"begin": 980,
											"end": 1015,
											"name": "DUP1"
										},
										{
											"begin": 980,
											"end": 1015,
											"name": "SWAP2"
										},
										{
											"begin": 980,
											"end": 1015,
											"name": "SUB"
										},
										{
											"begin": 980,
											"end": 1015,
											"name": "SWAP1"
										},
										{
											"begin": 980,
											"end": 1015,
											"name": "RETURN"
										},
										{
											"begin": 3825,
											"end": 3922,
											"name": "tag",
											"value": "32"
										},
										{
											"begin": 3825,
											"end": 3922,
											"name": "JUMPDEST"
										},
										{
											"begin": 3825,
											"end": 3922,
											"name": "PUSH [tag]",
											"value": "111"
										},
										{
											"begin": 3825,
											"end": 3922,
											"name": "PUSH [tag]",
											"value": "112"
										},
										{
											"begin": 3825,
											"end": 3922,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3825,
											"end": 3922,
											"name": "tag",
											"value": "111"
										},
										{
											"begin": 3825,
											"end": 3922,
											"name": "JUMPDEST"
										},
										{
											"begin": 3825,
											"end": 3922,
											"name": "STOP"
										},
										{
											"begin": 824,
											"end": 855,
											"name": "tag",
											"value": "33"
										},
										{
											"begin": 824,
											"end": 855,
											"name": "JUMPDEST"
										},
										{
											"begin": 824,
											"end": 855,
											"name": "PUSH [tag]",
											"value": "113"
										},
										{
											"begin": 824,
											"end": 855,
											"name": "PUSH [tag]",
											"value": "114"
										},
										{
											"begin": 824,
											"end": 855,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 824,
											"end": 855,
											"name": "tag",
											"value": "113"
										},
										{
											"begin": 824,
											"end": 855,
											"name": "JUMPDEST"
										},
										{
											"begin": 824,
											"end": 855,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 824,
											"end": 855,
											"name": "MLOAD"
										},
										{
											"begin": 824,
											"end": 855,
											"name": "DUP1"
										},
										{
											"begin": 824,
											"end": 855,
											"name": "DUP3"
										},
										{
											"begin": 824,
											"end": 855,
											"name": "DUP2"
										},
										{
											"begin": 824,
											"end": 855,
											"name": "MSTORE"
										},
										{
											"begin": 824,
											"end": 855,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 824,
											"end": 855,
											"name": "ADD"
										},
										{
											"begin": 824,
											"end": 855,
											"name": "SWAP2"
										},
										{
											"begin": 824,
											"end": 855,
											"name": "POP"
										},
										{
											"begin": 824,
											"end": 855,
											"name": "POP"
										},
										{
											"begin": 824,
											"end": 855,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 824,
											"end": 855,
											"name": "MLOAD"
										},
										{
											"begin": 824,
											"end": 855,
											"name": "DUP1"
										},
										{
											"begin": 824,
											"end": 855,
											"name": "SWAP2"
										},
										{
											"begin": 824,
											"end": 855,
											"name": "SUB"
										},
										{
											"begin": 824,
											"end": 855,
											"name": "SWAP1"
										},
										{
											"begin": 824,
											"end": 855,
											"name": "RETURN"
										},
										{
											"begin": 2369,
											"end": 2567,
											"name": "tag",
											"value": "43"
										},
										{
											"begin": 2369,
											"end": 2567,
											"name": "JUMPDEST"
										},
										{
											"begin": 2423,
											"end": 2430,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2450,
											"end": 2559,
											"name": "PUSH [tag]",
											"value": "116"
										},
										{
											"begin": 2542,
											"end": 2549,
											"name": "PUSH",
											"value": "D"
										},
										{
											"begin": 2542,
											"end": 2558,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2550,
											"end": 2557,
											"name": "DUP5"
										},
										{
											"begin": 2542,
											"end": 2558,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2542,
											"end": 2558,
											"name": "AND"
										},
										{
											"begin": 2542,
											"end": 2558,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2542,
											"end": 2558,
											"name": "AND"
										},
										{
											"begin": 2542,
											"end": 2558,
											"name": "DUP2"
										},
										{
											"begin": 2542,
											"end": 2558,
											"name": "MSTORE"
										},
										{
											"begin": 2542,
											"end": 2558,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2542,
											"end": 2558,
											"name": "ADD"
										},
										{
											"begin": 2542,
											"end": 2558,
											"name": "SWAP1"
										},
										{
											"begin": 2542,
											"end": 2558,
											"name": "DUP2"
										},
										{
											"begin": 2542,
											"end": 2558,
											"name": "MSTORE"
										},
										{
											"begin": 2542,
											"end": 2558,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2542,
											"end": 2558,
											"name": "ADD"
										},
										{
											"begin": 2542,
											"end": 2558,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2542,
											"end": 2558,
											"name": "KECCAK256"
										},
										{
											"begin": 2542,
											"end": 2558,
											"name": "SLOAD"
										},
										{
											"begin": 2450,
											"end": 2537,
											"name": "PUSH [tag]",
											"value": "117"
										},
										{
											"begin": 2532,
											"end": 2536,
											"name": "PUSH",
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 2450,
											"end": 2527,
											"name": "PUSH [tag]",
											"value": "118"
										},
										{
											"begin": 2473,
											"end": 2526,
											"name": "PUSH [tag]",
											"value": "119"
										},
										{
											"begin": 2494,
											"end": 2516,
											"name": "PUSH",
											"value": "C"
										},
										{
											"begin": 2494,
											"end": 2525,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2517,
											"end": 2524,
											"name": "DUP10"
										},
										{
											"begin": 2494,
											"end": 2525,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2494,
											"end": 2525,
											"name": "AND"
										},
										{
											"begin": 2494,
											"end": 2525,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2494,
											"end": 2525,
											"name": "AND"
										},
										{
											"begin": 2494,
											"end": 2525,
											"name": "DUP2"
										},
										{
											"begin": 2494,
											"end": 2525,
											"name": "MSTORE"
										},
										{
											"begin": 2494,
											"end": 2525,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2494,
											"end": 2525,
											"name": "ADD"
										},
										{
											"begin": 2494,
											"end": 2525,
											"name": "SWAP1"
										},
										{
											"begin": 2494,
											"end": 2525,
											"name": "DUP2"
										},
										{
											"begin": 2494,
											"end": 2525,
											"name": "MSTORE"
										},
										{
											"begin": 2494,
											"end": 2525,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2494,
											"end": 2525,
											"name": "ADD"
										},
										{
											"begin": 2494,
											"end": 2525,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2494,
											"end": 2525,
											"name": "KECCAK256"
										},
										{
											"begin": 2494,
											"end": 2525,
											"name": "SLOAD"
										},
										{
											"begin": 2473,
											"end": 2489,
											"name": "PUSH [tag]",
											"value": "120"
										},
										{
											"begin": 2473,
											"end": 2487,
											"name": "PUSH [tag]",
											"value": "106"
										},
										{
											"begin": 2473,
											"end": 2489,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2473,
											"end": 2489,
											"name": "tag",
											"value": "120"
										},
										{
											"begin": 2473,
											"end": 2489,
											"name": "JUMPDEST"
										},
										{
											"begin": 2473,
											"end": 2493,
											"name": "PUSH [tag]",
											"value": "121"
										},
										{
											"begin": 2473,
											"end": 2493,
											"name": "SWAP1"
										},
										{
											"begin": 2473,
											"end": 2526,
											"name": "SWAP2"
										},
										{
											"begin": 2473,
											"end": 2526,
											"name": "SWAP1"
										},
										{
											"begin": 2473,
											"end": 2526,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 2473,
											"end": 2526,
											"name": "AND"
										},
										{
											"begin": 2473,
											"end": 2526,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2473,
											"end": 2526,
											"name": "tag",
											"value": "119"
										},
										{
											"begin": 2473,
											"end": 2526,
											"name": "JUMPDEST"
										},
										{
											"begin": 2450,
											"end": 2459,
											"name": "PUSH",
											"value": "F"
										},
										{
											"begin": 2450,
											"end": 2468,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2460,
											"end": 2467,
											"name": "DUP10"
										},
										{
											"begin": 2450,
											"end": 2468,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2450,
											"end": 2468,
											"name": "AND"
										},
										{
											"begin": 2450,
											"end": 2468,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2450,
											"end": 2468,
											"name": "AND"
										},
										{
											"begin": 2450,
											"end": 2468,
											"name": "DUP2"
										},
										{
											"begin": 2450,
											"end": 2468,
											"name": "MSTORE"
										},
										{
											"begin": 2450,
											"end": 2468,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2450,
											"end": 2468,
											"name": "ADD"
										},
										{
											"begin": 2450,
											"end": 2468,
											"name": "SWAP1"
										},
										{
											"begin": 2450,
											"end": 2468,
											"name": "DUP2"
										},
										{
											"begin": 2450,
											"end": 2468,
											"name": "MSTORE"
										},
										{
											"begin": 2450,
											"end": 2468,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2450,
											"end": 2468,
											"name": "ADD"
										},
										{
											"begin": 2450,
											"end": 2468,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2450,
											"end": 2468,
											"name": "KECCAK256"
										},
										{
											"begin": 2450,
											"end": 2468,
											"name": "SLOAD"
										},
										{
											"begin": 2450,
											"end": 2472,
											"name": "PUSH [tag]",
											"value": "122"
										},
										{
											"begin": 2450,
											"end": 2472,
											"name": "SWAP1"
										},
										{
											"begin": 2450,
											"end": 2527,
											"name": "SWAP2"
										},
										{
											"begin": 2450,
											"end": 2527,
											"name": "SWAP1"
										},
										{
											"begin": 2450,
											"end": 2527,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 2450,
											"end": 2527,
											"name": "AND"
										},
										{
											"begin": 2450,
											"end": 2527,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2450,
											"end": 2527,
											"name": "tag",
											"value": "118"
										},
										{
											"begin": 2450,
											"end": 2527,
											"name": "JUMPDEST"
										},
										{
											"begin": 2450,
											"end": 2531,
											"name": "PUSH [tag]",
											"value": "123"
										},
										{
											"begin": 2450,
											"end": 2531,
											"name": "SWAP1"
										},
										{
											"begin": 2450,
											"end": 2537,
											"name": "SWAP2"
										},
										{
											"begin": 2450,
											"end": 2537,
											"name": "SWAP1"
										},
										{
											"begin": 2450,
											"end": 2537,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 2450,
											"end": 2537,
											"name": "AND"
										},
										{
											"begin": 2450,
											"end": 2537,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2450,
											"end": 2537,
											"name": "tag",
											"value": "117"
										},
										{
											"begin": 2450,
											"end": 2537,
											"name": "JUMPDEST"
										},
										{
											"begin": 2450,
											"end": 2541,
											"name": "PUSH [tag]",
											"value": "124"
										},
										{
											"begin": 2450,
											"end": 2541,
											"name": "SWAP1"
										},
										{
											"begin": 2450,
											"end": 2559,
											"name": "SWAP2"
										},
										{
											"begin": 2450,
											"end": 2559,
											"name": "SWAP1"
										},
										{
											"begin": 2450,
											"end": 2559,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 2450,
											"end": 2559,
											"name": "AND"
										},
										{
											"begin": 2450,
											"end": 2559,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2450,
											"end": 2559,
											"name": "tag",
											"value": "116"
										},
										{
											"begin": 2450,
											"end": 2559,
											"name": "JUMPDEST"
										},
										{
											"begin": 2443,
											"end": 2559,
											"name": "SWAP1"
										},
										{
											"begin": 2443,
											"end": 2559,
											"name": "POP"
										},
										{
											"begin": 2369,
											"end": 2567,
											"name": "SWAP2"
										},
										{
											"begin": 2369,
											"end": 2567,
											"name": "SWAP1"
										},
										{
											"begin": 2369,
											"end": 2567,
											"name": "POP"
										},
										{
											"begin": 2369,
											"end": 2567,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1088,
											"end": 1130,
											"name": "tag",
											"value": "46"
										},
										{
											"begin": 1088,
											"end": 1130,
											"name": "JUMPDEST"
										},
										{
											"begin": 1088,
											"end": 1130,
											"name": "PUSH",
											"value": "D"
										},
										{
											"begin": 1088,
											"end": 1130,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1088,
											"end": 1130,
											"name": "MSTORE"
										},
										{
											"begin": 1088,
											"end": 1130,
											"name": "DUP1"
										},
										{
											"begin": 1088,
											"end": 1130,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1088,
											"end": 1130,
											"name": "MSTORE"
										},
										{
											"begin": 1088,
											"end": 1130,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1088,
											"end": 1130,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1088,
											"end": 1130,
											"name": "KECCAK256"
										},
										{
											"begin": 1088,
											"end": 1130,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1088,
											"end": 1130,
											"name": "SWAP2"
										},
										{
											"begin": 1088,
											"end": 1130,
											"name": "POP"
										},
										{
											"begin": 1088,
											"end": 1130,
											"name": "SWAP1"
										},
										{
											"begin": 1088,
											"end": 1130,
											"name": "POP"
										},
										{
											"begin": 1088,
											"end": 1130,
											"name": "SLOAD"
										},
										{
											"begin": 1088,
											"end": 1130,
											"name": "DUP2"
										},
										{
											"begin": 1088,
											"end": 1130,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 371,
											"end": 512,
											"name": "tag",
											"value": "49"
										},
										{
											"begin": 371,
											"end": 512,
											"name": "JUMPDEST"
										},
										{
											"begin": 829,
											"end": 841,
											"name": "PUSH [tag]",
											"value": "126"
										},
										{
											"begin": 829,
											"end": 839,
											"name": "PUSH [tag]",
											"value": "127"
										},
										{
											"begin": 829,
											"end": 841,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 829,
											"end": 841,
											"name": "tag",
											"value": "126"
										},
										{
											"begin": 829,
											"end": 841,
											"name": "JUMPDEST"
										},
										{
											"begin": 460,
											"end": 466,
											"name": "DUP1"
										},
										{
											"begin": 443,
											"end": 457,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 443,
											"end": 457,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 443,
											"end": 466,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 443,
											"end": 466,
											"name": "EXP"
										},
										{
											"begin": 443,
											"end": 466,
											"name": "DUP2"
										},
										{
											"begin": 443,
											"end": 466,
											"name": "SLOAD"
										},
										{
											"begin": 443,
											"end": 466,
											"name": "DUP2"
										},
										{
											"begin": 443,
											"end": 466,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 443,
											"end": 466,
											"name": "MUL"
										},
										{
											"begin": 443,
											"end": 466,
											"name": "NOT"
										},
										{
											"begin": 443,
											"end": 466,
											"name": "AND"
										},
										{
											"begin": 443,
											"end": 466,
											"name": "SWAP1"
										},
										{
											"begin": 443,
											"end": 466,
											"name": "DUP4"
										},
										{
											"begin": 443,
											"end": 466,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 443,
											"end": 466,
											"name": "AND"
										},
										{
											"begin": 443,
											"end": 466,
											"name": "MUL"
										},
										{
											"begin": 443,
											"end": 466,
											"name": "OR"
										},
										{
											"begin": 443,
											"end": 466,
											"name": "SWAP1"
										},
										{
											"begin": 443,
											"end": 466,
											"name": "SSTORE"
										},
										{
											"begin": 443,
											"end": 466,
											"name": "POP"
										},
										{
											"begin": 482,
											"end": 504,
											"name": "PUSH",
											"value": "906A1C6BD7E3091EA86693DD029A831C19049CE77F1DCE2CE0BAB1CACBABCE22"
										},
										{
											"begin": 497,
											"end": 503,
											"name": "DUP2"
										},
										{
											"begin": 482,
											"end": 504,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 482,
											"end": 504,
											"name": "MLOAD"
										},
										{
											"begin": 482,
											"end": 504,
											"name": "DUP1"
										},
										{
											"begin": 482,
											"end": 504,
											"name": "DUP3"
										},
										{
											"begin": 482,
											"end": 504,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 482,
											"end": 504,
											"name": "AND"
										},
										{
											"begin": 482,
											"end": 504,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 482,
											"end": 504,
											"name": "AND"
										},
										{
											"begin": 482,
											"end": 504,
											"name": "DUP2"
										},
										{
											"begin": 482,
											"end": 504,
											"name": "MSTORE"
										},
										{
											"begin": 482,
											"end": 504,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 482,
											"end": 504,
											"name": "ADD"
										},
										{
											"begin": 482,
											"end": 504,
											"name": "SWAP2"
										},
										{
											"begin": 482,
											"end": 504,
											"name": "POP"
										},
										{
											"begin": 482,
											"end": 504,
											"name": "POP"
										},
										{
											"begin": 482,
											"end": 504,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 482,
											"end": 504,
											"name": "MLOAD"
										},
										{
											"begin": 482,
											"end": 504,
											"name": "DUP1"
										},
										{
											"begin": 482,
											"end": 504,
											"name": "SWAP2"
										},
										{
											"begin": 482,
											"end": 504,
											"name": "SUB"
										},
										{
											"begin": 482,
											"end": 504,
											"name": "SWAP1"
										},
										{
											"begin": 482,
											"end": 504,
											"name": "LOG1"
										},
										{
											"begin": 371,
											"end": 512,
											"name": "POP"
										},
										{
											"begin": 371,
											"end": 512,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 615,
											"end": 1103,
											"name": "tag",
											"value": "52"
										},
										{
											"begin": 615,
											"end": 1103,
											"name": "JUMPDEST"
										},
										{
											"begin": 829,
											"end": 841,
											"name": "PUSH [tag]",
											"value": "130"
										},
										{
											"begin": 829,
											"end": 839,
											"name": "PUSH [tag]",
											"value": "127"
										},
										{
											"begin": 829,
											"end": 841,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 829,
											"end": 841,
											"name": "tag",
											"value": "130"
										},
										{
											"begin": 829,
											"end": 841,
											"name": "JUMPDEST"
										},
										{
											"begin": 768,
											"end": 774,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 768,
											"end": 774,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 768,
											"end": 774,
											"name": "SWAP1"
										},
										{
											"begin": 768,
											"end": 774,
											"name": "SLOAD"
										},
										{
											"begin": 768,
											"end": 774,
											"name": "SWAP1"
										},
										{
											"begin": 768,
											"end": 774,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 768,
											"end": 774,
											"name": "EXP"
										},
										{
											"begin": 768,
											"end": 774,
											"name": "SWAP1"
										},
										{
											"begin": 768,
											"end": 774,
											"name": "DIV"
										},
										{
											"begin": 768,
											"end": 774,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 768,
											"end": 774,
											"name": "AND"
										},
										{
											"begin": 757,
											"end": 774,
											"name": "ISZERO"
										},
										{
											"begin": 757,
											"end": 774,
											"name": "ISZERO"
										},
										{
											"begin": 757,
											"end": 764,
											"name": "DUP2"
										},
										{
											"begin": 757,
											"end": 774,
											"name": "ISZERO"
										},
										{
											"begin": 757,
											"end": 774,
											"name": "ISZERO"
										},
										{
											"begin": 757,
											"end": 774,
											"name": "EQ"
										},
										{
											"begin": 753,
											"end": 809,
											"name": "ISZERO"
										},
										{
											"begin": 753,
											"end": 809,
											"name": "PUSH [tag]",
											"value": "132"
										},
										{
											"begin": 753,
											"end": 809,
											"name": "JUMPI"
										},
										{
											"begin": 791,
											"end": 798,
											"name": "PUSH [tag]",
											"value": "131"
										},
										{
											"begin": 791,
											"end": 798,
											"name": "JUMP"
										},
										{
											"begin": 753,
											"end": 809,
											"name": "tag",
											"value": "132"
										},
										{
											"begin": 753,
											"end": 809,
											"name": "JUMPDEST"
										},
										{
											"begin": 864,
											"end": 871,
											"name": "DUP1"
										},
										{
											"begin": 855,
											"end": 861,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 855,
											"end": 861,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 855,
											"end": 871,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 855,
											"end": 871,
											"name": "EXP"
										},
										{
											"begin": 855,
											"end": 871,
											"name": "DUP2"
										},
										{
											"begin": 855,
											"end": 871,
											"name": "SLOAD"
										},
										{
											"begin": 855,
											"end": 871,
											"name": "DUP2"
										},
										{
											"begin": 855,
											"end": 871,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 855,
											"end": 871,
											"name": "MUL"
										},
										{
											"begin": 855,
											"end": 871,
											"name": "NOT"
										},
										{
											"begin": 855,
											"end": 871,
											"name": "AND"
										},
										{
											"begin": 855,
											"end": 871,
											"name": "SWAP1"
										},
										{
											"begin": 855,
											"end": 871,
											"name": "DUP4"
										},
										{
											"begin": 855,
											"end": 871,
											"name": "ISZERO"
										},
										{
											"begin": 855,
											"end": 871,
											"name": "ISZERO"
										},
										{
											"begin": 855,
											"end": 871,
											"name": "MUL"
										},
										{
											"begin": 855,
											"end": 871,
											"name": "OR"
										},
										{
											"begin": 855,
											"end": 871,
											"name": "SWAP1"
										},
										{
											"begin": 855,
											"end": 871,
											"name": "SSTORE"
										},
										{
											"begin": 855,
											"end": 871,
											"name": "POP"
										},
										{
											"begin": 940,
											"end": 946,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 940,
											"end": 946,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 940,
											"end": 946,
											"name": "SWAP1"
										},
										{
											"begin": 940,
											"end": 946,
											"name": "SLOAD"
										},
										{
											"begin": 940,
											"end": 946,
											"name": "SWAP1"
										},
										{
											"begin": 940,
											"end": 946,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 940,
											"end": 946,
											"name": "EXP"
										},
										{
											"begin": 940,
											"end": 946,
											"name": "SWAP1"
										},
										{
											"begin": 940,
											"end": 946,
											"name": "DIV"
										},
										{
											"begin": 940,
											"end": 946,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 940,
											"end": 946,
											"name": "AND"
										},
										{
											"begin": 936,
											"end": 994,
											"name": "ISZERO"
										},
										{
											"begin": 936,
											"end": 994,
											"name": "PUSH [tag]",
											"value": "133"
										},
										{
											"begin": 936,
											"end": 994,
											"name": "JUMPI"
										},
										{
											"begin": 979,
											"end": 982,
											"name": "TIMESTAMP"
										},
										{
											"begin": 963,
											"end": 976,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 963,
											"end": 982,
											"name": "DUP2"
										},
										{
											"begin": 963,
											"end": 982,
											"name": "SWAP1"
										},
										{
											"begin": 963,
											"end": 982,
											"name": "SSTORE"
										},
										{
											"begin": 963,
											"end": 982,
											"name": "POP"
										},
										{
											"begin": 936,
											"end": 994,
											"name": "tag",
											"value": "133"
										},
										{
											"begin": 936,
											"end": 994,
											"name": "JUMPDEST"
										},
										{
											"begin": 1075,
											"end": 1095,
											"name": "PUSH",
											"value": "8FB6C181EE25A520CF3DD6565006EF91229FCFE5A989566C2A3B8C115570CEC5"
										},
										{
											"begin": 1088,
											"end": 1094,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 1088,
											"end": 1094,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1088,
											"end": 1094,
											"name": "SWAP1"
										},
										{
											"begin": 1088,
											"end": 1094,
											"name": "SLOAD"
										},
										{
											"begin": 1088,
											"end": 1094,
											"name": "SWAP1"
										},
										{
											"begin": 1088,
											"end": 1094,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1088,
											"end": 1094,
											"name": "EXP"
										},
										{
											"begin": 1088,
											"end": 1094,
											"name": "SWAP1"
										},
										{
											"begin": 1088,
											"end": 1094,
											"name": "DIV"
										},
										{
											"begin": 1088,
											"end": 1094,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1088,
											"end": 1094,
											"name": "AND"
										},
										{
											"begin": 1075,
											"end": 1095,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1075,
											"end": 1095,
											"name": "MLOAD"
										},
										{
											"begin": 1075,
											"end": 1095,
											"name": "DUP1"
										},
										{
											"begin": 1075,
											"end": 1095,
											"name": "DUP3"
										},
										{
											"begin": 1075,
											"end": 1095,
											"name": "ISZERO"
										},
										{
											"begin": 1075,
											"end": 1095,
											"name": "ISZERO"
										},
										{
											"begin": 1075,
											"end": 1095,
											"name": "ISZERO"
										},
										{
											"begin": 1075,
											"end": 1095,
											"name": "ISZERO"
										},
										{
											"begin": 1075,
											"end": 1095,
											"name": "DUP2"
										},
										{
											"begin": 1075,
											"end": 1095,
											"name": "MSTORE"
										},
										{
											"begin": 1075,
											"end": 1095,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1075,
											"end": 1095,
											"name": "ADD"
										},
										{
											"begin": 1075,
											"end": 1095,
											"name": "SWAP2"
										},
										{
											"begin": 1075,
											"end": 1095,
											"name": "POP"
										},
										{
											"begin": 1075,
											"end": 1095,
											"name": "POP"
										},
										{
											"begin": 1075,
											"end": 1095,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1075,
											"end": 1095,
											"name": "MLOAD"
										},
										{
											"begin": 1075,
											"end": 1095,
											"name": "DUP1"
										},
										{
											"begin": 1075,
											"end": 1095,
											"name": "SWAP2"
										},
										{
											"begin": 1075,
											"end": 1095,
											"name": "SUB"
										},
										{
											"begin": 1075,
											"end": 1095,
											"name": "SWAP1"
										},
										{
											"begin": 1075,
											"end": 1095,
											"name": "LOG1"
										},
										{
											"begin": 852,
											"end": 853,
											"name": "tag",
											"value": "131"
										},
										{
											"begin": 852,
											"end": 853,
											"name": "JUMPDEST"
										},
										{
											"begin": 615,
											"end": 1103,
											"name": "POP"
										},
										{
											"begin": 615,
											"end": 1103,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1647,
											"end": 1740,
											"name": "tag",
											"value": "54"
										},
										{
											"begin": 1647,
											"end": 1740,
											"name": "JUMPDEST"
										},
										{
											"begin": 1693,
											"end": 1700,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1720,
											"end": 1732,
											"name": "PUSH",
											"value": "E"
										},
										{
											"begin": 1720,
											"end": 1732,
											"name": "SLOAD"
										},
										{
											"begin": 1713,
											"end": 1732,
											"name": "SWAP1"
										},
										{
											"begin": 1713,
											"end": 1732,
											"name": "POP"
										},
										{
											"begin": 1647,
											"end": 1740,
											"name": "SWAP1"
										},
										{
											"begin": 1647,
											"end": 1740,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 475,
											"end": 617,
											"name": "tag",
											"value": "57"
										},
										{
											"begin": 475,
											"end": 617,
											"name": "JUMPDEST"
										},
										{
											"begin": 829,
											"end": 841,
											"name": "PUSH [tag]",
											"value": "136"
										},
										{
											"begin": 829,
											"end": 839,
											"name": "PUSH [tag]",
											"value": "127"
										},
										{
											"begin": 829,
											"end": 841,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 829,
											"end": 841,
											"name": "tag",
											"value": "136"
										},
										{
											"begin": 829,
											"end": 841,
											"name": "JUMPDEST"
										},
										{
											"begin": 589,
											"end": 609,
											"name": "DUP1"
										},
										{
											"begin": 567,
											"end": 586,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 567,
											"end": 586,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 567,
											"end": 609,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 567,
											"end": 609,
											"name": "EXP"
										},
										{
											"begin": 567,
											"end": 609,
											"name": "DUP2"
										},
										{
											"begin": 567,
											"end": 609,
											"name": "SLOAD"
										},
										{
											"begin": 567,
											"end": 609,
											"name": "DUP2"
										},
										{
											"begin": 567,
											"end": 609,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 567,
											"end": 609,
											"name": "MUL"
										},
										{
											"begin": 567,
											"end": 609,
											"name": "NOT"
										},
										{
											"begin": 567,
											"end": 609,
											"name": "AND"
										},
										{
											"begin": 567,
											"end": 609,
											"name": "SWAP1"
										},
										{
											"begin": 567,
											"end": 609,
											"name": "DUP4"
										},
										{
											"begin": 567,
											"end": 609,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 567,
											"end": 609,
											"name": "AND"
										},
										{
											"begin": 567,
											"end": 609,
											"name": "MUL"
										},
										{
											"begin": 567,
											"end": 609,
											"name": "OR"
										},
										{
											"begin": 567,
											"end": 609,
											"name": "SWAP1"
										},
										{
											"begin": 567,
											"end": 609,
											"name": "SSTORE"
										},
										{
											"begin": 567,
											"end": 609,
											"name": "POP"
										},
										{
											"begin": 475,
											"end": 617,
											"name": "POP"
										},
										{
											"begin": 475,
											"end": 617,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2575,
											"end": 2696,
											"name": "tag",
											"value": "59"
										},
										{
											"begin": 2575,
											"end": 2696,
											"name": "JUMPDEST"
										},
										{
											"begin": 2630,
											"end": 2637,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2657,
											"end": 2688,
											"name": "PUSH [tag]",
											"value": "139"
										},
										{
											"begin": 2672,
											"end": 2687,
											"name": "PUSH",
											"value": "9"
										},
										{
											"begin": 2672,
											"end": 2687,
											"name": "SLOAD"
										},
										{
											"begin": 2657,
											"end": 2667,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 2657,
											"end": 2667,
											"name": "SLOAD"
										},
										{
											"begin": 2657,
											"end": 2671,
											"name": "PUSH [tag]",
											"value": "122"
										},
										{
											"begin": 2657,
											"end": 2671,
											"name": "SWAP1"
										},
										{
											"begin": 2657,
											"end": 2688,
											"name": "SWAP2"
										},
										{
											"begin": 2657,
											"end": 2688,
											"name": "SWAP1"
										},
										{
											"begin": 2657,
											"end": 2688,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 2657,
											"end": 2688,
											"name": "AND"
										},
										{
											"begin": 2657,
											"end": 2688,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2657,
											"end": 2688,
											"name": "tag",
											"value": "139"
										},
										{
											"begin": 2657,
											"end": 2688,
											"name": "JUMPDEST"
										},
										{
											"begin": 2650,
											"end": 2688,
											"name": "SWAP1"
										},
										{
											"begin": 2650,
											"end": 2688,
											"name": "POP"
										},
										{
											"begin": 2575,
											"end": 2696,
											"name": "SWAP1"
										},
										{
											"begin": 2575,
											"end": 2696,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 3145,
											"end": 3502,
											"name": "tag",
											"value": "62"
										},
										{
											"begin": 3145,
											"end": 3502,
											"name": "JUMPDEST"
										},
										{
											"begin": 1350,
											"end": 1351,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1333,
											"end": 1346,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 1333,
											"end": 1346,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1333,
											"end": 1351,
											"name": "DUP3"
										},
										{
											"begin": 1333,
											"end": 1351,
											"name": "DUP3"
										},
										{
											"begin": 1333,
											"end": 1351,
											"name": "SLOAD"
										},
										{
											"begin": 1333,
											"end": 1351,
											"name": "ADD"
										},
										{
											"begin": 1333,
											"end": 1351,
											"name": "SWAP3"
										},
										{
											"begin": 1333,
											"end": 1351,
											"name": "POP"
										},
										{
											"begin": 1333,
											"end": 1351,
											"name": "POP"
										},
										{
											"begin": 1333,
											"end": 1351,
											"name": "DUP2"
										},
										{
											"begin": 1333,
											"end": 1351,
											"name": "SWAP1"
										},
										{
											"begin": 1333,
											"end": 1351,
											"name": "SSTORE"
										},
										{
											"begin": 1333,
											"end": 1351,
											"name": "POP"
										},
										{
											"begin": 1362,
											"end": 1382,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1385,
											"end": 1398,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 1385,
											"end": 1398,
											"name": "SLOAD"
										},
										{
											"begin": 1362,
											"end": 1398,
											"name": "SWAP1"
										},
										{
											"begin": 1362,
											"end": 1398,
											"name": "POP"
										},
										{
											"begin": 3212,
											"end": 3222,
											"name": "CALLER"
										},
										{
											"begin": 5980,
											"end": 5996,
											"name": "PUSH [tag]",
											"value": "142"
										},
										{
											"begin": 5980,
											"end": 5994,
											"name": "PUSH [tag]",
											"value": "106"
										},
										{
											"begin": 5980,
											"end": 5996,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5980,
											"end": 5996,
											"name": "tag",
											"value": "142"
										},
										{
											"begin": 5980,
											"end": 5996,
											"name": "JUMPDEST"
										},
										{
											"begin": 5957,
											"end": 5977,
											"name": "PUSH",
											"value": "B"
										},
										{
											"begin": 5957,
											"end": 5996,
											"name": "DUP2"
										},
										{
											"begin": 5957,
											"end": 5996,
											"name": "SWAP1"
										},
										{
											"begin": 5957,
											"end": 5996,
											"name": "SSTORE"
										},
										{
											"begin": 5957,
											"end": 5996,
											"name": "POP"
										},
										{
											"begin": 6024,
											"end": 6050,
											"name": "PUSH [tag]",
											"value": "143"
										},
										{
											"begin": 6024,
											"end": 6048,
											"name": "PUSH [tag]",
											"value": "86"
										},
										{
											"begin": 6024,
											"end": 6050,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 6024,
											"end": 6050,
											"name": "tag",
											"value": "143"
										},
										{
											"begin": 6024,
											"end": 6050,
											"name": "JUMPDEST"
										},
										{
											"begin": 6007,
											"end": 6021,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 6007,
											"end": 6050,
											"name": "DUP2"
										},
										{
											"begin": 6007,
											"end": 6050,
											"name": "SWAP1"
										},
										{
											"begin": 6007,
											"end": 6050,
											"name": "SSTORE"
										},
										{
											"begin": 6007,
											"end": 6050,
											"name": "POP"
										},
										{
											"begin": 6084,
											"end": 6085,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6065,
											"end": 6086,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6065,
											"end": 6086,
											"name": "AND"
										},
										{
											"begin": 6065,
											"end": 6072,
											"name": "DUP2"
										},
										{
											"begin": 6065,
											"end": 6086,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6065,
											"end": 6086,
											"name": "AND"
										},
										{
											"begin": 6065,
											"end": 6086,
											"name": "EQ"
										},
										{
											"begin": 6061,
											"end": 6218,
											"name": "PUSH [tag]",
											"value": "144"
										},
										{
											"begin": 6061,
											"end": 6218,
											"name": "JUMPI"
										},
										{
											"begin": 6122,
											"end": 6137,
											"name": "PUSH [tag]",
											"value": "145"
										},
										{
											"begin": 6129,
											"end": 6136,
											"name": "DUP2"
										},
										{
											"begin": 6122,
											"end": 6128,
											"name": "PUSH [tag]",
											"value": "43"
										},
										{
											"begin": 6122,
											"end": 6137,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 6122,
											"end": 6137,
											"name": "tag",
											"value": "145"
										},
										{
											"begin": 6122,
											"end": 6137,
											"name": "JUMPDEST"
										},
										{
											"begin": 6103,
											"end": 6110,
											"name": "PUSH",
											"value": "D"
										},
										{
											"begin": 6103,
											"end": 6119,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6111,
											"end": 6118,
											"name": "DUP4"
										},
										{
											"begin": 6103,
											"end": 6119,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6103,
											"end": 6119,
											"name": "AND"
										},
										{
											"begin": 6103,
											"end": 6119,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6103,
											"end": 6119,
											"name": "AND"
										},
										{
											"begin": 6103,
											"end": 6119,
											"name": "DUP2"
										},
										{
											"begin": 6103,
											"end": 6119,
											"name": "MSTORE"
										},
										{
											"begin": 6103,
											"end": 6119,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6103,
											"end": 6119,
											"name": "ADD"
										},
										{
											"begin": 6103,
											"end": 6119,
											"name": "SWAP1"
										},
										{
											"begin": 6103,
											"end": 6119,
											"name": "DUP2"
										},
										{
											"begin": 6103,
											"end": 6119,
											"name": "MSTORE"
										},
										{
											"begin": 6103,
											"end": 6119,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6103,
											"end": 6119,
											"name": "ADD"
										},
										{
											"begin": 6103,
											"end": 6119,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6103,
											"end": 6119,
											"name": "KECCAK256"
										},
										{
											"begin": 6103,
											"end": 6137,
											"name": "DUP2"
										},
										{
											"begin": 6103,
											"end": 6137,
											"name": "SWAP1"
										},
										{
											"begin": 6103,
											"end": 6137,
											"name": "SSTORE"
										},
										{
											"begin": 6103,
											"end": 6137,
											"name": "POP"
										},
										{
											"begin": 6186,
											"end": 6206,
											"name": "PUSH",
											"value": "B"
										},
										{
											"begin": 6186,
											"end": 6206,
											"name": "SLOAD"
										},
										{
											"begin": 6152,
											"end": 6174,
											"name": "PUSH",
											"value": "C"
										},
										{
											"begin": 6152,
											"end": 6183,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6175,
											"end": 6182,
											"name": "DUP4"
										},
										{
											"begin": 6152,
											"end": 6183,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6152,
											"end": 6183,
											"name": "AND"
										},
										{
											"begin": 6152,
											"end": 6183,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6152,
											"end": 6183,
											"name": "AND"
										},
										{
											"begin": 6152,
											"end": 6183,
											"name": "DUP2"
										},
										{
											"begin": 6152,
											"end": 6183,
											"name": "MSTORE"
										},
										{
											"begin": 6152,
											"end": 6183,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6152,
											"end": 6183,
											"name": "ADD"
										},
										{
											"begin": 6152,
											"end": 6183,
											"name": "SWAP1"
										},
										{
											"begin": 6152,
											"end": 6183,
											"name": "DUP2"
										},
										{
											"begin": 6152,
											"end": 6183,
											"name": "MSTORE"
										},
										{
											"begin": 6152,
											"end": 6183,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6152,
											"end": 6183,
											"name": "ADD"
										},
										{
											"begin": 6152,
											"end": 6183,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6152,
											"end": 6183,
											"name": "KECCAK256"
										},
										{
											"begin": 6152,
											"end": 6206,
											"name": "DUP2"
										},
										{
											"begin": 6152,
											"end": 6206,
											"name": "SWAP1"
										},
										{
											"begin": 6152,
											"end": 6206,
											"name": "SSTORE"
										},
										{
											"begin": 6152,
											"end": 6206,
											"name": "POP"
										},
										{
											"begin": 6061,
											"end": 6218,
											"name": "tag",
											"value": "144"
										},
										{
											"begin": 6061,
											"end": 6218,
											"name": "JUMPDEST"
										},
										{
											"begin": 3252,
											"end": 3253,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3243,
											"end": 3249,
											"name": "DUP4"
										},
										{
											"begin": 3243,
											"end": 3253,
											"name": "GT"
										},
										{
											"begin": 3235,
											"end": 3275,
											"name": "PUSH [tag]",
											"value": "147"
										},
										{
											"begin": 3235,
											"end": 3275,
											"name": "JUMPI"
										},
										{
											"begin": 3235,
											"end": 3275,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3235,
											"end": 3275,
											"name": "MLOAD"
										},
										{
											"begin": 3235,
											"end": 3275,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3235,
											"end": 3275,
											"name": "DUP2"
										},
										{
											"begin": 3235,
											"end": 3275,
											"name": "MSTORE"
										},
										{
											"begin": 3235,
											"end": 3275,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3235,
											"end": 3275,
											"name": "ADD"
										},
										{
											"begin": 3235,
											"end": 3275,
											"name": "DUP1"
										},
										{
											"begin": 3235,
											"end": 3275,
											"name": "DUP1"
										},
										{
											"begin": 3235,
											"end": 3275,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3235,
											"end": 3275,
											"name": "ADD"
										},
										{
											"begin": 3235,
											"end": 3275,
											"name": "DUP3"
										},
										{
											"begin": 3235,
											"end": 3275,
											"name": "DUP2"
										},
										{
											"begin": 3235,
											"end": 3275,
											"name": "SUB"
										},
										{
											"begin": 3235,
											"end": 3275,
											"name": "DUP3"
										},
										{
											"begin": 3235,
											"end": 3275,
											"name": "MSTORE"
										},
										{
											"begin": 3235,
											"end": 3275,
											"name": "PUSH",
											"value": "11"
										},
										{
											"begin": 3235,
											"end": 3275,
											"name": "DUP2"
										},
										{
											"begin": 3235,
											"end": 3275,
											"name": "MSTORE"
										},
										{
											"begin": 3235,
											"end": 3275,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3235,
											"end": 3275,
											"name": "ADD"
										},
										{
											"begin": 3235,
											"end": 3275,
											"name": "DUP1"
										},
										{
											"begin": 3235,
											"end": 3275,
											"name": "PUSH",
											"value": "43616E6E6F742077697468647261772030000000000000000000000000000000"
										},
										{
											"begin": 3235,
											"end": 3275,
											"name": "DUP2"
										},
										{
											"begin": 3235,
											"end": 3275,
											"name": "MSTORE"
										},
										{
											"begin": 3235,
											"end": 3275,
											"name": "POP"
										},
										{
											"begin": 3235,
											"end": 3275,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3235,
											"end": 3275,
											"name": "ADD"
										},
										{
											"begin": 3235,
											"end": 3275,
											"name": "SWAP2"
										},
										{
											"begin": 3235,
											"end": 3275,
											"name": "POP"
										},
										{
											"begin": 3235,
											"end": 3275,
											"name": "POP"
										},
										{
											"begin": 3235,
											"end": 3275,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3235,
											"end": 3275,
											"name": "MLOAD"
										},
										{
											"begin": 3235,
											"end": 3275,
											"name": "DUP1"
										},
										{
											"begin": 3235,
											"end": 3275,
											"name": "SWAP2"
										},
										{
											"begin": 3235,
											"end": 3275,
											"name": "SUB"
										},
										{
											"begin": 3235,
											"end": 3275,
											"name": "SWAP1"
										},
										{
											"begin": 3235,
											"end": 3275,
											"name": "REVERT"
										},
										{
											"begin": 3235,
											"end": 3275,
											"name": "tag",
											"value": "147"
										},
										{
											"begin": 3235,
											"end": 3275,
											"name": "JUMPDEST"
										},
										{
											"begin": 3301,
											"end": 3325,
											"name": "PUSH [tag]",
											"value": "148"
										},
										{
											"begin": 3318,
											"end": 3324,
											"name": "DUP4"
										},
										{
											"begin": 3301,
											"end": 3313,
											"name": "PUSH",
											"value": "E"
										},
										{
											"begin": 3301,
											"end": 3313,
											"name": "SLOAD"
										},
										{
											"begin": 3301,
											"end": 3317,
											"name": "PUSH [tag]",
											"value": "121"
										},
										{
											"begin": 3301,
											"end": 3317,
											"name": "SWAP1"
										},
										{
											"begin": 3301,
											"end": 3325,
											"name": "SWAP2"
										},
										{
											"begin": 3301,
											"end": 3325,
											"name": "SWAP1"
										},
										{
											"begin": 3301,
											"end": 3325,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 3301,
											"end": 3325,
											"name": "AND"
										},
										{
											"begin": 3301,
											"end": 3325,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3301,
											"end": 3325,
											"name": "tag",
											"value": "148"
										},
										{
											"begin": 3301,
											"end": 3325,
											"name": "JUMPDEST"
										},
										{
											"begin": 3286,
											"end": 3298,
											"name": "PUSH",
											"value": "E"
										},
										{
											"begin": 3286,
											"end": 3325,
											"name": "DUP2"
										},
										{
											"begin": 3286,
											"end": 3325,
											"name": "SWAP1"
										},
										{
											"begin": 3286,
											"end": 3325,
											"name": "SSTORE"
										},
										{
											"begin": 3286,
											"end": 3325,
											"name": "POP"
										},
										{
											"begin": 3360,
											"end": 3393,
											"name": "PUSH [tag]",
											"value": "149"
										},
										{
											"begin": 3386,
											"end": 3392,
											"name": "DUP4"
										},
										{
											"begin": 3360,
											"end": 3369,
											"name": "PUSH",
											"value": "F"
										},
										{
											"begin": 3360,
											"end": 3381,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3370,
											"end": 3380,
											"name": "CALLER"
										},
										{
											"begin": 3360,
											"end": 3381,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3360,
											"end": 3381,
											"name": "AND"
										},
										{
											"begin": 3360,
											"end": 3381,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3360,
											"end": 3381,
											"name": "AND"
										},
										{
											"begin": 3360,
											"end": 3381,
											"name": "DUP2"
										},
										{
											"begin": 3360,
											"end": 3381,
											"name": "MSTORE"
										},
										{
											"begin": 3360,
											"end": 3381,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3360,
											"end": 3381,
											"name": "ADD"
										},
										{
											"begin": 3360,
											"end": 3381,
											"name": "SWAP1"
										},
										{
											"begin": 3360,
											"end": 3381,
											"name": "DUP2"
										},
										{
											"begin": 3360,
											"end": 3381,
											"name": "MSTORE"
										},
										{
											"begin": 3360,
											"end": 3381,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3360,
											"end": 3381,
											"name": "ADD"
										},
										{
											"begin": 3360,
											"end": 3381,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3360,
											"end": 3381,
											"name": "KECCAK256"
										},
										{
											"begin": 3360,
											"end": 3381,
											"name": "SLOAD"
										},
										{
											"begin": 3360,
											"end": 3385,
											"name": "PUSH [tag]",
											"value": "121"
										},
										{
											"begin": 3360,
											"end": 3385,
											"name": "SWAP1"
										},
										{
											"begin": 3360,
											"end": 3393,
											"name": "SWAP2"
										},
										{
											"begin": 3360,
											"end": 3393,
											"name": "SWAP1"
										},
										{
											"begin": 3360,
											"end": 3393,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 3360,
											"end": 3393,
											"name": "AND"
										},
										{
											"begin": 3360,
											"end": 3393,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3360,
											"end": 3393,
											"name": "tag",
											"value": "149"
										},
										{
											"begin": 3360,
											"end": 3393,
											"name": "JUMPDEST"
										},
										{
											"begin": 3336,
											"end": 3345,
											"name": "PUSH",
											"value": "F"
										},
										{
											"begin": 3336,
											"end": 3357,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3346,
											"end": 3356,
											"name": "CALLER"
										},
										{
											"begin": 3336,
											"end": 3357,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3336,
											"end": 3357,
											"name": "AND"
										},
										{
											"begin": 3336,
											"end": 3357,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3336,
											"end": 3357,
											"name": "AND"
										},
										{
											"begin": 3336,
											"end": 3357,
											"name": "DUP2"
										},
										{
											"begin": 3336,
											"end": 3357,
											"name": "MSTORE"
										},
										{
											"begin": 3336,
											"end": 3357,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3336,
											"end": 3357,
											"name": "ADD"
										},
										{
											"begin": 3336,
											"end": 3357,
											"name": "SWAP1"
										},
										{
											"begin": 3336,
											"end": 3357,
											"name": "DUP2"
										},
										{
											"begin": 3336,
											"end": 3357,
											"name": "MSTORE"
										},
										{
											"begin": 3336,
											"end": 3357,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3336,
											"end": 3357,
											"name": "ADD"
										},
										{
											"begin": 3336,
											"end": 3357,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3336,
											"end": 3357,
											"name": "KECCAK256"
										},
										{
											"begin": 3336,
											"end": 3393,
											"name": "DUP2"
										},
										{
											"begin": 3336,
											"end": 3393,
											"name": "SWAP1"
										},
										{
											"begin": 3336,
											"end": 3393,
											"name": "SSTORE"
										},
										{
											"begin": 3336,
											"end": 3393,
											"name": "POP"
										},
										{
											"begin": 3404,
											"end": 3449,
											"name": "PUSH [tag]",
											"value": "150"
										},
										{
											"begin": 3430,
											"end": 3440,
											"name": "CALLER"
										},
										{
											"begin": 3442,
											"end": 3448,
											"name": "DUP5"
										},
										{
											"begin": 3404,
											"end": 3416,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 3404,
											"end": 3416,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3404,
											"end": 3416,
											"name": "SWAP1"
										},
										{
											"begin": 3404,
											"end": 3416,
											"name": "SLOAD"
										},
										{
											"begin": 3404,
											"end": 3416,
											"name": "SWAP1"
										},
										{
											"begin": 3404,
											"end": 3416,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 3404,
											"end": 3416,
											"name": "EXP"
										},
										{
											"begin": 3404,
											"end": 3416,
											"name": "SWAP1"
										},
										{
											"begin": 3404,
											"end": 3416,
											"name": "DIV"
										},
										{
											"begin": 3404,
											"end": 3416,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3404,
											"end": 3416,
											"name": "AND"
										},
										{
											"begin": 3404,
											"end": 3429,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3404,
											"end": 3429,
											"name": "AND"
										},
										{
											"begin": 3404,
											"end": 3429,
											"name": "PUSH [tag]",
											"value": "151"
										},
										{
											"begin": 3404,
											"end": 3429,
											"name": "SWAP1"
										},
										{
											"begin": 3404,
											"end": 3449,
											"name": "SWAP3"
										},
										{
											"begin": 3404,
											"end": 3449,
											"name": "SWAP2"
										},
										{
											"begin": 3404,
											"end": 3449,
											"name": "SWAP1"
										},
										{
											"begin": 3404,
											"end": 3449,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 3404,
											"end": 3449,
											"name": "AND"
										},
										{
											"begin": 3404,
											"end": 3449,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3404,
											"end": 3449,
											"name": "tag",
											"value": "150"
										},
										{
											"begin": 3404,
											"end": 3449,
											"name": "JUMPDEST"
										},
										{
											"begin": 3475,
											"end": 3485,
											"name": "CALLER"
										},
										{
											"begin": 3465,
											"end": 3494,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3465,
											"end": 3494,
											"name": "AND"
										},
										{
											"begin": 3465,
											"end": 3494,
											"name": "PUSH",
											"value": "7084F5476618D8E60B11EF0D7D3F06914655ADB8793E28FF7F018D4C76D505D5"
										},
										{
											"begin": 3487,
											"end": 3493,
											"name": "DUP5"
										},
										{
											"begin": 3465,
											"end": 3494,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3465,
											"end": 3494,
											"name": "MLOAD"
										},
										{
											"begin": 3465,
											"end": 3494,
											"name": "DUP1"
										},
										{
											"begin": 3465,
											"end": 3494,
											"name": "DUP3"
										},
										{
											"begin": 3465,
											"end": 3494,
											"name": "DUP2"
										},
										{
											"begin": 3465,
											"end": 3494,
											"name": "MSTORE"
										},
										{
											"begin": 3465,
											"end": 3494,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3465,
											"end": 3494,
											"name": "ADD"
										},
										{
											"begin": 3465,
											"end": 3494,
											"name": "SWAP2"
										},
										{
											"begin": 3465,
											"end": 3494,
											"name": "POP"
										},
										{
											"begin": 3465,
											"end": 3494,
											"name": "POP"
										},
										{
											"begin": 3465,
											"end": 3494,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3465,
											"end": 3494,
											"name": "MLOAD"
										},
										{
											"begin": 3465,
											"end": 3494,
											"name": "DUP1"
										},
										{
											"begin": 3465,
											"end": 3494,
											"name": "SWAP2"
										},
										{
											"begin": 3465,
											"end": 3494,
											"name": "SUB"
										},
										{
											"begin": 3465,
											"end": 3494,
											"name": "SWAP1"
										},
										{
											"begin": 3465,
											"end": 3494,
											"name": "LOG2"
										},
										{
											"begin": 1409,
											"end": 1410,
											"name": "POP"
										},
										{
											"begin": 1445,
											"end": 1458,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 1445,
											"end": 1458,
											"name": "SLOAD"
										},
										{
											"begin": 1429,
											"end": 1441,
											"name": "DUP2"
										},
										{
											"begin": 1429,
											"end": 1458,
											"name": "EQ"
										},
										{
											"begin": 1421,
											"end": 1494,
											"name": "PUSH [tag]",
											"value": "152"
										},
										{
											"begin": 1421,
											"end": 1494,
											"name": "JUMPI"
										},
										{
											"begin": 1421,
											"end": 1494,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1421,
											"end": 1494,
											"name": "MLOAD"
										},
										{
											"begin": 1421,
											"end": 1494,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1421,
											"end": 1494,
											"name": "DUP2"
										},
										{
											"begin": 1421,
											"end": 1494,
											"name": "MSTORE"
										},
										{
											"begin": 1421,
											"end": 1494,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1421,
											"end": 1494,
											"name": "ADD"
										},
										{
											"begin": 1421,
											"end": 1494,
											"name": "DUP1"
										},
										{
											"begin": 1421,
											"end": 1494,
											"name": "DUP1"
										},
										{
											"begin": 1421,
											"end": 1494,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1421,
											"end": 1494,
											"name": "ADD"
										},
										{
											"begin": 1421,
											"end": 1494,
											"name": "DUP3"
										},
										{
											"begin": 1421,
											"end": 1494,
											"name": "DUP2"
										},
										{
											"begin": 1421,
											"end": 1494,
											"name": "SUB"
										},
										{
											"begin": 1421,
											"end": 1494,
											"name": "DUP3"
										},
										{
											"begin": 1421,
											"end": 1494,
											"name": "MSTORE"
										},
										{
											"begin": 1421,
											"end": 1494,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 1421,
											"end": 1494,
											"name": "DUP2"
										},
										{
											"begin": 1421,
											"end": 1494,
											"name": "MSTORE"
										},
										{
											"begin": 1421,
											"end": 1494,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1421,
											"end": 1494,
											"name": "ADD"
										},
										{
											"begin": 1421,
											"end": 1494,
											"name": "DUP1"
										},
										{
											"begin": 1421,
											"end": 1494,
											"name": "PUSH",
											"value": "5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
										},
										{
											"begin": 1421,
											"end": 1494,
											"name": "DUP2"
										},
										{
											"begin": 1421,
											"end": 1494,
											"name": "MSTORE"
										},
										{
											"begin": 1421,
											"end": 1494,
											"name": "POP"
										},
										{
											"begin": 1421,
											"end": 1494,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1421,
											"end": 1494,
											"name": "ADD"
										},
										{
											"begin": 1421,
											"end": 1494,
											"name": "SWAP2"
										},
										{
											"begin": 1421,
											"end": 1494,
											"name": "POP"
										},
										{
											"begin": 1421,
											"end": 1494,
											"name": "POP"
										},
										{
											"begin": 1421,
											"end": 1494,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1421,
											"end": 1494,
											"name": "MLOAD"
										},
										{
											"begin": 1421,
											"end": 1494,
											"name": "DUP1"
										},
										{
											"begin": 1421,
											"end": 1494,
											"name": "SWAP2"
										},
										{
											"begin": 1421,
											"end": 1494,
											"name": "SUB"
										},
										{
											"begin": 1421,
											"end": 1494,
											"name": "SWAP1"
										},
										{
											"begin": 1421,
											"end": 1494,
											"name": "REVERT"
										},
										{
											"begin": 1421,
											"end": 1494,
											"name": "tag",
											"value": "152"
										},
										{
											"begin": 1421,
											"end": 1494,
											"name": "JUMPDEST"
										},
										{
											"begin": 3145,
											"end": 3502,
											"name": "POP"
										},
										{
											"begin": 3145,
											"end": 3502,
											"name": "POP"
										},
										{
											"begin": 3145,
											"end": 3502,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 898,
											"end": 937,
											"name": "tag",
											"value": "64"
										},
										{
											"begin": 898,
											"end": 937,
											"name": "JUMPDEST"
										},
										{
											"begin": 898,
											"end": 937,
											"name": "PUSH",
											"value": "9"
										},
										{
											"begin": 898,
											"end": 937,
											"name": "SLOAD"
										},
										{
											"begin": 898,
											"end": 937,
											"name": "DUP2"
										},
										{
											"begin": 898,
											"end": 937,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 3986,
											"end": 5069,
											"name": "tag",
											"value": "67"
										},
										{
											"begin": 3986,
											"end": 5069,
											"name": "JUMPDEST"
										},
										{
											"begin": 381,
											"end": 400,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 381,
											"end": 400,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 381,
											"end": 400,
											"name": "SWAP1"
										},
										{
											"begin": 381,
											"end": 400,
											"name": "SLOAD"
										},
										{
											"begin": 381,
											"end": 400,
											"name": "SWAP1"
										},
										{
											"begin": 381,
											"end": 400,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 381,
											"end": 400,
											"name": "EXP"
										},
										{
											"begin": 381,
											"end": 400,
											"name": "SWAP1"
										},
										{
											"begin": 381,
											"end": 400,
											"name": "DIV"
										},
										{
											"begin": 381,
											"end": 400,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 381,
											"end": 400,
											"name": "AND"
										},
										{
											"begin": 367,
											"end": 400,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 367,
											"end": 400,
											"name": "AND"
										},
										{
											"begin": 367,
											"end": 377,
											"name": "CALLER"
										},
										{
											"begin": 367,
											"end": 400,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 367,
											"end": 400,
											"name": "AND"
										},
										{
											"begin": 367,
											"end": 400,
											"name": "EQ"
										},
										{
											"begin": 359,
											"end": 447,
											"name": "PUSH [tag]",
											"value": "154"
										},
										{
											"begin": 359,
											"end": 447,
											"name": "JUMPI"
										},
										{
											"begin": 359,
											"end": 447,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 359,
											"end": 447,
											"name": "MLOAD"
										},
										{
											"begin": 359,
											"end": 447,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 359,
											"end": 447,
											"name": "DUP2"
										},
										{
											"begin": 359,
											"end": 447,
											"name": "MSTORE"
										},
										{
											"begin": 359,
											"end": 447,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 359,
											"end": 447,
											"name": "ADD"
										},
										{
											"begin": 359,
											"end": 447,
											"name": "DUP1"
										},
										{
											"begin": 359,
											"end": 447,
											"name": "DUP1"
										},
										{
											"begin": 359,
											"end": 447,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 359,
											"end": 447,
											"name": "ADD"
										},
										{
											"begin": 359,
											"end": 447,
											"name": "DUP3"
										},
										{
											"begin": 359,
											"end": 447,
											"name": "DUP2"
										},
										{
											"begin": 359,
											"end": 447,
											"name": "SUB"
										},
										{
											"begin": 359,
											"end": 447,
											"name": "DUP3"
										},
										{
											"begin": 359,
											"end": 447,
											"name": "MSTORE"
										},
										{
											"begin": 359,
											"end": 447,
											"name": "PUSH",
											"value": "2A"
										},
										{
											"begin": 359,
											"end": 447,
											"name": "DUP2"
										},
										{
											"begin": 359,
											"end": 447,
											"name": "MSTORE"
										},
										{
											"begin": 359,
											"end": 447,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 359,
											"end": 447,
											"name": "ADD"
										},
										{
											"begin": 359,
											"end": 447,
											"name": "DUP1"
										},
										{
											"begin": 359,
											"end": 447,
											"name": "PUSH data",
											"value": "D50B095422F4CBFCB4C90FBD4D55AAF0967BF1D90E94BB6A1AE9FC4EE7E733DE"
										},
										{
											"begin": 359,
											"end": 447,
											"name": "PUSH",
											"value": "2A"
										},
										{
											"begin": 359,
											"end": 447,
											"name": "SWAP2"
										},
										{
											"begin": 359,
											"end": 447,
											"name": "CODECOPY"
										},
										{
											"begin": 359,
											"end": 447,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 359,
											"end": 447,
											"name": "ADD"
										},
										{
											"begin": 359,
											"end": 447,
											"name": "SWAP2"
										},
										{
											"begin": 359,
											"end": 447,
											"name": "POP"
										},
										{
											"begin": 359,
											"end": 447,
											"name": "POP"
										},
										{
											"begin": 359,
											"end": 447,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 359,
											"end": 447,
											"name": "MLOAD"
										},
										{
											"begin": 359,
											"end": 447,
											"name": "DUP1"
										},
										{
											"begin": 359,
											"end": 447,
											"name": "SWAP2"
										},
										{
											"begin": 359,
											"end": 447,
											"name": "SUB"
										},
										{
											"begin": 359,
											"end": 447,
											"name": "SWAP1"
										},
										{
											"begin": 359,
											"end": 447,
											"name": "REVERT"
										},
										{
											"begin": 359,
											"end": 447,
											"name": "tag",
											"value": "154"
										},
										{
											"begin": 359,
											"end": 447,
											"name": "JUMPDEST"
										},
										{
											"begin": 4084,
											"end": 4085,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5980,
											"end": 5996,
											"name": "PUSH [tag]",
											"value": "156"
										},
										{
											"begin": 5980,
											"end": 5994,
											"name": "PUSH [tag]",
											"value": "106"
										},
										{
											"begin": 5980,
											"end": 5996,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5980,
											"end": 5996,
											"name": "tag",
											"value": "156"
										},
										{
											"begin": 5980,
											"end": 5996,
											"name": "JUMPDEST"
										},
										{
											"begin": 5957,
											"end": 5977,
											"name": "PUSH",
											"value": "B"
										},
										{
											"begin": 5957,
											"end": 5996,
											"name": "DUP2"
										},
										{
											"begin": 5957,
											"end": 5996,
											"name": "SWAP1"
										},
										{
											"begin": 5957,
											"end": 5996,
											"name": "SSTORE"
										},
										{
											"begin": 5957,
											"end": 5996,
											"name": "POP"
										},
										{
											"begin": 6024,
											"end": 6050,
											"name": "PUSH [tag]",
											"value": "157"
										},
										{
											"begin": 6024,
											"end": 6048,
											"name": "PUSH [tag]",
											"value": "86"
										},
										{
											"begin": 6024,
											"end": 6050,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 6024,
											"end": 6050,
											"name": "tag",
											"value": "157"
										},
										{
											"begin": 6024,
											"end": 6050,
											"name": "JUMPDEST"
										},
										{
											"begin": 6007,
											"end": 6021,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 6007,
											"end": 6050,
											"name": "DUP2"
										},
										{
											"begin": 6007,
											"end": 6050,
											"name": "SWAP1"
										},
										{
											"begin": 6007,
											"end": 6050,
											"name": "SSTORE"
										},
										{
											"begin": 6007,
											"end": 6050,
											"name": "POP"
										},
										{
											"begin": 6084,
											"end": 6085,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6065,
											"end": 6086,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6065,
											"end": 6086,
											"name": "AND"
										},
										{
											"begin": 6065,
											"end": 6072,
											"name": "DUP2"
										},
										{
											"begin": 6065,
											"end": 6086,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6065,
											"end": 6086,
											"name": "AND"
										},
										{
											"begin": 6065,
											"end": 6086,
											"name": "EQ"
										},
										{
											"begin": 6061,
											"end": 6218,
											"name": "PUSH [tag]",
											"value": "158"
										},
										{
											"begin": 6061,
											"end": 6218,
											"name": "JUMPI"
										},
										{
											"begin": 6122,
											"end": 6137,
											"name": "PUSH [tag]",
											"value": "159"
										},
										{
											"begin": 6129,
											"end": 6136,
											"name": "DUP2"
										},
										{
											"begin": 6122,
											"end": 6128,
											"name": "PUSH [tag]",
											"value": "43"
										},
										{
											"begin": 6122,
											"end": 6137,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 6122,
											"end": 6137,
											"name": "tag",
											"value": "159"
										},
										{
											"begin": 6122,
											"end": 6137,
											"name": "JUMPDEST"
										},
										{
											"begin": 6103,
											"end": 6110,
											"name": "PUSH",
											"value": "D"
										},
										{
											"begin": 6103,
											"end": 6119,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6111,
											"end": 6118,
											"name": "DUP4"
										},
										{
											"begin": 6103,
											"end": 6119,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6103,
											"end": 6119,
											"name": "AND"
										},
										{
											"begin": 6103,
											"end": 6119,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6103,
											"end": 6119,
											"name": "AND"
										},
										{
											"begin": 6103,
											"end": 6119,
											"name": "DUP2"
										},
										{
											"begin": 6103,
											"end": 6119,
											"name": "MSTORE"
										},
										{
											"begin": 6103,
											"end": 6119,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6103,
											"end": 6119,
											"name": "ADD"
										},
										{
											"begin": 6103,
											"end": 6119,
											"name": "SWAP1"
										},
										{
											"begin": 6103,
											"end": 6119,
											"name": "DUP2"
										},
										{
											"begin": 6103,
											"end": 6119,
											"name": "MSTORE"
										},
										{
											"begin": 6103,
											"end": 6119,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6103,
											"end": 6119,
											"name": "ADD"
										},
										{
											"begin": 6103,
											"end": 6119,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6103,
											"end": 6119,
											"name": "KECCAK256"
										},
										{
											"begin": 6103,
											"end": 6137,
											"name": "DUP2"
										},
										{
											"begin": 6103,
											"end": 6137,
											"name": "SWAP1"
										},
										{
											"begin": 6103,
											"end": 6137,
											"name": "SSTORE"
										},
										{
											"begin": 6103,
											"end": 6137,
											"name": "POP"
										},
										{
											"begin": 6186,
											"end": 6206,
											"name": "PUSH",
											"value": "B"
										},
										{
											"begin": 6186,
											"end": 6206,
											"name": "SLOAD"
										},
										{
											"begin": 6152,
											"end": 6174,
											"name": "PUSH",
											"value": "C"
										},
										{
											"begin": 6152,
											"end": 6183,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6175,
											"end": 6182,
											"name": "DUP4"
										},
										{
											"begin": 6152,
											"end": 6183,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6152,
											"end": 6183,
											"name": "AND"
										},
										{
											"begin": 6152,
											"end": 6183,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6152,
											"end": 6183,
											"name": "AND"
										},
										{
											"begin": 6152,
											"end": 6183,
											"name": "DUP2"
										},
										{
											"begin": 6152,
											"end": 6183,
											"name": "MSTORE"
										},
										{
											"begin": 6152,
											"end": 6183,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6152,
											"end": 6183,
											"name": "ADD"
										},
										{
											"begin": 6152,
											"end": 6183,
											"name": "SWAP1"
										},
										{
											"begin": 6152,
											"end": 6183,
											"name": "DUP2"
										},
										{
											"begin": 6152,
											"end": 6183,
											"name": "MSTORE"
										},
										{
											"begin": 6152,
											"end": 6183,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6152,
											"end": 6183,
											"name": "ADD"
										},
										{
											"begin": 6152,
											"end": 6183,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6152,
											"end": 6183,
											"name": "KECCAK256"
										},
										{
											"begin": 6152,
											"end": 6206,
											"name": "DUP2"
										},
										{
											"begin": 6152,
											"end": 6206,
											"name": "SWAP1"
										},
										{
											"begin": 6152,
											"end": 6206,
											"name": "SSTORE"
										},
										{
											"begin": 6152,
											"end": 6206,
											"name": "POP"
										},
										{
											"begin": 6061,
											"end": 6218,
											"name": "tag",
											"value": "158"
										},
										{
											"begin": 6061,
											"end": 6218,
											"name": "JUMPDEST"
										},
										{
											"begin": 4122,
											"end": 4134,
											"name": "PUSH",
											"value": "7"
										},
										{
											"begin": 4122,
											"end": 4134,
											"name": "SLOAD"
										},
										{
											"begin": 4103,
											"end": 4118,
											"name": "TIMESTAMP"
										},
										{
											"begin": 4103,
											"end": 4134,
											"name": "LT"
										},
										{
											"begin": 4099,
											"end": 4417,
											"name": "PUSH [tag]",
											"value": "161"
										},
										{
											"begin": 4099,
											"end": 4417,
											"name": "JUMPI"
										},
										{
											"begin": 4164,
											"end": 4191,
											"name": "PUSH [tag]",
											"value": "162"
										},
										{
											"begin": 4175,
											"end": 4190,
											"name": "PUSH",
											"value": "9"
										},
										{
											"begin": 4175,
											"end": 4190,
											"name": "SLOAD"
										},
										{
											"begin": 4164,
											"end": 4170,
											"name": "DUP4"
										},
										{
											"begin": 4164,
											"end": 4174,
											"name": "PUSH [tag]",
											"value": "123"
										},
										{
											"begin": 4164,
											"end": 4174,
											"name": "SWAP1"
										},
										{
											"begin": 4164,
											"end": 4191,
											"name": "SWAP2"
										},
										{
											"begin": 4164,
											"end": 4191,
											"name": "SWAP1"
										},
										{
											"begin": 4164,
											"end": 4191,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 4164,
											"end": 4191,
											"name": "AND"
										},
										{
											"begin": 4164,
											"end": 4191,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4164,
											"end": 4191,
											"name": "tag",
											"value": "162"
										},
										{
											"begin": 4164,
											"end": 4191,
											"name": "JUMPDEST"
										},
										{
											"begin": 4151,
											"end": 4161,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 4151,
											"end": 4191,
											"name": "DUP2"
										},
										{
											"begin": 4151,
											"end": 4191,
											"name": "SWAP1"
										},
										{
											"begin": 4151,
											"end": 4191,
											"name": "SSTORE"
										},
										{
											"begin": 4151,
											"end": 4191,
											"name": "POP"
										},
										{
											"begin": 4099,
											"end": 4417,
											"name": "PUSH [tag]",
											"value": "163"
										},
										{
											"begin": 4099,
											"end": 4417,
											"name": "JUMP"
										},
										{
											"begin": 4099,
											"end": 4417,
											"name": "tag",
											"value": "161"
										},
										{
											"begin": 4099,
											"end": 4417,
											"name": "JUMPDEST"
										},
										{
											"begin": 4224,
											"end": 4241,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4244,
											"end": 4277,
											"name": "PUSH [tag]",
											"value": "164"
										},
										{
											"begin": 4261,
											"end": 4276,
											"name": "TIMESTAMP"
										},
										{
											"begin": 4244,
											"end": 4256,
											"name": "PUSH",
											"value": "7"
										},
										{
											"begin": 4244,
											"end": 4256,
											"name": "SLOAD"
										},
										{
											"begin": 4244,
											"end": 4260,
											"name": "PUSH [tag]",
											"value": "121"
										},
										{
											"begin": 4244,
											"end": 4260,
											"name": "SWAP1"
										},
										{
											"begin": 4244,
											"end": 4277,
											"name": "SWAP2"
										},
										{
											"begin": 4244,
											"end": 4277,
											"name": "SWAP1"
										},
										{
											"begin": 4244,
											"end": 4277,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 4244,
											"end": 4277,
											"name": "AND"
										},
										{
											"begin": 4244,
											"end": 4277,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4244,
											"end": 4277,
											"name": "tag",
											"value": "164"
										},
										{
											"begin": 4244,
											"end": 4277,
											"name": "JUMPDEST"
										},
										{
											"begin": 4224,
											"end": 4277,
											"name": "SWAP1"
										},
										{
											"begin": 4224,
											"end": 4277,
											"name": "POP"
										},
										{
											"begin": 4292,
											"end": 4308,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4311,
											"end": 4336,
											"name": "PUSH [tag]",
											"value": "165"
										},
										{
											"begin": 4325,
											"end": 4335,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 4325,
											"end": 4335,
											"name": "SLOAD"
										},
										{
											"begin": 4311,
											"end": 4320,
											"name": "DUP4"
										},
										{
											"begin": 4311,
											"end": 4324,
											"name": "PUSH [tag]",
											"value": "122"
										},
										{
											"begin": 4311,
											"end": 4324,
											"name": "SWAP1"
										},
										{
											"begin": 4311,
											"end": 4336,
											"name": "SWAP2"
										},
										{
											"begin": 4311,
											"end": 4336,
											"name": "SWAP1"
										},
										{
											"begin": 4311,
											"end": 4336,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 4311,
											"end": 4336,
											"name": "AND"
										},
										{
											"begin": 4311,
											"end": 4336,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4311,
											"end": 4336,
											"name": "tag",
											"value": "165"
										},
										{
											"begin": 4311,
											"end": 4336,
											"name": "JUMPDEST"
										},
										{
											"begin": 4292,
											"end": 4336,
											"name": "SWAP1"
										},
										{
											"begin": 4292,
											"end": 4336,
											"name": "POP"
										},
										{
											"begin": 4364,
											"end": 4405,
											"name": "PUSH [tag]",
											"value": "166"
										},
										{
											"begin": 4389,
											"end": 4404,
											"name": "PUSH",
											"value": "9"
										},
										{
											"begin": 4389,
											"end": 4404,
											"name": "SLOAD"
										},
										{
											"begin": 4364,
											"end": 4384,
											"name": "PUSH [tag]",
											"value": "167"
										},
										{
											"begin": 4375,
											"end": 4383,
											"name": "DUP4"
										},
										{
											"begin": 4364,
											"end": 4370,
											"name": "DUP8"
										},
										{
											"begin": 4364,
											"end": 4374,
											"name": "PUSH [tag]",
											"value": "124"
										},
										{
											"begin": 4364,
											"end": 4374,
											"name": "SWAP1"
										},
										{
											"begin": 4364,
											"end": 4384,
											"name": "SWAP2"
										},
										{
											"begin": 4364,
											"end": 4384,
											"name": "SWAP1"
										},
										{
											"begin": 4364,
											"end": 4384,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 4364,
											"end": 4384,
											"name": "AND"
										},
										{
											"begin": 4364,
											"end": 4384,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4364,
											"end": 4384,
											"name": "tag",
											"value": "167"
										},
										{
											"begin": 4364,
											"end": 4384,
											"name": "JUMPDEST"
										},
										{
											"begin": 4364,
											"end": 4388,
											"name": "PUSH [tag]",
											"value": "123"
										},
										{
											"begin": 4364,
											"end": 4388,
											"name": "SWAP1"
										},
										{
											"begin": 4364,
											"end": 4405,
											"name": "SWAP2"
										},
										{
											"begin": 4364,
											"end": 4405,
											"name": "SWAP1"
										},
										{
											"begin": 4364,
											"end": 4405,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 4364,
											"end": 4405,
											"name": "AND"
										},
										{
											"begin": 4364,
											"end": 4405,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4364,
											"end": 4405,
											"name": "tag",
											"value": "166"
										},
										{
											"begin": 4364,
											"end": 4405,
											"name": "JUMPDEST"
										},
										{
											"begin": 4351,
											"end": 4361,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 4351,
											"end": 4405,
											"name": "DUP2"
										},
										{
											"begin": 4351,
											"end": 4405,
											"name": "SWAP1"
										},
										{
											"begin": 4351,
											"end": 4405,
											"name": "SSTORE"
										},
										{
											"begin": 4351,
											"end": 4405,
											"name": "POP"
										},
										{
											"begin": 4099,
											"end": 4417,
											"name": "POP"
										},
										{
											"begin": 4099,
											"end": 4417,
											"name": "POP"
										},
										{
											"begin": 4099,
											"end": 4417,
											"name": "tag",
											"value": "163"
										},
										{
											"begin": 4099,
											"end": 4417,
											"name": "JUMPDEST"
										},
										{
											"begin": 4777,
											"end": 4789,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4792,
											"end": 4804,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 4792,
											"end": 4804,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 4792,
											"end": 4804,
											"name": "SWAP1"
										},
										{
											"begin": 4792,
											"end": 4804,
											"name": "SLOAD"
										},
										{
											"begin": 4792,
											"end": 4804,
											"name": "SWAP1"
										},
										{
											"begin": 4792,
											"end": 4804,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 4792,
											"end": 4804,
											"name": "EXP"
										},
										{
											"begin": 4792,
											"end": 4804,
											"name": "SWAP1"
										},
										{
											"begin": 4792,
											"end": 4804,
											"name": "DIV"
										},
										{
											"begin": 4792,
											"end": 4804,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4792,
											"end": 4804,
											"name": "AND"
										},
										{
											"begin": 4792,
											"end": 4814,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4792,
											"end": 4814,
											"name": "AND"
										},
										{
											"begin": 4792,
											"end": 4814,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": 4823,
											"end": 4827,
											"name": "ADDRESS"
										},
										{
											"begin": 4792,
											"end": 4829,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4792,
											"end": 4829,
											"name": "MLOAD"
										},
										{
											"begin": 4792,
											"end": 4829,
											"name": "DUP3"
										},
										{
											"begin": 4792,
											"end": 4829,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 4792,
											"end": 4829,
											"name": "AND"
										},
										{
											"begin": 4792,
											"end": 4829,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 4792,
											"end": 4829,
											"name": "SHL"
										},
										{
											"begin": 4792,
											"end": 4829,
											"name": "DUP2"
										},
										{
											"begin": 4792,
											"end": 4829,
											"name": "MSTORE"
										},
										{
											"begin": 4792,
											"end": 4829,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 4792,
											"end": 4829,
											"name": "ADD"
										},
										{
											"begin": 4792,
											"end": 4829,
											"name": "DUP1"
										},
										{
											"begin": 4792,
											"end": 4829,
											"name": "DUP3"
										},
										{
											"begin": 4792,
											"end": 4829,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4792,
											"end": 4829,
											"name": "AND"
										},
										{
											"begin": 4792,
											"end": 4829,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4792,
											"end": 4829,
											"name": "AND"
										},
										{
											"begin": 4792,
											"end": 4829,
											"name": "DUP2"
										},
										{
											"begin": 4792,
											"end": 4829,
											"name": "MSTORE"
										},
										{
											"begin": 4792,
											"end": 4829,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4792,
											"end": 4829,
											"name": "ADD"
										},
										{
											"begin": 4792,
											"end": 4829,
											"name": "SWAP2"
										},
										{
											"begin": 4792,
											"end": 4829,
											"name": "POP"
										},
										{
											"begin": 4792,
											"end": 4829,
											"name": "POP"
										},
										{
											"begin": 4792,
											"end": 4829,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4792,
											"end": 4829,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4792,
											"end": 4829,
											"name": "MLOAD"
										},
										{
											"begin": 4792,
											"end": 4829,
											"name": "DUP1"
										},
										{
											"begin": 4792,
											"end": 4829,
											"name": "DUP4"
										},
										{
											"begin": 4792,
											"end": 4829,
											"name": "SUB"
										},
										{
											"begin": 4792,
											"end": 4829,
											"name": "DUP2"
										},
										{
											"begin": 4792,
											"end": 4829,
											"name": "DUP7"
										},
										{
											"begin": 4792,
											"end": 4829,
											"name": "DUP1"
										},
										{
											"begin": 4792,
											"end": 4829,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 4792,
											"end": 4829,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "168"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "168"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 4792,
											"end": 4829,
											"name": "POP"
										},
										{
											"begin": 4792,
											"end": 4829,
											"name": "GAS"
										},
										{
											"begin": 4792,
											"end": 4829,
											"name": "STATICCALL"
										},
										{
											"begin": 4792,
											"end": 4829,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "169"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "169"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 4792,
											"end": 4829,
											"name": "POP"
										},
										{
											"begin": 4792,
											"end": 4829,
											"name": "POP"
										},
										{
											"begin": 4792,
											"end": 4829,
											"name": "POP"
										},
										{
											"begin": 4792,
											"end": 4829,
											"name": "POP"
										},
										{
											"begin": 4792,
											"end": 4829,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4792,
											"end": 4829,
											"name": "MLOAD"
										},
										{
											"begin": 4792,
											"end": 4829,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "170"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "170"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 4792,
											"end": 4829,
											"name": "DUP2"
										},
										{
											"begin": 4792,
											"end": 4829,
											"name": "ADD"
										},
										{
											"begin": 4792,
											"end": 4829,
											"name": "SWAP1"
										},
										{
											"begin": 4792,
											"end": 4829,
											"name": "DUP1"
										},
										{
											"begin": 4792,
											"end": 4829,
											"name": "DUP1"
										},
										{
											"begin": 4792,
											"end": 4829,
											"name": "MLOAD"
										},
										{
											"begin": 4792,
											"end": 4829,
											"name": "SWAP1"
										},
										{
											"begin": 4792,
											"end": 4829,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4792,
											"end": 4829,
											"name": "ADD"
										},
										{
											"begin": 4792,
											"end": 4829,
											"name": "SWAP1"
										},
										{
											"begin": 4792,
											"end": 4829,
											"name": "SWAP3"
										},
										{
											"begin": 4792,
											"end": 4829,
											"name": "SWAP2"
										},
										{
											"begin": 4792,
											"end": 4829,
											"name": "SWAP1"
										},
										{
											"begin": 4792,
											"end": 4829,
											"name": "POP"
										},
										{
											"begin": 4792,
											"end": 4829,
											"name": "POP"
										},
										{
											"begin": 4792,
											"end": 4829,
											"name": "POP"
										},
										{
											"begin": 4777,
											"end": 4829,
											"name": "SWAP1"
										},
										{
											"begin": 4777,
											"end": 4829,
											"name": "POP"
										},
										{
											"begin": 4862,
											"end": 4890,
											"name": "PUSH [tag]",
											"value": "171"
										},
										{
											"begin": 4874,
											"end": 4889,
											"name": "PUSH",
											"value": "9"
										},
										{
											"begin": 4874,
											"end": 4889,
											"name": "SLOAD"
										},
										{
											"begin": 4862,
											"end": 4869,
											"name": "DUP3"
										},
										{
											"begin": 4862,
											"end": 4873,
											"name": "PUSH [tag]",
											"value": "123"
										},
										{
											"begin": 4862,
											"end": 4873,
											"name": "SWAP1"
										},
										{
											"begin": 4862,
											"end": 4890,
											"name": "SWAP2"
										},
										{
											"begin": 4862,
											"end": 4890,
											"name": "SWAP1"
										},
										{
											"begin": 4862,
											"end": 4890,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 4862,
											"end": 4890,
											"name": "AND"
										},
										{
											"begin": 4862,
											"end": 4890,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4862,
											"end": 4890,
											"name": "tag",
											"value": "171"
										},
										{
											"begin": 4862,
											"end": 4890,
											"name": "JUMPDEST"
										},
										{
											"begin": 4848,
											"end": 4858,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 4848,
											"end": 4858,
											"name": "SLOAD"
										},
										{
											"begin": 4848,
											"end": 4890,
											"name": "GT"
										},
										{
											"begin": 4848,
											"end": 4890,
											"name": "ISZERO"
										},
										{
											"begin": 4840,
											"end": 4919,
											"name": "PUSH [tag]",
											"value": "172"
										},
										{
											"begin": 4840,
											"end": 4919,
											"name": "JUMPI"
										},
										{
											"begin": 4840,
											"end": 4919,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4840,
											"end": 4919,
											"name": "MLOAD"
										},
										{
											"begin": 4840,
											"end": 4919,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4840,
											"end": 4919,
											"name": "DUP2"
										},
										{
											"begin": 4840,
											"end": 4919,
											"name": "MSTORE"
										},
										{
											"begin": 4840,
											"end": 4919,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 4840,
											"end": 4919,
											"name": "ADD"
										},
										{
											"begin": 4840,
											"end": 4919,
											"name": "DUP1"
										},
										{
											"begin": 4840,
											"end": 4919,
											"name": "DUP1"
										},
										{
											"begin": 4840,
											"end": 4919,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4840,
											"end": 4919,
											"name": "ADD"
										},
										{
											"begin": 4840,
											"end": 4919,
											"name": "DUP3"
										},
										{
											"begin": 4840,
											"end": 4919,
											"name": "DUP2"
										},
										{
											"begin": 4840,
											"end": 4919,
											"name": "SUB"
										},
										{
											"begin": 4840,
											"end": 4919,
											"name": "DUP3"
										},
										{
											"begin": 4840,
											"end": 4919,
											"name": "MSTORE"
										},
										{
											"begin": 4840,
											"end": 4919,
											"name": "PUSH",
											"value": "18"
										},
										{
											"begin": 4840,
											"end": 4919,
											"name": "DUP2"
										},
										{
											"begin": 4840,
											"end": 4919,
											"name": "MSTORE"
										},
										{
											"begin": 4840,
											"end": 4919,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4840,
											"end": 4919,
											"name": "ADD"
										},
										{
											"begin": 4840,
											"end": 4919,
											"name": "DUP1"
										},
										{
											"begin": 4840,
											"end": 4919,
											"name": "PUSH",
											"value": "50726F76696465642072657761726420746F6F20686967680000000000000000"
										},
										{
											"begin": 4840,
											"end": 4919,
											"name": "DUP2"
										},
										{
											"begin": 4840,
											"end": 4919,
											"name": "MSTORE"
										},
										{
											"begin": 4840,
											"end": 4919,
											"name": "POP"
										},
										{
											"begin": 4840,
											"end": 4919,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4840,
											"end": 4919,
											"name": "ADD"
										},
										{
											"begin": 4840,
											"end": 4919,
											"name": "SWAP2"
										},
										{
											"begin": 4840,
											"end": 4919,
											"name": "POP"
										},
										{
											"begin": 4840,
											"end": 4919,
											"name": "POP"
										},
										{
											"begin": 4840,
											"end": 4919,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4840,
											"end": 4919,
											"name": "MLOAD"
										},
										{
											"begin": 4840,
											"end": 4919,
											"name": "DUP1"
										},
										{
											"begin": 4840,
											"end": 4919,
											"name": "SWAP2"
										},
										{
											"begin": 4840,
											"end": 4919,
											"name": "SUB"
										},
										{
											"begin": 4840,
											"end": 4919,
											"name": "SWAP1"
										},
										{
											"begin": 4840,
											"end": 4919,
											"name": "REVERT"
										},
										{
											"begin": 4840,
											"end": 4919,
											"name": "tag",
											"value": "172"
										},
										{
											"begin": 4840,
											"end": 4919,
											"name": "JUMPDEST"
										},
										{
											"begin": 4949,
											"end": 4964,
											"name": "TIMESTAMP"
										},
										{
											"begin": 4932,
											"end": 4946,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 4932,
											"end": 4964,
											"name": "DUP2"
										},
										{
											"begin": 4932,
											"end": 4964,
											"name": "SWAP1"
										},
										{
											"begin": 4932,
											"end": 4964,
											"name": "SSTORE"
										},
										{
											"begin": 4932,
											"end": 4964,
											"name": "POP"
										},
										{
											"begin": 4990,
											"end": 5026,
											"name": "PUSH [tag]",
											"value": "173"
										},
										{
											"begin": 5010,
											"end": 5025,
											"name": "PUSH",
											"value": "9"
										},
										{
											"begin": 5010,
											"end": 5025,
											"name": "SLOAD"
										},
										{
											"begin": 4990,
											"end": 5005,
											"name": "TIMESTAMP"
										},
										{
											"begin": 4990,
											"end": 5009,
											"name": "PUSH [tag]",
											"value": "124"
										},
										{
											"begin": 4990,
											"end": 5009,
											"name": "SWAP1"
										},
										{
											"begin": 4990,
											"end": 5026,
											"name": "SWAP2"
										},
										{
											"begin": 4990,
											"end": 5026,
											"name": "SWAP1"
										},
										{
											"begin": 4990,
											"end": 5026,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 4990,
											"end": 5026,
											"name": "AND"
										},
										{
											"begin": 4990,
											"end": 5026,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4990,
											"end": 5026,
											"name": "tag",
											"value": "173"
										},
										{
											"begin": 4990,
											"end": 5026,
											"name": "JUMPDEST"
										},
										{
											"begin": 4975,
											"end": 4987,
											"name": "PUSH",
											"value": "7"
										},
										{
											"begin": 4975,
											"end": 5026,
											"name": "DUP2"
										},
										{
											"begin": 4975,
											"end": 5026,
											"name": "SWAP1"
										},
										{
											"begin": 4975,
											"end": 5026,
											"name": "SSTORE"
										},
										{
											"begin": 4975,
											"end": 5026,
											"name": "POP"
										},
										{
											"begin": 5042,
											"end": 5061,
											"name": "PUSH",
											"value": "DE88A922E0D3B88B24E9623EFEB464919C6BF9F66857A65E2BFCF2CE87A9433D"
										},
										{
											"begin": 5054,
											"end": 5060,
											"name": "DUP4"
										},
										{
											"begin": 5042,
											"end": 5061,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5042,
											"end": 5061,
											"name": "MLOAD"
										},
										{
											"begin": 5042,
											"end": 5061,
											"name": "DUP1"
										},
										{
											"begin": 5042,
											"end": 5061,
											"name": "DUP3"
										},
										{
											"begin": 5042,
											"end": 5061,
											"name": "DUP2"
										},
										{
											"begin": 5042,
											"end": 5061,
											"name": "MSTORE"
										},
										{
											"begin": 5042,
											"end": 5061,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5042,
											"end": 5061,
											"name": "ADD"
										},
										{
											"begin": 5042,
											"end": 5061,
											"name": "SWAP2"
										},
										{
											"begin": 5042,
											"end": 5061,
											"name": "POP"
										},
										{
											"begin": 5042,
											"end": 5061,
											"name": "POP"
										},
										{
											"begin": 5042,
											"end": 5061,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5042,
											"end": 5061,
											"name": "MLOAD"
										},
										{
											"begin": 5042,
											"end": 5061,
											"name": "DUP1"
										},
										{
											"begin": 5042,
											"end": 5061,
											"name": "SWAP2"
										},
										{
											"begin": 5042,
											"end": 5061,
											"name": "SUB"
										},
										{
											"begin": 5042,
											"end": 5061,
											"name": "SWAP1"
										},
										{
											"begin": 5042,
											"end": 5061,
											"name": "LOG1"
										},
										{
											"begin": 6228,
											"end": 6229,
											"name": "POP"
										},
										{
											"begin": 458,
											"end": 459,
											"name": "POP"
										},
										{
											"begin": 3986,
											"end": 5069,
											"name": "POP"
										},
										{
											"begin": 3986,
											"end": 5069,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 3510,
											"end": 3817,
											"name": "tag",
											"value": "69"
										},
										{
											"begin": 3510,
											"end": 3817,
											"name": "JUMPDEST"
										},
										{
											"begin": 1350,
											"end": 1351,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1333,
											"end": 1346,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 1333,
											"end": 1346,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1333,
											"end": 1351,
											"name": "DUP3"
										},
										{
											"begin": 1333,
											"end": 1351,
											"name": "DUP3"
										},
										{
											"begin": 1333,
											"end": 1351,
											"name": "SLOAD"
										},
										{
											"begin": 1333,
											"end": 1351,
											"name": "ADD"
										},
										{
											"begin": 1333,
											"end": 1351,
											"name": "SWAP3"
										},
										{
											"begin": 1333,
											"end": 1351,
											"name": "POP"
										},
										{
											"begin": 1333,
											"end": 1351,
											"name": "POP"
										},
										{
											"begin": 1333,
											"end": 1351,
											"name": "DUP2"
										},
										{
											"begin": 1333,
											"end": 1351,
											"name": "SWAP1"
										},
										{
											"begin": 1333,
											"end": 1351,
											"name": "SSTORE"
										},
										{
											"begin": 1333,
											"end": 1351,
											"name": "POP"
										},
										{
											"begin": 1362,
											"end": 1382,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1385,
											"end": 1398,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 1385,
											"end": 1398,
											"name": "SLOAD"
										},
										{
											"begin": 1362,
											"end": 1398,
											"name": "SWAP1"
										},
										{
											"begin": 1362,
											"end": 1398,
											"name": "POP"
										},
										{
											"begin": 3564,
											"end": 3574,
											"name": "CALLER"
										},
										{
											"begin": 5980,
											"end": 5996,
											"name": "PUSH [tag]",
											"value": "176"
										},
										{
											"begin": 5980,
											"end": 5994,
											"name": "PUSH [tag]",
											"value": "106"
										},
										{
											"begin": 5980,
											"end": 5996,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5980,
											"end": 5996,
											"name": "tag",
											"value": "176"
										},
										{
											"begin": 5980,
											"end": 5996,
											"name": "JUMPDEST"
										},
										{
											"begin": 5957,
											"end": 5977,
											"name": "PUSH",
											"value": "B"
										},
										{
											"begin": 5957,
											"end": 5996,
											"name": "DUP2"
										},
										{
											"begin": 5957,
											"end": 5996,
											"name": "SWAP1"
										},
										{
											"begin": 5957,
											"end": 5996,
											"name": "SSTORE"
										},
										{
											"begin": 5957,
											"end": 5996,
											"name": "POP"
										},
										{
											"begin": 6024,
											"end": 6050,
											"name": "PUSH [tag]",
											"value": "177"
										},
										{
											"begin": 6024,
											"end": 6048,
											"name": "PUSH [tag]",
											"value": "86"
										},
										{
											"begin": 6024,
											"end": 6050,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 6024,
											"end": 6050,
											"name": "tag",
											"value": "177"
										},
										{
											"begin": 6024,
											"end": 6050,
											"name": "JUMPDEST"
										},
										{
											"begin": 6007,
											"end": 6021,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 6007,
											"end": 6050,
											"name": "DUP2"
										},
										{
											"begin": 6007,
											"end": 6050,
											"name": "SWAP1"
										},
										{
											"begin": 6007,
											"end": 6050,
											"name": "SSTORE"
										},
										{
											"begin": 6007,
											"end": 6050,
											"name": "POP"
										},
										{
											"begin": 6084,
											"end": 6085,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6065,
											"end": 6086,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6065,
											"end": 6086,
											"name": "AND"
										},
										{
											"begin": 6065,
											"end": 6072,
											"name": "DUP2"
										},
										{
											"begin": 6065,
											"end": 6086,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6065,
											"end": 6086,
											"name": "AND"
										},
										{
											"begin": 6065,
											"end": 6086,
											"name": "EQ"
										},
										{
											"begin": 6061,
											"end": 6218,
											"name": "PUSH [tag]",
											"value": "178"
										},
										{
											"begin": 6061,
											"end": 6218,
											"name": "JUMPI"
										},
										{
											"begin": 6122,
											"end": 6137,
											"name": "PUSH [tag]",
											"value": "179"
										},
										{
											"begin": 6129,
											"end": 6136,
											"name": "DUP2"
										},
										{
											"begin": 6122,
											"end": 6128,
											"name": "PUSH [tag]",
											"value": "43"
										},
										{
											"begin": 6122,
											"end": 6137,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 6122,
											"end": 6137,
											"name": "tag",
											"value": "179"
										},
										{
											"begin": 6122,
											"end": 6137,
											"name": "JUMPDEST"
										},
										{
											"begin": 6103,
											"end": 6110,
											"name": "PUSH",
											"value": "D"
										},
										{
											"begin": 6103,
											"end": 6119,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6111,
											"end": 6118,
											"name": "DUP4"
										},
										{
											"begin": 6103,
											"end": 6119,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6103,
											"end": 6119,
											"name": "AND"
										},
										{
											"begin": 6103,
											"end": 6119,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6103,
											"end": 6119,
											"name": "AND"
										},
										{
											"begin": 6103,
											"end": 6119,
											"name": "DUP2"
										},
										{
											"begin": 6103,
											"end": 6119,
											"name": "MSTORE"
										},
										{
											"begin": 6103,
											"end": 6119,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6103,
											"end": 6119,
											"name": "ADD"
										},
										{
											"begin": 6103,
											"end": 6119,
											"name": "SWAP1"
										},
										{
											"begin": 6103,
											"end": 6119,
											"name": "DUP2"
										},
										{
											"begin": 6103,
											"end": 6119,
											"name": "MSTORE"
										},
										{
											"begin": 6103,
											"end": 6119,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6103,
											"end": 6119,
											"name": "ADD"
										},
										{
											"begin": 6103,
											"end": 6119,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6103,
											"end": 6119,
											"name": "KECCAK256"
										},
										{
											"begin": 6103,
											"end": 6137,
											"name": "DUP2"
										},
										{
											"begin": 6103,
											"end": 6137,
											"name": "SWAP1"
										},
										{
											"begin": 6103,
											"end": 6137,
											"name": "SSTORE"
										},
										{
											"begin": 6103,
											"end": 6137,
											"name": "POP"
										},
										{
											"begin": 6186,
											"end": 6206,
											"name": "PUSH",
											"value": "B"
										},
										{
											"begin": 6186,
											"end": 6206,
											"name": "SLOAD"
										},
										{
											"begin": 6152,
											"end": 6174,
											"name": "PUSH",
											"value": "C"
										},
										{
											"begin": 6152,
											"end": 6183,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6175,
											"end": 6182,
											"name": "DUP4"
										},
										{
											"begin": 6152,
											"end": 6183,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6152,
											"end": 6183,
											"name": "AND"
										},
										{
											"begin": 6152,
											"end": 6183,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6152,
											"end": 6183,
											"name": "AND"
										},
										{
											"begin": 6152,
											"end": 6183,
											"name": "DUP2"
										},
										{
											"begin": 6152,
											"end": 6183,
											"name": "MSTORE"
										},
										{
											"begin": 6152,
											"end": 6183,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6152,
											"end": 6183,
											"name": "ADD"
										},
										{
											"begin": 6152,
											"end": 6183,
											"name": "SWAP1"
										},
										{
											"begin": 6152,
											"end": 6183,
											"name": "DUP2"
										},
										{
											"begin": 6152,
											"end": 6183,
											"name": "MSTORE"
										},
										{
											"begin": 6152,
											"end": 6183,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6152,
											"end": 6183,
											"name": "ADD"
										},
										{
											"begin": 6152,
											"end": 6183,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6152,
											"end": 6183,
											"name": "KECCAK256"
										},
										{
											"begin": 6152,
											"end": 6206,
											"name": "DUP2"
										},
										{
											"begin": 6152,
											"end": 6206,
											"name": "SWAP1"
										},
										{
											"begin": 6152,
											"end": 6206,
											"name": "SSTORE"
										},
										{
											"begin": 6152,
											"end": 6206,
											"name": "POP"
										},
										{
											"begin": 6061,
											"end": 6218,
											"name": "tag",
											"value": "178"
										},
										{
											"begin": 6061,
											"end": 6218,
											"name": "JUMPDEST"
										},
										{
											"begin": 3587,
											"end": 3601,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3604,
											"end": 3611,
											"name": "PUSH",
											"value": "D"
										},
										{
											"begin": 3604,
											"end": 3623,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3612,
											"end": 3622,
											"name": "CALLER"
										},
										{
											"begin": 3604,
											"end": 3623,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3604,
											"end": 3623,
											"name": "AND"
										},
										{
											"begin": 3604,
											"end": 3623,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3604,
											"end": 3623,
											"name": "AND"
										},
										{
											"begin": 3604,
											"end": 3623,
											"name": "DUP2"
										},
										{
											"begin": 3604,
											"end": 3623,
											"name": "MSTORE"
										},
										{
											"begin": 3604,
											"end": 3623,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3604,
											"end": 3623,
											"name": "ADD"
										},
										{
											"begin": 3604,
											"end": 3623,
											"name": "SWAP1"
										},
										{
											"begin": 3604,
											"end": 3623,
											"name": "DUP2"
										},
										{
											"begin": 3604,
											"end": 3623,
											"name": "MSTORE"
										},
										{
											"begin": 3604,
											"end": 3623,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3604,
											"end": 3623,
											"name": "ADD"
										},
										{
											"begin": 3604,
											"end": 3623,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3604,
											"end": 3623,
											"name": "KECCAK256"
										},
										{
											"begin": 3604,
											"end": 3623,
											"name": "SLOAD"
										},
										{
											"begin": 3587,
											"end": 3623,
											"name": "SWAP1"
										},
										{
											"begin": 3587,
											"end": 3623,
											"name": "POP"
										},
										{
											"begin": 3647,
											"end": 3648,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3638,
											"end": 3644,
											"name": "DUP2"
										},
										{
											"begin": 3638,
											"end": 3648,
											"name": "GT"
										},
										{
											"begin": 3634,
											"end": 3810,
											"name": "ISZERO"
										},
										{
											"begin": 3634,
											"end": 3810,
											"name": "PUSH [tag]",
											"value": "181"
										},
										{
											"begin": 3634,
											"end": 3810,
											"name": "JUMPI"
										},
										{
											"begin": 3687,
											"end": 3688,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3665,
											"end": 3672,
											"name": "PUSH",
											"value": "D"
										},
										{
											"begin": 3665,
											"end": 3684,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3673,
											"end": 3683,
											"name": "CALLER"
										},
										{
											"begin": 3665,
											"end": 3684,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3665,
											"end": 3684,
											"name": "AND"
										},
										{
											"begin": 3665,
											"end": 3684,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3665,
											"end": 3684,
											"name": "AND"
										},
										{
											"begin": 3665,
											"end": 3684,
											"name": "DUP2"
										},
										{
											"begin": 3665,
											"end": 3684,
											"name": "MSTORE"
										},
										{
											"begin": 3665,
											"end": 3684,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3665,
											"end": 3684,
											"name": "ADD"
										},
										{
											"begin": 3665,
											"end": 3684,
											"name": "SWAP1"
										},
										{
											"begin": 3665,
											"end": 3684,
											"name": "DUP2"
										},
										{
											"begin": 3665,
											"end": 3684,
											"name": "MSTORE"
										},
										{
											"begin": 3665,
											"end": 3684,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3665,
											"end": 3684,
											"name": "ADD"
										},
										{
											"begin": 3665,
											"end": 3684,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3665,
											"end": 3684,
											"name": "KECCAK256"
										},
										{
											"begin": 3665,
											"end": 3688,
											"name": "DUP2"
										},
										{
											"begin": 3665,
											"end": 3688,
											"name": "SWAP1"
										},
										{
											"begin": 3665,
											"end": 3688,
											"name": "SSTORE"
										},
										{
											"begin": 3665,
											"end": 3688,
											"name": "POP"
										},
										{
											"begin": 3703,
											"end": 3748,
											"name": "PUSH [tag]",
											"value": "182"
										},
										{
											"begin": 3729,
											"end": 3739,
											"name": "CALLER"
										},
										{
											"begin": 3741,
											"end": 3747,
											"name": "DUP3"
										},
										{
											"begin": 3703,
											"end": 3715,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 3703,
											"end": 3715,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 3703,
											"end": 3715,
											"name": "SWAP1"
										},
										{
											"begin": 3703,
											"end": 3715,
											"name": "SLOAD"
										},
										{
											"begin": 3703,
											"end": 3715,
											"name": "SWAP1"
										},
										{
											"begin": 3703,
											"end": 3715,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 3703,
											"end": 3715,
											"name": "EXP"
										},
										{
											"begin": 3703,
											"end": 3715,
											"name": "SWAP1"
										},
										{
											"begin": 3703,
											"end": 3715,
											"name": "DIV"
										},
										{
											"begin": 3703,
											"end": 3715,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3703,
											"end": 3715,
											"name": "AND"
										},
										{
											"begin": 3703,
											"end": 3728,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3703,
											"end": 3728,
											"name": "AND"
										},
										{
											"begin": 3703,
											"end": 3728,
											"name": "PUSH [tag]",
											"value": "151"
										},
										{
											"begin": 3703,
											"end": 3728,
											"name": "SWAP1"
										},
										{
											"begin": 3703,
											"end": 3748,
											"name": "SWAP3"
										},
										{
											"begin": 3703,
											"end": 3748,
											"name": "SWAP2"
										},
										{
											"begin": 3703,
											"end": 3748,
											"name": "SWAP1"
										},
										{
											"begin": 3703,
											"end": 3748,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 3703,
											"end": 3748,
											"name": "AND"
										},
										{
											"begin": 3703,
											"end": 3748,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3703,
											"end": 3748,
											"name": "tag",
											"value": "182"
										},
										{
											"begin": 3703,
											"end": 3748,
											"name": "JUMPDEST"
										},
										{
											"begin": 3779,
											"end": 3789,
											"name": "CALLER"
										},
										{
											"begin": 3768,
											"end": 3798,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3768,
											"end": 3798,
											"name": "AND"
										},
										{
											"begin": 3768,
											"end": 3798,
											"name": "PUSH",
											"value": "E2403640BA68FED3A2F88B7557551D1993F84B99BB10FF833F0CF8DB0C5E0486"
										},
										{
											"begin": 3791,
											"end": 3797,
											"name": "DUP3"
										},
										{
											"begin": 3768,
											"end": 3798,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3768,
											"end": 3798,
											"name": "MLOAD"
										},
										{
											"begin": 3768,
											"end": 3798,
											"name": "DUP1"
										},
										{
											"begin": 3768,
											"end": 3798,
											"name": "DUP3"
										},
										{
											"begin": 3768,
											"end": 3798,
											"name": "DUP2"
										},
										{
											"begin": 3768,
											"end": 3798,
											"name": "MSTORE"
										},
										{
											"begin": 3768,
											"end": 3798,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3768,
											"end": 3798,
											"name": "ADD"
										},
										{
											"begin": 3768,
											"end": 3798,
											"name": "SWAP2"
										},
										{
											"begin": 3768,
											"end": 3798,
											"name": "POP"
										},
										{
											"begin": 3768,
											"end": 3798,
											"name": "POP"
										},
										{
											"begin": 3768,
											"end": 3798,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3768,
											"end": 3798,
											"name": "MLOAD"
										},
										{
											"begin": 3768,
											"end": 3798,
											"name": "DUP1"
										},
										{
											"begin": 3768,
											"end": 3798,
											"name": "SWAP2"
										},
										{
											"begin": 3768,
											"end": 3798,
											"name": "SUB"
										},
										{
											"begin": 3768,
											"end": 3798,
											"name": "SWAP1"
										},
										{
											"begin": 3768,
											"end": 3798,
											"name": "LOG2"
										},
										{
											"begin": 3634,
											"end": 3810,
											"name": "tag",
											"value": "181"
										},
										{
											"begin": 3634,
											"end": 3810,
											"name": "JUMPDEST"
										},
										{
											"begin": 6228,
											"end": 6229,
											"name": "POP"
										},
										{
											"begin": 1409,
											"end": 1410,
											"name": "POP"
										},
										{
											"begin": 1445,
											"end": 1458,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 1445,
											"end": 1458,
											"name": "SLOAD"
										},
										{
											"begin": 1429,
											"end": 1441,
											"name": "DUP2"
										},
										{
											"begin": 1429,
											"end": 1458,
											"name": "EQ"
										},
										{
											"begin": 1421,
											"end": 1494,
											"name": "PUSH [tag]",
											"value": "183"
										},
										{
											"begin": 1421,
											"end": 1494,
											"name": "JUMPI"
										},
										{
											"begin": 1421,
											"end": 1494,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1421,
											"end": 1494,
											"name": "MLOAD"
										},
										{
											"begin": 1421,
											"end": 1494,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1421,
											"end": 1494,
											"name": "DUP2"
										},
										{
											"begin": 1421,
											"end": 1494,
											"name": "MSTORE"
										},
										{
											"begin": 1421,
											"end": 1494,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1421,
											"end": 1494,
											"name": "ADD"
										},
										{
											"begin": 1421,
											"end": 1494,
											"name": "DUP1"
										},
										{
											"begin": 1421,
											"end": 1494,
											"name": "DUP1"
										},
										{
											"begin": 1421,
											"end": 1494,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1421,
											"end": 1494,
											"name": "ADD"
										},
										{
											"begin": 1421,
											"end": 1494,
											"name": "DUP3"
										},
										{
											"begin": 1421,
											"end": 1494,
											"name": "DUP2"
										},
										{
											"begin": 1421,
											"end": 1494,
											"name": "SUB"
										},
										{
											"begin": 1421,
											"end": 1494,
											"name": "DUP3"
										},
										{
											"begin": 1421,
											"end": 1494,
											"name": "MSTORE"
										},
										{
											"begin": 1421,
											"end": 1494,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 1421,
											"end": 1494,
											"name": "DUP2"
										},
										{
											"begin": 1421,
											"end": 1494,
											"name": "MSTORE"
										},
										{
											"begin": 1421,
											"end": 1494,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1421,
											"end": 1494,
											"name": "ADD"
										},
										{
											"begin": 1421,
											"end": 1494,
											"name": "DUP1"
										},
										{
											"begin": 1421,
											"end": 1494,
											"name": "PUSH",
											"value": "5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
										},
										{
											"begin": 1421,
											"end": 1494,
											"name": "DUP2"
										},
										{
											"begin": 1421,
											"end": 1494,
											"name": "MSTORE"
										},
										{
											"begin": 1421,
											"end": 1494,
											"name": "POP"
										},
										{
											"begin": 1421,
											"end": 1494,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1421,
											"end": 1494,
											"name": "ADD"
										},
										{
											"begin": 1421,
											"end": 1494,
											"name": "SWAP2"
										},
										{
											"begin": 1421,
											"end": 1494,
											"name": "POP"
										},
										{
											"begin": 1421,
											"end": 1494,
											"name": "POP"
										},
										{
											"begin": 1421,
											"end": 1494,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1421,
											"end": 1494,
											"name": "MLOAD"
										},
										{
											"begin": 1421,
											"end": 1494,
											"name": "DUP1"
										},
										{
											"begin": 1421,
											"end": 1494,
											"name": "SWAP2"
										},
										{
											"begin": 1421,
											"end": 1494,
											"name": "SUB"
										},
										{
											"begin": 1421,
											"end": 1494,
											"name": "SWAP1"
										},
										{
											"begin": 1421,
											"end": 1494,
											"name": "REVERT"
										},
										{
											"begin": 1421,
											"end": 1494,
											"name": "tag",
											"value": "183"
										},
										{
											"begin": 1421,
											"end": 1494,
											"name": "JUMPDEST"
										},
										{
											"begin": 3510,
											"end": 3817,
											"name": "POP"
										},
										{
											"begin": 3510,
											"end": 3817,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 209,
											"end": 243,
											"name": "tag",
											"value": "71"
										},
										{
											"begin": 209,
											"end": 243,
											"name": "JUMPDEST"
										},
										{
											"begin": 209,
											"end": 243,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 209,
											"end": 243,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 209,
											"end": 243,
											"name": "SWAP1"
										},
										{
											"begin": 209,
											"end": 243,
											"name": "SLOAD"
										},
										{
											"begin": 209,
											"end": 243,
											"name": "SWAP1"
										},
										{
											"begin": 209,
											"end": 243,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 209,
											"end": 243,
											"name": "EXP"
										},
										{
											"begin": 209,
											"end": 243,
											"name": "SWAP1"
										},
										{
											"begin": 209,
											"end": 243,
											"name": "DIV"
										},
										{
											"begin": 209,
											"end": 243,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 209,
											"end": 243,
											"name": "AND"
										},
										{
											"begin": 209,
											"end": 243,
											"name": "DUP2"
										},
										{
											"begin": 209,
											"end": 243,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 140,
											"end": 169,
											"name": "tag",
											"value": "73"
										},
										{
											"begin": 140,
											"end": 169,
											"name": "JUMPDEST"
										},
										{
											"begin": 140,
											"end": 169,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 140,
											"end": 169,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 140,
											"end": 169,
											"name": "SWAP1"
										},
										{
											"begin": 140,
											"end": 169,
											"name": "SLOAD"
										},
										{
											"begin": 140,
											"end": 169,
											"name": "SWAP1"
										},
										{
											"begin": 140,
											"end": 169,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 140,
											"end": 169,
											"name": "EXP"
										},
										{
											"begin": 140,
											"end": 169,
											"name": "SWAP1"
										},
										{
											"begin": 140,
											"end": 169,
											"name": "DIV"
										},
										{
											"begin": 140,
											"end": 169,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 140,
											"end": 169,
											"name": "AND"
										},
										{
											"begin": 140,
											"end": 169,
											"name": "DUP2"
										},
										{
											"begin": 140,
											"end": 169,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 201,
											"end": 219,
											"name": "tag",
											"value": "75"
										},
										{
											"begin": 201,
											"end": 219,
											"name": "JUMPDEST"
										},
										{
											"begin": 201,
											"end": 219,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 201,
											"end": 219,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 201,
											"end": 219,
											"name": "SWAP1"
										},
										{
											"begin": 201,
											"end": 219,
											"name": "SLOAD"
										},
										{
											"begin": 201,
											"end": 219,
											"name": "SWAP1"
										},
										{
											"begin": 201,
											"end": 219,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 201,
											"end": 219,
											"name": "EXP"
										},
										{
											"begin": 201,
											"end": 219,
											"name": "SWAP1"
										},
										{
											"begin": 201,
											"end": 219,
											"name": "DIV"
										},
										{
											"begin": 201,
											"end": 219,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 201,
											"end": 219,
											"name": "AND"
										},
										{
											"begin": 201,
											"end": 219,
											"name": "DUP2"
										},
										{
											"begin": 201,
											"end": 219,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1748,
											"end": 1860,
											"name": "tag",
											"value": "78"
										},
										{
											"begin": 1748,
											"end": 1860,
											"name": "JUMPDEST"
										},
										{
											"begin": 1807,
											"end": 1814,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1834,
											"end": 1843,
											"name": "PUSH",
											"value": "F"
										},
										{
											"begin": 1834,
											"end": 1852,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1844,
											"end": 1851,
											"name": "DUP4"
										},
										{
											"begin": 1834,
											"end": 1852,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1834,
											"end": 1852,
											"name": "AND"
										},
										{
											"begin": 1834,
											"end": 1852,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1834,
											"end": 1852,
											"name": "AND"
										},
										{
											"begin": 1834,
											"end": 1852,
											"name": "DUP2"
										},
										{
											"begin": 1834,
											"end": 1852,
											"name": "MSTORE"
										},
										{
											"begin": 1834,
											"end": 1852,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1834,
											"end": 1852,
											"name": "ADD"
										},
										{
											"begin": 1834,
											"end": 1852,
											"name": "SWAP1"
										},
										{
											"begin": 1834,
											"end": 1852,
											"name": "DUP2"
										},
										{
											"begin": 1834,
											"end": 1852,
											"name": "MSTORE"
										},
										{
											"begin": 1834,
											"end": 1852,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1834,
											"end": 1852,
											"name": "ADD"
										},
										{
											"begin": 1834,
											"end": 1852,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1834,
											"end": 1852,
											"name": "KECCAK256"
										},
										{
											"begin": 1834,
											"end": 1852,
											"name": "SLOAD"
										},
										{
											"begin": 1827,
											"end": 1852,
											"name": "SWAP1"
										},
										{
											"begin": 1827,
											"end": 1852,
											"name": "POP"
										},
										{
											"begin": 1748,
											"end": 1860,
											"name": "SWAP2"
										},
										{
											"begin": 1748,
											"end": 1860,
											"name": "SWAP1"
										},
										{
											"begin": 1748,
											"end": 1860,
											"name": "POP"
										},
										{
											"begin": 1748,
											"end": 1860,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 791,
											"end": 817,
											"name": "tag",
											"value": "80"
										},
										{
											"begin": 791,
											"end": 817,
											"name": "JUMPDEST"
										},
										{
											"begin": 791,
											"end": 817,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 791,
											"end": 817,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 791,
											"end": 817,
											"name": "SWAP1"
										},
										{
											"begin": 791,
											"end": 817,
											"name": "SLOAD"
										},
										{
											"begin": 791,
											"end": 817,
											"name": "SWAP1"
										},
										{
											"begin": 791,
											"end": 817,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 791,
											"end": 817,
											"name": "EXP"
										},
										{
											"begin": 791,
											"end": 817,
											"name": "SWAP1"
										},
										{
											"begin": 791,
											"end": 817,
											"name": "DIV"
										},
										{
											"begin": 791,
											"end": 817,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 791,
											"end": 817,
											"name": "AND"
										},
										{
											"begin": 791,
											"end": 817,
											"name": "DUP2"
										},
										{
											"begin": 791,
											"end": 817,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 520,
											"end": 791,
											"name": "tag",
											"value": "82"
										},
										{
											"begin": 520,
											"end": 791,
											"name": "JUMPDEST"
										},
										{
											"begin": 589,
											"end": 603,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 589,
											"end": 603,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 589,
											"end": 603,
											"name": "SWAP1"
										},
										{
											"begin": 589,
											"end": 603,
											"name": "SLOAD"
										},
										{
											"begin": 589,
											"end": 603,
											"name": "SWAP1"
										},
										{
											"begin": 589,
											"end": 603,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 589,
											"end": 603,
											"name": "EXP"
										},
										{
											"begin": 589,
											"end": 603,
											"name": "SWAP1"
										},
										{
											"begin": 589,
											"end": 603,
											"name": "DIV"
										},
										{
											"begin": 589,
											"end": 603,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 589,
											"end": 603,
											"name": "AND"
										},
										{
											"begin": 575,
											"end": 603,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 575,
											"end": 603,
											"name": "AND"
										},
										{
											"begin": 575,
											"end": 585,
											"name": "CALLER"
										},
										{
											"begin": 575,
											"end": 603,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 575,
											"end": 603,
											"name": "AND"
										},
										{
											"begin": 575,
											"end": 603,
											"name": "EQ"
										},
										{
											"begin": 567,
											"end": 661,
											"name": "PUSH [tag]",
											"value": "186"
										},
										{
											"begin": 567,
											"end": 661,
											"name": "JUMPI"
										},
										{
											"begin": 567,
											"end": 661,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 567,
											"end": 661,
											"name": "MLOAD"
										},
										{
											"begin": 567,
											"end": 661,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 567,
											"end": 661,
											"name": "DUP2"
										},
										{
											"begin": 567,
											"end": 661,
											"name": "MSTORE"
										},
										{
											"begin": 567,
											"end": 661,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 567,
											"end": 661,
											"name": "ADD"
										},
										{
											"begin": 567,
											"end": 661,
											"name": "DUP1"
										},
										{
											"begin": 567,
											"end": 661,
											"name": "DUP1"
										},
										{
											"begin": 567,
											"end": 661,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 567,
											"end": 661,
											"name": "ADD"
										},
										{
											"begin": 567,
											"end": 661,
											"name": "DUP3"
										},
										{
											"begin": 567,
											"end": 661,
											"name": "DUP2"
										},
										{
											"begin": 567,
											"end": 661,
											"name": "SUB"
										},
										{
											"begin": 567,
											"end": 661,
											"name": "DUP3"
										},
										{
											"begin": 567,
											"end": 661,
											"name": "MSTORE"
										},
										{
											"begin": 567,
											"end": 661,
											"name": "PUSH",
											"value": "35"
										},
										{
											"begin": 567,
											"end": 661,
											"name": "DUP2"
										},
										{
											"begin": 567,
											"end": 661,
											"name": "MSTORE"
										},
										{
											"begin": 567,
											"end": 661,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 567,
											"end": 661,
											"name": "ADD"
										},
										{
											"begin": 567,
											"end": 661,
											"name": "DUP1"
										},
										{
											"begin": 567,
											"end": 661,
											"name": "PUSH data",
											"value": "1149E36CD24095BEBC9341EF03810E0E2A00039190624DF6F2D7934141E2233B"
										},
										{
											"begin": 567,
											"end": 661,
											"name": "PUSH",
											"value": "35"
										},
										{
											"begin": 567,
											"end": 661,
											"name": "SWAP2"
										},
										{
											"begin": 567,
											"end": 661,
											"name": "CODECOPY"
										},
										{
											"begin": 567,
											"end": 661,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 567,
											"end": 661,
											"name": "ADD"
										},
										{
											"begin": 567,
											"end": 661,
											"name": "SWAP2"
										},
										{
											"begin": 567,
											"end": 661,
											"name": "POP"
										},
										{
											"begin": 567,
											"end": 661,
											"name": "POP"
										},
										{
											"begin": 567,
											"end": 661,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 567,
											"end": 661,
											"name": "MLOAD"
										},
										{
											"begin": 567,
											"end": 661,
											"name": "DUP1"
										},
										{
											"begin": 567,
											"end": 661,
											"name": "SWAP2"
										},
										{
											"begin": 567,
											"end": 661,
											"name": "SUB"
										},
										{
											"begin": 567,
											"end": 661,
											"name": "SWAP1"
										},
										{
											"begin": 567,
											"end": 661,
											"name": "REVERT"
										},
										{
											"begin": 567,
											"end": 661,
											"name": "tag",
											"value": "186"
										},
										{
											"begin": 567,
											"end": 661,
											"name": "JUMPDEST"
										},
										{
											"begin": 677,
											"end": 712,
											"name": "PUSH",
											"value": "B532073B38C83145E3E5135377A08BF9AAB55BC0FD7C1179CD4FB995D2A5159C"
										},
										{
											"begin": 690,
											"end": 695,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 690,
											"end": 695,
											"name": "DUP1"
										},
										{
											"begin": 690,
											"end": 695,
											"name": "SWAP1"
										},
										{
											"begin": 690,
											"end": 695,
											"name": "SLOAD"
										},
										{
											"begin": 690,
											"end": 695,
											"name": "SWAP1"
										},
										{
											"begin": 690,
											"end": 695,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 690,
											"end": 695,
											"name": "EXP"
										},
										{
											"begin": 690,
											"end": 695,
											"name": "SWAP1"
										},
										{
											"begin": 690,
											"end": 695,
											"name": "DIV"
										},
										{
											"begin": 690,
											"end": 695,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 690,
											"end": 695,
											"name": "AND"
										},
										{
											"begin": 697,
											"end": 711,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 697,
											"end": 711,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 697,
											"end": 711,
											"name": "SWAP1"
										},
										{
											"begin": 697,
											"end": 711,
											"name": "SLOAD"
										},
										{
											"begin": 697,
											"end": 711,
											"name": "SWAP1"
										},
										{
											"begin": 697,
											"end": 711,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 697,
											"end": 711,
											"name": "EXP"
										},
										{
											"begin": 697,
											"end": 711,
											"name": "SWAP1"
										},
										{
											"begin": 697,
											"end": 711,
											"name": "DIV"
										},
										{
											"begin": 697,
											"end": 711,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 697,
											"end": 711,
											"name": "AND"
										},
										{
											"begin": 677,
											"end": 712,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 677,
											"end": 712,
											"name": "MLOAD"
										},
										{
											"begin": 677,
											"end": 712,
											"name": "DUP1"
										},
										{
											"begin": 677,
											"end": 712,
											"name": "DUP4"
										},
										{
											"begin": 677,
											"end": 712,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 677,
											"end": 712,
											"name": "AND"
										},
										{
											"begin": 677,
											"end": 712,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 677,
											"end": 712,
											"name": "AND"
										},
										{
											"begin": 677,
											"end": 712,
											"name": "DUP2"
										},
										{
											"begin": 677,
											"end": 712,
											"name": "MSTORE"
										},
										{
											"begin": 677,
											"end": 712,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 677,
											"end": 712,
											"name": "ADD"
										},
										{
											"begin": 677,
											"end": 712,
											"name": "DUP3"
										},
										{
											"begin": 677,
											"end": 712,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 677,
											"end": 712,
											"name": "AND"
										},
										{
											"begin": 677,
											"end": 712,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 677,
											"end": 712,
											"name": "AND"
										},
										{
											"begin": 677,
											"end": 712,
											"name": "DUP2"
										},
										{
											"begin": 677,
											"end": 712,
											"name": "MSTORE"
										},
										{
											"begin": 677,
											"end": 712,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 677,
											"end": 712,
											"name": "ADD"
										},
										{
											"begin": 677,
											"end": 712,
											"name": "SWAP3"
										},
										{
											"begin": 677,
											"end": 712,
											"name": "POP"
										},
										{
											"begin": 677,
											"end": 712,
											"name": "POP"
										},
										{
											"begin": 677,
											"end": 712,
											"name": "POP"
										},
										{
											"begin": 677,
											"end": 712,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 677,
											"end": 712,
											"name": "MLOAD"
										},
										{
											"begin": 677,
											"end": 712,
											"name": "DUP1"
										},
										{
											"begin": 677,
											"end": 712,
											"name": "SWAP2"
										},
										{
											"begin": 677,
											"end": 712,
											"name": "SUB"
										},
										{
											"begin": 677,
											"end": 712,
											"name": "SWAP1"
										},
										{
											"begin": 677,
											"end": 712,
											"name": "LOG1"
										},
										{
											"begin": 731,
											"end": 745,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 731,
											"end": 745,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 731,
											"end": 745,
											"name": "SWAP1"
										},
										{
											"begin": 731,
											"end": 745,
											"name": "SLOAD"
										},
										{
											"begin": 731,
											"end": 745,
											"name": "SWAP1"
										},
										{
											"begin": 731,
											"end": 745,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 731,
											"end": 745,
											"name": "EXP"
										},
										{
											"begin": 731,
											"end": 745,
											"name": "SWAP1"
										},
										{
											"begin": 731,
											"end": 745,
											"name": "DIV"
										},
										{
											"begin": 731,
											"end": 745,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 731,
											"end": 745,
											"name": "AND"
										},
										{
											"begin": 723,
											"end": 728,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 723,
											"end": 728,
											"name": "DUP1"
										},
										{
											"begin": 723,
											"end": 745,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 723,
											"end": 745,
											"name": "EXP"
										},
										{
											"begin": 723,
											"end": 745,
											"name": "DUP2"
										},
										{
											"begin": 723,
											"end": 745,
											"name": "SLOAD"
										},
										{
											"begin": 723,
											"end": 745,
											"name": "DUP2"
										},
										{
											"begin": 723,
											"end": 745,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 723,
											"end": 745,
											"name": "MUL"
										},
										{
											"begin": 723,
											"end": 745,
											"name": "NOT"
										},
										{
											"begin": 723,
											"end": 745,
											"name": "AND"
										},
										{
											"begin": 723,
											"end": 745,
											"name": "SWAP1"
										},
										{
											"begin": 723,
											"end": 745,
											"name": "DUP4"
										},
										{
											"begin": 723,
											"end": 745,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 723,
											"end": 745,
											"name": "AND"
										},
										{
											"begin": 723,
											"end": 745,
											"name": "MUL"
										},
										{
											"begin": 723,
											"end": 745,
											"name": "OR"
										},
										{
											"begin": 723,
											"end": 745,
											"name": "SWAP1"
										},
										{
											"begin": 723,
											"end": 745,
											"name": "SSTORE"
										},
										{
											"begin": 723,
											"end": 745,
											"name": "POP"
										},
										{
											"begin": 781,
											"end": 782,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 756,
											"end": 770,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 756,
											"end": 770,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 756,
											"end": 783,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 756,
											"end": 783,
											"name": "EXP"
										},
										{
											"begin": 756,
											"end": 783,
											"name": "DUP2"
										},
										{
											"begin": 756,
											"end": 783,
											"name": "SLOAD"
										},
										{
											"begin": 756,
											"end": 783,
											"name": "DUP2"
										},
										{
											"begin": 756,
											"end": 783,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 756,
											"end": 783,
											"name": "MUL"
										},
										{
											"begin": 756,
											"end": 783,
											"name": "NOT"
										},
										{
											"begin": 756,
											"end": 783,
											"name": "AND"
										},
										{
											"begin": 756,
											"end": 783,
											"name": "SWAP1"
										},
										{
											"begin": 756,
											"end": 783,
											"name": "DUP4"
										},
										{
											"begin": 756,
											"end": 783,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 756,
											"end": 783,
											"name": "AND"
										},
										{
											"begin": 756,
											"end": 783,
											"name": "MUL"
										},
										{
											"begin": 756,
											"end": 783,
											"name": "OR"
										},
										{
											"begin": 756,
											"end": 783,
											"name": "SWAP1"
										},
										{
											"begin": 756,
											"end": 783,
											"name": "SSTORE"
										},
										{
											"begin": 756,
											"end": 783,
											"name": "POP"
										},
										{
											"begin": 520,
											"end": 791,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 862,
											"end": 891,
											"name": "tag",
											"value": "84"
										},
										{
											"begin": 862,
											"end": 891,
											"name": "JUMPDEST"
										},
										{
											"begin": 862,
											"end": 891,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 862,
											"end": 891,
											"name": "SLOAD"
										},
										{
											"begin": 862,
											"end": 891,
											"name": "DUP2"
										},
										{
											"begin": 862,
											"end": 891,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1868,
											"end": 2023,
											"name": "tag",
											"value": "86"
										},
										{
											"begin": 1868,
											"end": 2023,
											"name": "JUMPDEST"
										},
										{
											"begin": 1925,
											"end": 1932,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1970,
											"end": 1982,
											"name": "PUSH",
											"value": "7"
										},
										{
											"begin": 1970,
											"end": 1982,
											"name": "SLOAD"
										},
										{
											"begin": 1952,
											"end": 1967,
											"name": "TIMESTAMP"
										},
										{
											"begin": 1952,
											"end": 1982,
											"name": "LT"
										},
										{
											"begin": 1952,
											"end": 2015,
											"name": "PUSH [tag]",
											"value": "188"
										},
										{
											"begin": 1952,
											"end": 2015,
											"name": "JUMPI"
										},
										{
											"begin": 2003,
											"end": 2015,
											"name": "PUSH",
											"value": "7"
										},
										{
											"begin": 2003,
											"end": 2015,
											"name": "SLOAD"
										},
										{
											"begin": 1952,
											"end": 2015,
											"name": "PUSH [tag]",
											"value": "189"
										},
										{
											"begin": 1952,
											"end": 2015,
											"name": "JUMP"
										},
										{
											"begin": 1952,
											"end": 2015,
											"name": "tag",
											"value": "188"
										},
										{
											"begin": 1952,
											"end": 2015,
											"name": "JUMPDEST"
										},
										{
											"begin": 1985,
											"end": 2000,
											"name": "TIMESTAMP"
										},
										{
											"begin": 1952,
											"end": 2015,
											"name": "tag",
											"value": "189"
										},
										{
											"begin": 1952,
											"end": 2015,
											"name": "JUMPDEST"
										},
										{
											"begin": 1945,
											"end": 2015,
											"name": "SWAP1"
										},
										{
											"begin": 1945,
											"end": 2015,
											"name": "POP"
										},
										{
											"begin": 1868,
											"end": 2023,
											"name": "SWAP1"
										},
										{
											"begin": 1868,
											"end": 2023,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 5184,
											"end": 5486,
											"name": "tag",
											"value": "89"
										},
										{
											"begin": 5184,
											"end": 5486,
											"name": "JUMPDEST"
										},
										{
											"begin": 829,
											"end": 841,
											"name": "PUSH [tag]",
											"value": "191"
										},
										{
											"begin": 829,
											"end": 839,
											"name": "PUSH [tag]",
											"value": "127"
										},
										{
											"begin": 829,
											"end": 841,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 829,
											"end": 841,
											"name": "tag",
											"value": "191"
										},
										{
											"begin": 829,
											"end": 841,
											"name": "JUMPDEST"
										},
										{
											"begin": 5311,
											"end": 5323,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 5311,
											"end": 5323,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5311,
											"end": 5323,
											"name": "SWAP1"
										},
										{
											"begin": 5311,
											"end": 5323,
											"name": "SLOAD"
										},
										{
											"begin": 5311,
											"end": 5323,
											"name": "SWAP1"
										},
										{
											"begin": 5311,
											"end": 5323,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 5311,
											"end": 5323,
											"name": "EXP"
										},
										{
											"begin": 5311,
											"end": 5323,
											"name": "SWAP1"
										},
										{
											"begin": 5311,
											"end": 5323,
											"name": "DIV"
										},
										{
											"begin": 5311,
											"end": 5323,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5311,
											"end": 5323,
											"name": "AND"
										},
										{
											"begin": 5287,
											"end": 5324,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5287,
											"end": 5324,
											"name": "AND"
										},
										{
											"begin": 5287,
											"end": 5299,
											"name": "DUP3"
										},
										{
											"begin": 5287,
											"end": 5324,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5287,
											"end": 5324,
											"name": "AND"
										},
										{
											"begin": 5287,
											"end": 5324,
											"name": "EQ"
										},
										{
											"begin": 5287,
											"end": 5324,
											"name": "ISZERO"
										},
										{
											"begin": 5279,
											"end": 5362,
											"name": "PUSH [tag]",
											"value": "193"
										},
										{
											"begin": 5279,
											"end": 5362,
											"name": "JUMPI"
										},
										{
											"begin": 5279,
											"end": 5362,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5279,
											"end": 5362,
											"name": "MLOAD"
										},
										{
											"begin": 5279,
											"end": 5362,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5279,
											"end": 5362,
											"name": "DUP2"
										},
										{
											"begin": 5279,
											"end": 5362,
											"name": "MSTORE"
										},
										{
											"begin": 5279,
											"end": 5362,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 5279,
											"end": 5362,
											"name": "ADD"
										},
										{
											"begin": 5279,
											"end": 5362,
											"name": "DUP1"
										},
										{
											"begin": 5279,
											"end": 5362,
											"name": "DUP1"
										},
										{
											"begin": 5279,
											"end": 5362,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5279,
											"end": 5362,
											"name": "ADD"
										},
										{
											"begin": 5279,
											"end": 5362,
											"name": "DUP3"
										},
										{
											"begin": 5279,
											"end": 5362,
											"name": "DUP2"
										},
										{
											"begin": 5279,
											"end": 5362,
											"name": "SUB"
										},
										{
											"begin": 5279,
											"end": 5362,
											"name": "DUP3"
										},
										{
											"begin": 5279,
											"end": 5362,
											"name": "MSTORE"
										},
										{
											"begin": 5279,
											"end": 5362,
											"name": "PUSH",
											"value": "21"
										},
										{
											"begin": 5279,
											"end": 5362,
											"name": "DUP2"
										},
										{
											"begin": 5279,
											"end": 5362,
											"name": "MSTORE"
										},
										{
											"begin": 5279,
											"end": 5362,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5279,
											"end": 5362,
											"name": "ADD"
										},
										{
											"begin": 5279,
											"end": 5362,
											"name": "DUP1"
										},
										{
											"begin": 5279,
											"end": 5362,
											"name": "PUSH data",
											"value": "F43DE9F2A3539B2AC9CF1844588E9CC0ACD1B2BDB1EC43734F76440993EDE0A9"
										},
										{
											"begin": 5279,
											"end": 5362,
											"name": "PUSH",
											"value": "21"
										},
										{
											"begin": 5279,
											"end": 5362,
											"name": "SWAP2"
										},
										{
											"begin": 5279,
											"end": 5362,
											"name": "CODECOPY"
										},
										{
											"begin": 5279,
											"end": 5362,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5279,
											"end": 5362,
											"name": "ADD"
										},
										{
											"begin": 5279,
											"end": 5362,
											"name": "SWAP2"
										},
										{
											"begin": 5279,
											"end": 5362,
											"name": "POP"
										},
										{
											"begin": 5279,
											"end": 5362,
											"name": "POP"
										},
										{
											"begin": 5279,
											"end": 5362,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5279,
											"end": 5362,
											"name": "MLOAD"
										},
										{
											"begin": 5279,
											"end": 5362,
											"name": "DUP1"
										},
										{
											"begin": 5279,
											"end": 5362,
											"name": "SWAP2"
										},
										{
											"begin": 5279,
											"end": 5362,
											"name": "SUB"
										},
										{
											"begin": 5279,
											"end": 5362,
											"name": "SWAP1"
										},
										{
											"begin": 5279,
											"end": 5362,
											"name": "REVERT"
										},
										{
											"begin": 5279,
											"end": 5362,
											"name": "tag",
											"value": "193"
										},
										{
											"begin": 5279,
											"end": 5362,
											"name": "JUMPDEST"
										},
										{
											"begin": 5373,
											"end": 5426,
											"name": "PUSH [tag]",
											"value": "194"
										},
										{
											"begin": 5407,
											"end": 5412,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5407,
											"end": 5412,
											"name": "DUP1"
										},
										{
											"begin": 5407,
											"end": 5412,
											"name": "SWAP1"
										},
										{
											"begin": 5407,
											"end": 5412,
											"name": "SLOAD"
										},
										{
											"begin": 5407,
											"end": 5412,
											"name": "SWAP1"
										},
										{
											"begin": 5407,
											"end": 5412,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 5407,
											"end": 5412,
											"name": "EXP"
										},
										{
											"begin": 5407,
											"end": 5412,
											"name": "SWAP1"
										},
										{
											"begin": 5407,
											"end": 5412,
											"name": "DIV"
										},
										{
											"begin": 5407,
											"end": 5412,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5407,
											"end": 5412,
											"name": "AND"
										},
										{
											"begin": 5414,
											"end": 5425,
											"name": "DUP3"
										},
										{
											"begin": 5380,
											"end": 5392,
											"name": "DUP5"
										},
										{
											"begin": 5373,
											"end": 5406,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5373,
											"end": 5406,
											"name": "AND"
										},
										{
											"begin": 5373,
											"end": 5406,
											"name": "PUSH [tag]",
											"value": "151"
										},
										{
											"begin": 5373,
											"end": 5406,
											"name": "SWAP1"
										},
										{
											"begin": 5373,
											"end": 5426,
											"name": "SWAP3"
										},
										{
											"begin": 5373,
											"end": 5426,
											"name": "SWAP2"
										},
										{
											"begin": 5373,
											"end": 5426,
											"name": "SWAP1"
										},
										{
											"begin": 5373,
											"end": 5426,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 5373,
											"end": 5426,
											"name": "AND"
										},
										{
											"begin": 5373,
											"end": 5426,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5373,
											"end": 5426,
											"name": "tag",
											"value": "194"
										},
										{
											"begin": 5373,
											"end": 5426,
											"name": "JUMPDEST"
										},
										{
											"begin": 5442,
											"end": 5478,
											"name": "PUSH",
											"value": "8C1256B8896378CD5044F80C202F9772B9D77DC85C8A6EB51967210B09BFAA28"
										},
										{
											"begin": 5452,
											"end": 5464,
											"name": "DUP3"
										},
										{
											"begin": 5466,
											"end": 5477,
											"name": "DUP3"
										},
										{
											"begin": 5442,
											"end": 5478,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5442,
											"end": 5478,
											"name": "MLOAD"
										},
										{
											"begin": 5442,
											"end": 5478,
											"name": "DUP1"
										},
										{
											"begin": 5442,
											"end": 5478,
											"name": "DUP4"
										},
										{
											"begin": 5442,
											"end": 5478,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5442,
											"end": 5478,
											"name": "AND"
										},
										{
											"begin": 5442,
											"end": 5478,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5442,
											"end": 5478,
											"name": "AND"
										},
										{
											"begin": 5442,
											"end": 5478,
											"name": "DUP2"
										},
										{
											"begin": 5442,
											"end": 5478,
											"name": "MSTORE"
										},
										{
											"begin": 5442,
											"end": 5478,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5442,
											"end": 5478,
											"name": "ADD"
										},
										{
											"begin": 5442,
											"end": 5478,
											"name": "DUP3"
										},
										{
											"begin": 5442,
											"end": 5478,
											"name": "DUP2"
										},
										{
											"begin": 5442,
											"end": 5478,
											"name": "MSTORE"
										},
										{
											"begin": 5442,
											"end": 5478,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5442,
											"end": 5478,
											"name": "ADD"
										},
										{
											"begin": 5442,
											"end": 5478,
											"name": "SWAP3"
										},
										{
											"begin": 5442,
											"end": 5478,
											"name": "POP"
										},
										{
											"begin": 5442,
											"end": 5478,
											"name": "POP"
										},
										{
											"begin": 5442,
											"end": 5478,
											"name": "POP"
										},
										{
											"begin": 5442,
											"end": 5478,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5442,
											"end": 5478,
											"name": "MLOAD"
										},
										{
											"begin": 5442,
											"end": 5478,
											"name": "DUP1"
										},
										{
											"begin": 5442,
											"end": 5478,
											"name": "SWAP2"
										},
										{
											"begin": 5442,
											"end": 5478,
											"name": "SUB"
										},
										{
											"begin": 5442,
											"end": 5478,
											"name": "SWAP1"
										},
										{
											"begin": 5442,
											"end": 5478,
											"name": "LOG1"
										},
										{
											"begin": 5184,
											"end": 5486,
											"name": "POP"
										},
										{
											"begin": 5184,
											"end": 5486,
											"name": "POP"
										},
										{
											"begin": 5184,
											"end": 5486,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1024,
											"end": 1081,
											"name": "tag",
											"value": "92"
										},
										{
											"begin": 1024,
											"end": 1081,
											"name": "JUMPDEST"
										},
										{
											"begin": 1024,
											"end": 1081,
											"name": "PUSH",
											"value": "C"
										},
										{
											"begin": 1024,
											"end": 1081,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1024,
											"end": 1081,
											"name": "MSTORE"
										},
										{
											"begin": 1024,
											"end": 1081,
											"name": "DUP1"
										},
										{
											"begin": 1024,
											"end": 1081,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1024,
											"end": 1081,
											"name": "MSTORE"
										},
										{
											"begin": 1024,
											"end": 1081,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1024,
											"end": 1081,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1024,
											"end": 1081,
											"name": "KECCAK256"
										},
										{
											"begin": 1024,
											"end": 1081,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1024,
											"end": 1081,
											"name": "SWAP2"
										},
										{
											"begin": 1024,
											"end": 1081,
											"name": "POP"
										},
										{
											"begin": 1024,
											"end": 1081,
											"name": "SWAP1"
										},
										{
											"begin": 1024,
											"end": 1081,
											"name": "POP"
										},
										{
											"begin": 1024,
											"end": 1081,
											"name": "SLOAD"
										},
										{
											"begin": 1024,
											"end": 1081,
											"name": "DUP2"
										},
										{
											"begin": 1024,
											"end": 1081,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 113,
											"end": 133,
											"name": "tag",
											"value": "94"
										},
										{
											"begin": 113,
											"end": 133,
											"name": "JUMPDEST"
										},
										{
											"begin": 113,
											"end": 133,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 113,
											"end": 133,
											"name": "DUP1"
										},
										{
											"begin": 113,
											"end": 133,
											"name": "SWAP1"
										},
										{
											"begin": 113,
											"end": 133,
											"name": "SLOAD"
										},
										{
											"begin": 113,
											"end": 133,
											"name": "SWAP1"
										},
										{
											"begin": 113,
											"end": 133,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 113,
											"end": 133,
											"name": "EXP"
										},
										{
											"begin": 113,
											"end": 133,
											"name": "SWAP1"
										},
										{
											"begin": 113,
											"end": 133,
											"name": "DIV"
										},
										{
											"begin": 113,
											"end": 133,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 113,
											"end": 133,
											"name": "AND"
										},
										{
											"begin": 113,
											"end": 133,
											"name": "DUP2"
										},
										{
											"begin": 113,
											"end": 133,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 169,
											"end": 194,
											"name": "tag",
											"value": "96"
										},
										{
											"begin": 169,
											"end": 194,
											"name": "JUMPDEST"
										},
										{
											"begin": 169,
											"end": 194,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 169,
											"end": 194,
											"name": "SLOAD"
										},
										{
											"begin": 169,
											"end": 194,
											"name": "DUP2"
										},
										{
											"begin": 169,
											"end": 194,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2758,
											"end": 3137,
											"name": "tag",
											"value": "99"
										},
										{
											"begin": 2758,
											"end": 3137,
											"name": "JUMPDEST"
										},
										{
											"begin": 1350,
											"end": 1351,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1333,
											"end": 1346,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 1333,
											"end": 1346,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1333,
											"end": 1351,
											"name": "DUP3"
										},
										{
											"begin": 1333,
											"end": 1351,
											"name": "DUP3"
										},
										{
											"begin": 1333,
											"end": 1351,
											"name": "SLOAD"
										},
										{
											"begin": 1333,
											"end": 1351,
											"name": "ADD"
										},
										{
											"begin": 1333,
											"end": 1351,
											"name": "SWAP3"
										},
										{
											"begin": 1333,
											"end": 1351,
											"name": "POP"
										},
										{
											"begin": 1333,
											"end": 1351,
											"name": "POP"
										},
										{
											"begin": 1333,
											"end": 1351,
											"name": "DUP2"
										},
										{
											"begin": 1333,
											"end": 1351,
											"name": "SWAP1"
										},
										{
											"begin": 1333,
											"end": 1351,
											"name": "SSTORE"
										},
										{
											"begin": 1333,
											"end": 1351,
											"name": "POP"
										},
										{
											"begin": 1362,
											"end": 1382,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1385,
											"end": 1398,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 1385,
											"end": 1398,
											"name": "SLOAD"
										},
										{
											"begin": 1362,
											"end": 1398,
											"name": "SWAP1"
										},
										{
											"begin": 1362,
											"end": 1398,
											"name": "POP"
										},
										{
											"begin": 1192,
											"end": 1198,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 1192,
											"end": 1198,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1192,
											"end": 1198,
											"name": "SWAP1"
										},
										{
											"begin": 1192,
											"end": 1198,
											"name": "SLOAD"
										},
										{
											"begin": 1192,
											"end": 1198,
											"name": "SWAP1"
										},
										{
											"begin": 1192,
											"end": 1198,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1192,
											"end": 1198,
											"name": "EXP"
										},
										{
											"begin": 1192,
											"end": 1198,
											"name": "SWAP1"
										},
										{
											"begin": 1192,
											"end": 1198,
											"name": "DIV"
										},
										{
											"begin": 1192,
											"end": 1198,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1192,
											"end": 1198,
											"name": "AND"
										},
										{
											"begin": 1191,
											"end": 1198,
											"name": "ISZERO"
										},
										{
											"begin": 1183,
											"end": 1263,
											"name": "PUSH [tag]",
											"value": "197"
										},
										{
											"begin": 1183,
											"end": 1263,
											"name": "JUMPI"
										},
										{
											"begin": 1183,
											"end": 1263,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1183,
											"end": 1263,
											"name": "MLOAD"
										},
										{
											"begin": 1183,
											"end": 1263,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1183,
											"end": 1263,
											"name": "DUP2"
										},
										{
											"begin": 1183,
											"end": 1263,
											"name": "MSTORE"
										},
										{
											"begin": 1183,
											"end": 1263,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1183,
											"end": 1263,
											"name": "ADD"
										},
										{
											"begin": 1183,
											"end": 1263,
											"name": "DUP1"
										},
										{
											"begin": 1183,
											"end": 1263,
											"name": "DUP1"
										},
										{
											"begin": 1183,
											"end": 1263,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1183,
											"end": 1263,
											"name": "ADD"
										},
										{
											"begin": 1183,
											"end": 1263,
											"name": "DUP3"
										},
										{
											"begin": 1183,
											"end": 1263,
											"name": "DUP2"
										},
										{
											"begin": 1183,
											"end": 1263,
											"name": "SUB"
										},
										{
											"begin": 1183,
											"end": 1263,
											"name": "DUP3"
										},
										{
											"begin": 1183,
											"end": 1263,
											"name": "MSTORE"
										},
										{
											"begin": 1183,
											"end": 1263,
											"name": "PUSH",
											"value": "3C"
										},
										{
											"begin": 1183,
											"end": 1263,
											"name": "DUP2"
										},
										{
											"begin": 1183,
											"end": 1263,
											"name": "MSTORE"
										},
										{
											"begin": 1183,
											"end": 1263,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1183,
											"end": 1263,
											"name": "ADD"
										},
										{
											"begin": 1183,
											"end": 1263,
											"name": "DUP1"
										},
										{
											"begin": 1183,
											"end": 1263,
											"name": "PUSH data",
											"value": "B214273CDB244871F55E1966D43AD7FEBCE81860C609DDA0E226C7C1B7959D6F"
										},
										{
											"begin": 1183,
											"end": 1263,
											"name": "PUSH",
											"value": "3C"
										},
										{
											"begin": 1183,
											"end": 1263,
											"name": "SWAP2"
										},
										{
											"begin": 1183,
											"end": 1263,
											"name": "CODECOPY"
										},
										{
											"begin": 1183,
											"end": 1263,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1183,
											"end": 1263,
											"name": "ADD"
										},
										{
											"begin": 1183,
											"end": 1263,
											"name": "SWAP2"
										},
										{
											"begin": 1183,
											"end": 1263,
											"name": "POP"
										},
										{
											"begin": 1183,
											"end": 1263,
											"name": "POP"
										},
										{
											"begin": 1183,
											"end": 1263,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1183,
											"end": 1263,
											"name": "MLOAD"
										},
										{
											"begin": 1183,
											"end": 1263,
											"name": "DUP1"
										},
										{
											"begin": 1183,
											"end": 1263,
											"name": "SWAP2"
										},
										{
											"begin": 1183,
											"end": 1263,
											"name": "SUB"
										},
										{
											"begin": 1183,
											"end": 1263,
											"name": "SWAP1"
										},
										{
											"begin": 1183,
											"end": 1263,
											"name": "REVERT"
										},
										{
											"begin": 1183,
											"end": 1263,
											"name": "tag",
											"value": "197"
										},
										{
											"begin": 1183,
											"end": 1263,
											"name": "JUMPDEST"
										},
										{
											"begin": 2834,
											"end": 2844,
											"name": "CALLER"
										},
										{
											"begin": 5980,
											"end": 5996,
											"name": "PUSH [tag]",
											"value": "199"
										},
										{
											"begin": 5980,
											"end": 5994,
											"name": "PUSH [tag]",
											"value": "106"
										},
										{
											"begin": 5980,
											"end": 5996,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5980,
											"end": 5996,
											"name": "tag",
											"value": "199"
										},
										{
											"begin": 5980,
											"end": 5996,
											"name": "JUMPDEST"
										},
										{
											"begin": 5957,
											"end": 5977,
											"name": "PUSH",
											"value": "B"
										},
										{
											"begin": 5957,
											"end": 5996,
											"name": "DUP2"
										},
										{
											"begin": 5957,
											"end": 5996,
											"name": "SWAP1"
										},
										{
											"begin": 5957,
											"end": 5996,
											"name": "SSTORE"
										},
										{
											"begin": 5957,
											"end": 5996,
											"name": "POP"
										},
										{
											"begin": 6024,
											"end": 6050,
											"name": "PUSH [tag]",
											"value": "200"
										},
										{
											"begin": 6024,
											"end": 6048,
											"name": "PUSH [tag]",
											"value": "86"
										},
										{
											"begin": 6024,
											"end": 6050,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 6024,
											"end": 6050,
											"name": "tag",
											"value": "200"
										},
										{
											"begin": 6024,
											"end": 6050,
											"name": "JUMPDEST"
										},
										{
											"begin": 6007,
											"end": 6021,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 6007,
											"end": 6050,
											"name": "DUP2"
										},
										{
											"begin": 6007,
											"end": 6050,
											"name": "SWAP1"
										},
										{
											"begin": 6007,
											"end": 6050,
											"name": "SSTORE"
										},
										{
											"begin": 6007,
											"end": 6050,
											"name": "POP"
										},
										{
											"begin": 6084,
											"end": 6085,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6065,
											"end": 6086,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6065,
											"end": 6086,
											"name": "AND"
										},
										{
											"begin": 6065,
											"end": 6072,
											"name": "DUP2"
										},
										{
											"begin": 6065,
											"end": 6086,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6065,
											"end": 6086,
											"name": "AND"
										},
										{
											"begin": 6065,
											"end": 6086,
											"name": "EQ"
										},
										{
											"begin": 6061,
											"end": 6218,
											"name": "PUSH [tag]",
											"value": "201"
										},
										{
											"begin": 6061,
											"end": 6218,
											"name": "JUMPI"
										},
										{
											"begin": 6122,
											"end": 6137,
											"name": "PUSH [tag]",
											"value": "202"
										},
										{
											"begin": 6129,
											"end": 6136,
											"name": "DUP2"
										},
										{
											"begin": 6122,
											"end": 6128,
											"name": "PUSH [tag]",
											"value": "43"
										},
										{
											"begin": 6122,
											"end": 6137,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 6122,
											"end": 6137,
											"name": "tag",
											"value": "202"
										},
										{
											"begin": 6122,
											"end": 6137,
											"name": "JUMPDEST"
										},
										{
											"begin": 6103,
											"end": 6110,
											"name": "PUSH",
											"value": "D"
										},
										{
											"begin": 6103,
											"end": 6119,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6111,
											"end": 6118,
											"name": "DUP4"
										},
										{
											"begin": 6103,
											"end": 6119,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6103,
											"end": 6119,
											"name": "AND"
										},
										{
											"begin": 6103,
											"end": 6119,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6103,
											"end": 6119,
											"name": "AND"
										},
										{
											"begin": 6103,
											"end": 6119,
											"name": "DUP2"
										},
										{
											"begin": 6103,
											"end": 6119,
											"name": "MSTORE"
										},
										{
											"begin": 6103,
											"end": 6119,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6103,
											"end": 6119,
											"name": "ADD"
										},
										{
											"begin": 6103,
											"end": 6119,
											"name": "SWAP1"
										},
										{
											"begin": 6103,
											"end": 6119,
											"name": "DUP2"
										},
										{
											"begin": 6103,
											"end": 6119,
											"name": "MSTORE"
										},
										{
											"begin": 6103,
											"end": 6119,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6103,
											"end": 6119,
											"name": "ADD"
										},
										{
											"begin": 6103,
											"end": 6119,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6103,
											"end": 6119,
											"name": "KECCAK256"
										},
										{
											"begin": 6103,
											"end": 6137,
											"name": "DUP2"
										},
										{
											"begin": 6103,
											"end": 6137,
											"name": "SWAP1"
										},
										{
											"begin": 6103,
											"end": 6137,
											"name": "SSTORE"
										},
										{
											"begin": 6103,
											"end": 6137,
											"name": "POP"
										},
										{
											"begin": 6186,
											"end": 6206,
											"name": "PUSH",
											"value": "B"
										},
										{
											"begin": 6186,
											"end": 6206,
											"name": "SLOAD"
										},
										{
											"begin": 6152,
											"end": 6174,
											"name": "PUSH",
											"value": "C"
										},
										{
											"begin": 6152,
											"end": 6183,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6175,
											"end": 6182,
											"name": "DUP4"
										},
										{
											"begin": 6152,
											"end": 6183,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6152,
											"end": 6183,
											"name": "AND"
										},
										{
											"begin": 6152,
											"end": 6183,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6152,
											"end": 6183,
											"name": "AND"
										},
										{
											"begin": 6152,
											"end": 6183,
											"name": "DUP2"
										},
										{
											"begin": 6152,
											"end": 6183,
											"name": "MSTORE"
										},
										{
											"begin": 6152,
											"end": 6183,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6152,
											"end": 6183,
											"name": "ADD"
										},
										{
											"begin": 6152,
											"end": 6183,
											"name": "SWAP1"
										},
										{
											"begin": 6152,
											"end": 6183,
											"name": "DUP2"
										},
										{
											"begin": 6152,
											"end": 6183,
											"name": "MSTORE"
										},
										{
											"begin": 6152,
											"end": 6183,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6152,
											"end": 6183,
											"name": "ADD"
										},
										{
											"begin": 6152,
											"end": 6183,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6152,
											"end": 6183,
											"name": "KECCAK256"
										},
										{
											"begin": 6152,
											"end": 6206,
											"name": "DUP2"
										},
										{
											"begin": 6152,
											"end": 6206,
											"name": "SWAP1"
										},
										{
											"begin": 6152,
											"end": 6206,
											"name": "SSTORE"
										},
										{
											"begin": 6152,
											"end": 6206,
											"name": "POP"
										},
										{
											"begin": 6061,
											"end": 6218,
											"name": "tag",
											"value": "201"
										},
										{
											"begin": 6061,
											"end": 6218,
											"name": "JUMPDEST"
										},
										{
											"begin": 2874,
											"end": 2875,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2865,
											"end": 2871,
											"name": "DUP4"
										},
										{
											"begin": 2865,
											"end": 2875,
											"name": "GT"
										},
										{
											"begin": 2857,
											"end": 2894,
											"name": "PUSH [tag]",
											"value": "204"
										},
										{
											"begin": 2857,
											"end": 2894,
											"name": "JUMPI"
										},
										{
											"begin": 2857,
											"end": 2894,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2857,
											"end": 2894,
											"name": "MLOAD"
										},
										{
											"begin": 2857,
											"end": 2894,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2857,
											"end": 2894,
											"name": "DUP2"
										},
										{
											"begin": 2857,
											"end": 2894,
											"name": "MSTORE"
										},
										{
											"begin": 2857,
											"end": 2894,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2857,
											"end": 2894,
											"name": "ADD"
										},
										{
											"begin": 2857,
											"end": 2894,
											"name": "DUP1"
										},
										{
											"begin": 2857,
											"end": 2894,
											"name": "DUP1"
										},
										{
											"begin": 2857,
											"end": 2894,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2857,
											"end": 2894,
											"name": "ADD"
										},
										{
											"begin": 2857,
											"end": 2894,
											"name": "DUP3"
										},
										{
											"begin": 2857,
											"end": 2894,
											"name": "DUP2"
										},
										{
											"begin": 2857,
											"end": 2894,
											"name": "SUB"
										},
										{
											"begin": 2857,
											"end": 2894,
											"name": "DUP3"
										},
										{
											"begin": 2857,
											"end": 2894,
											"name": "MSTORE"
										},
										{
											"begin": 2857,
											"end": 2894,
											"name": "PUSH",
											"value": "E"
										},
										{
											"begin": 2857,
											"end": 2894,
											"name": "DUP2"
										},
										{
											"begin": 2857,
											"end": 2894,
											"name": "MSTORE"
										},
										{
											"begin": 2857,
											"end": 2894,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2857,
											"end": 2894,
											"name": "ADD"
										},
										{
											"begin": 2857,
											"end": 2894,
											"name": "DUP1"
										},
										{
											"begin": 2857,
											"end": 2894,
											"name": "PUSH",
											"value": "43616E6E6F74207374616B652030000000000000000000000000000000000000"
										},
										{
											"begin": 2857,
											"end": 2894,
											"name": "DUP2"
										},
										{
											"begin": 2857,
											"end": 2894,
											"name": "MSTORE"
										},
										{
											"begin": 2857,
											"end": 2894,
											"name": "POP"
										},
										{
											"begin": 2857,
											"end": 2894,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2857,
											"end": 2894,
											"name": "ADD"
										},
										{
											"begin": 2857,
											"end": 2894,
											"name": "SWAP2"
										},
										{
											"begin": 2857,
											"end": 2894,
											"name": "POP"
										},
										{
											"begin": 2857,
											"end": 2894,
											"name": "POP"
										},
										{
											"begin": 2857,
											"end": 2894,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2857,
											"end": 2894,
											"name": "MLOAD"
										},
										{
											"begin": 2857,
											"end": 2894,
											"name": "DUP1"
										},
										{
											"begin": 2857,
											"end": 2894,
											"name": "SWAP2"
										},
										{
											"begin": 2857,
											"end": 2894,
											"name": "SUB"
										},
										{
											"begin": 2857,
											"end": 2894,
											"name": "SWAP1"
										},
										{
											"begin": 2857,
											"end": 2894,
											"name": "REVERT"
										},
										{
											"begin": 2857,
											"end": 2894,
											"name": "tag",
											"value": "204"
										},
										{
											"begin": 2857,
											"end": 2894,
											"name": "JUMPDEST"
										},
										{
											"begin": 2920,
											"end": 2944,
											"name": "PUSH [tag]",
											"value": "205"
										},
										{
											"begin": 2937,
											"end": 2943,
											"name": "DUP4"
										},
										{
											"begin": 2920,
											"end": 2932,
											"name": "PUSH",
											"value": "E"
										},
										{
											"begin": 2920,
											"end": 2932,
											"name": "SLOAD"
										},
										{
											"begin": 2920,
											"end": 2936,
											"name": "PUSH [tag]",
											"value": "124"
										},
										{
											"begin": 2920,
											"end": 2936,
											"name": "SWAP1"
										},
										{
											"begin": 2920,
											"end": 2944,
											"name": "SWAP2"
										},
										{
											"begin": 2920,
											"end": 2944,
											"name": "SWAP1"
										},
										{
											"begin": 2920,
											"end": 2944,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 2920,
											"end": 2944,
											"name": "AND"
										},
										{
											"begin": 2920,
											"end": 2944,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2920,
											"end": 2944,
											"name": "tag",
											"value": "205"
										},
										{
											"begin": 2920,
											"end": 2944,
											"name": "JUMPDEST"
										},
										{
											"begin": 2905,
											"end": 2917,
											"name": "PUSH",
											"value": "E"
										},
										{
											"begin": 2905,
											"end": 2944,
											"name": "DUP2"
										},
										{
											"begin": 2905,
											"end": 2944,
											"name": "SWAP1"
										},
										{
											"begin": 2905,
											"end": 2944,
											"name": "SSTORE"
										},
										{
											"begin": 2905,
											"end": 2944,
											"name": "POP"
										},
										{
											"begin": 2979,
											"end": 3012,
											"name": "PUSH [tag]",
											"value": "206"
										},
										{
											"begin": 3005,
											"end": 3011,
											"name": "DUP4"
										},
										{
											"begin": 2979,
											"end": 2988,
											"name": "PUSH",
											"value": "F"
										},
										{
											"begin": 2979,
											"end": 3000,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2989,
											"end": 2999,
											"name": "CALLER"
										},
										{
											"begin": 2979,
											"end": 3000,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2979,
											"end": 3000,
											"name": "AND"
										},
										{
											"begin": 2979,
											"end": 3000,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2979,
											"end": 3000,
											"name": "AND"
										},
										{
											"begin": 2979,
											"end": 3000,
											"name": "DUP2"
										},
										{
											"begin": 2979,
											"end": 3000,
											"name": "MSTORE"
										},
										{
											"begin": 2979,
											"end": 3000,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2979,
											"end": 3000,
											"name": "ADD"
										},
										{
											"begin": 2979,
											"end": 3000,
											"name": "SWAP1"
										},
										{
											"begin": 2979,
											"end": 3000,
											"name": "DUP2"
										},
										{
											"begin": 2979,
											"end": 3000,
											"name": "MSTORE"
										},
										{
											"begin": 2979,
											"end": 3000,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2979,
											"end": 3000,
											"name": "ADD"
										},
										{
											"begin": 2979,
											"end": 3000,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2979,
											"end": 3000,
											"name": "KECCAK256"
										},
										{
											"begin": 2979,
											"end": 3000,
											"name": "SLOAD"
										},
										{
											"begin": 2979,
											"end": 3004,
											"name": "PUSH [tag]",
											"value": "124"
										},
										{
											"begin": 2979,
											"end": 3004,
											"name": "SWAP1"
										},
										{
											"begin": 2979,
											"end": 3012,
											"name": "SWAP2"
										},
										{
											"begin": 2979,
											"end": 3012,
											"name": "SWAP1"
										},
										{
											"begin": 2979,
											"end": 3012,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 2979,
											"end": 3012,
											"name": "AND"
										},
										{
											"begin": 2979,
											"end": 3012,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2979,
											"end": 3012,
											"name": "tag",
											"value": "206"
										},
										{
											"begin": 2979,
											"end": 3012,
											"name": "JUMPDEST"
										},
										{
											"begin": 2955,
											"end": 2964,
											"name": "PUSH",
											"value": "F"
										},
										{
											"begin": 2955,
											"end": 2976,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2965,
											"end": 2975,
											"name": "CALLER"
										},
										{
											"begin": 2955,
											"end": 2976,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2955,
											"end": 2976,
											"name": "AND"
										},
										{
											"begin": 2955,
											"end": 2976,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2955,
											"end": 2976,
											"name": "AND"
										},
										{
											"begin": 2955,
											"end": 2976,
											"name": "DUP2"
										},
										{
											"begin": 2955,
											"end": 2976,
											"name": "MSTORE"
										},
										{
											"begin": 2955,
											"end": 2976,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2955,
											"end": 2976,
											"name": "ADD"
										},
										{
											"begin": 2955,
											"end": 2976,
											"name": "SWAP1"
										},
										{
											"begin": 2955,
											"end": 2976,
											"name": "DUP2"
										},
										{
											"begin": 2955,
											"end": 2976,
											"name": "MSTORE"
										},
										{
											"begin": 2955,
											"end": 2976,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2955,
											"end": 2976,
											"name": "ADD"
										},
										{
											"begin": 2955,
											"end": 2976,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2955,
											"end": 2976,
											"name": "KECCAK256"
										},
										{
											"begin": 2955,
											"end": 3012,
											"name": "DUP2"
										},
										{
											"begin": 2955,
											"end": 3012,
											"name": "SWAP1"
										},
										{
											"begin": 2955,
											"end": 3012,
											"name": "SSTORE"
										},
										{
											"begin": 2955,
											"end": 3012,
											"name": "POP"
										},
										{
											"begin": 3023,
											"end": 3087,
											"name": "PUSH [tag]",
											"value": "207"
										},
										{
											"begin": 3053,
											"end": 3063,
											"name": "CALLER"
										},
										{
											"begin": 3073,
											"end": 3077,
											"name": "ADDRESS"
										},
										{
											"begin": 3080,
											"end": 3086,
											"name": "DUP6"
										},
										{
											"begin": 3023,
											"end": 3035,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 3023,
											"end": 3035,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3023,
											"end": 3035,
											"name": "SWAP1"
										},
										{
											"begin": 3023,
											"end": 3035,
											"name": "SLOAD"
										},
										{
											"begin": 3023,
											"end": 3035,
											"name": "SWAP1"
										},
										{
											"begin": 3023,
											"end": 3035,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 3023,
											"end": 3035,
											"name": "EXP"
										},
										{
											"begin": 3023,
											"end": 3035,
											"name": "SWAP1"
										},
										{
											"begin": 3023,
											"end": 3035,
											"name": "DIV"
										},
										{
											"begin": 3023,
											"end": 3035,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3023,
											"end": 3035,
											"name": "AND"
										},
										{
											"begin": 3023,
											"end": 3052,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3023,
											"end": 3052,
											"name": "AND"
										},
										{
											"begin": 3023,
											"end": 3052,
											"name": "PUSH [tag]",
											"value": "208"
										},
										{
											"begin": 3023,
											"end": 3052,
											"name": "SWAP1"
										},
										{
											"begin": 3023,
											"end": 3087,
											"name": "SWAP4"
										},
										{
											"begin": 3023,
											"end": 3087,
											"name": "SWAP3"
										},
										{
											"begin": 3023,
											"end": 3087,
											"name": "SWAP2"
										},
										{
											"begin": 3023,
											"end": 3087,
											"name": "SWAP1"
										},
										{
											"begin": 3023,
											"end": 3087,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 3023,
											"end": 3087,
											"name": "AND"
										},
										{
											"begin": 3023,
											"end": 3087,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3023,
											"end": 3087,
											"name": "tag",
											"value": "207"
										},
										{
											"begin": 3023,
											"end": 3087,
											"name": "JUMPDEST"
										},
										{
											"begin": 3110,
											"end": 3120,
											"name": "CALLER"
										},
										{
											"begin": 3103,
											"end": 3129,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3103,
											"end": 3129,
											"name": "AND"
										},
										{
											"begin": 3103,
											"end": 3129,
											"name": "PUSH",
											"value": "9E71BC8EEA02A63969F509818F2DAFB9254532904319F9DBDA79B67BD34A5F3D"
										},
										{
											"begin": 3122,
											"end": 3128,
											"name": "DUP5"
										},
										{
											"begin": 3103,
											"end": 3129,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3103,
											"end": 3129,
											"name": "MLOAD"
										},
										{
											"begin": 3103,
											"end": 3129,
											"name": "DUP1"
										},
										{
											"begin": 3103,
											"end": 3129,
											"name": "DUP3"
										},
										{
											"begin": 3103,
											"end": 3129,
											"name": "DUP2"
										},
										{
											"begin": 3103,
											"end": 3129,
											"name": "MSTORE"
										},
										{
											"begin": 3103,
											"end": 3129,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3103,
											"end": 3129,
											"name": "ADD"
										},
										{
											"begin": 3103,
											"end": 3129,
											"name": "SWAP2"
										},
										{
											"begin": 3103,
											"end": 3129,
											"name": "POP"
										},
										{
											"begin": 3103,
											"end": 3129,
											"name": "POP"
										},
										{
											"begin": 3103,
											"end": 3129,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3103,
											"end": 3129,
											"name": "MLOAD"
										},
										{
											"begin": 3103,
											"end": 3129,
											"name": "DUP1"
										},
										{
											"begin": 3103,
											"end": 3129,
											"name": "SWAP2"
										},
										{
											"begin": 3103,
											"end": 3129,
											"name": "SUB"
										},
										{
											"begin": 3103,
											"end": 3129,
											"name": "SWAP1"
										},
										{
											"begin": 3103,
											"end": 3129,
											"name": "LOG2"
										},
										{
											"begin": 1274,
											"end": 1275,
											"name": "POP"
										},
										{
											"begin": 1445,
											"end": 1458,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 1445,
											"end": 1458,
											"name": "SLOAD"
										},
										{
											"begin": 1429,
											"end": 1441,
											"name": "DUP2"
										},
										{
											"begin": 1429,
											"end": 1458,
											"name": "EQ"
										},
										{
											"begin": 1421,
											"end": 1494,
											"name": "PUSH [tag]",
											"value": "209"
										},
										{
											"begin": 1421,
											"end": 1494,
											"name": "JUMPI"
										},
										{
											"begin": 1421,
											"end": 1494,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1421,
											"end": 1494,
											"name": "MLOAD"
										},
										{
											"begin": 1421,
											"end": 1494,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1421,
											"end": 1494,
											"name": "DUP2"
										},
										{
											"begin": 1421,
											"end": 1494,
											"name": "MSTORE"
										},
										{
											"begin": 1421,
											"end": 1494,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1421,
											"end": 1494,
											"name": "ADD"
										},
										{
											"begin": 1421,
											"end": 1494,
											"name": "DUP1"
										},
										{
											"begin": 1421,
											"end": 1494,
											"name": "DUP1"
										},
										{
											"begin": 1421,
											"end": 1494,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1421,
											"end": 1494,
											"name": "ADD"
										},
										{
											"begin": 1421,
											"end": 1494,
											"name": "DUP3"
										},
										{
											"begin": 1421,
											"end": 1494,
											"name": "DUP2"
										},
										{
											"begin": 1421,
											"end": 1494,
											"name": "SUB"
										},
										{
											"begin": 1421,
											"end": 1494,
											"name": "DUP3"
										},
										{
											"begin": 1421,
											"end": 1494,
											"name": "MSTORE"
										},
										{
											"begin": 1421,
											"end": 1494,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 1421,
											"end": 1494,
											"name": "DUP2"
										},
										{
											"begin": 1421,
											"end": 1494,
											"name": "MSTORE"
										},
										{
											"begin": 1421,
											"end": 1494,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1421,
											"end": 1494,
											"name": "ADD"
										},
										{
											"begin": 1421,
											"end": 1494,
											"name": "DUP1"
										},
										{
											"begin": 1421,
											"end": 1494,
											"name": "PUSH",
											"value": "5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
										},
										{
											"begin": 1421,
											"end": 1494,
											"name": "DUP2"
										},
										{
											"begin": 1421,
											"end": 1494,
											"name": "MSTORE"
										},
										{
											"begin": 1421,
											"end": 1494,
											"name": "POP"
										},
										{
											"begin": 1421,
											"end": 1494,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1421,
											"end": 1494,
											"name": "ADD"
										},
										{
											"begin": 1421,
											"end": 1494,
											"name": "SWAP2"
										},
										{
											"begin": 1421,
											"end": 1494,
											"name": "POP"
										},
										{
											"begin": 1421,
											"end": 1494,
											"name": "POP"
										},
										{
											"begin": 1421,
											"end": 1494,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1421,
											"end": 1494,
											"name": "MLOAD"
										},
										{
											"begin": 1421,
											"end": 1494,
											"name": "DUP1"
										},
										{
											"begin": 1421,
											"end": 1494,
											"name": "SWAP2"
										},
										{
											"begin": 1421,
											"end": 1494,
											"name": "SUB"
										},
										{
											"begin": 1421,
											"end": 1494,
											"name": "SWAP1"
										},
										{
											"begin": 1421,
											"end": 1494,
											"name": "REVERT"
										},
										{
											"begin": 1421,
											"end": 1494,
											"name": "tag",
											"value": "209"
										},
										{
											"begin": 1421,
											"end": 1494,
											"name": "JUMPDEST"
										},
										{
											"begin": 2758,
											"end": 3137,
											"name": "POP"
										},
										{
											"begin": 2758,
											"end": 3137,
											"name": "POP"
										},
										{
											"begin": 2758,
											"end": 3137,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 944,
											"end": 973,
											"name": "tag",
											"value": "101"
										},
										{
											"begin": 944,
											"end": 973,
											"name": "JUMPDEST"
										},
										{
											"begin": 944,
											"end": 973,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 944,
											"end": 973,
											"name": "SLOAD"
										},
										{
											"begin": 944,
											"end": 973,
											"name": "DUP2"
										},
										{
											"begin": 944,
											"end": 973,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 5494,
											"end": 5854,
											"name": "tag",
											"value": "104"
										},
										{
											"begin": 5494,
											"end": 5854,
											"name": "JUMPDEST"
										},
										{
											"begin": 829,
											"end": 841,
											"name": "PUSH [tag]",
											"value": "211"
										},
										{
											"begin": 829,
											"end": 839,
											"name": "PUSH [tag]",
											"value": "127"
										},
										{
											"begin": 829,
											"end": 841,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 829,
											"end": 841,
											"name": "tag",
											"value": "211"
										},
										{
											"begin": 829,
											"end": 841,
											"name": "JUMPDEST"
										},
										{
											"begin": 5618,
											"end": 5630,
											"name": "PUSH",
											"value": "7"
										},
										{
											"begin": 5618,
											"end": 5630,
											"name": "SLOAD"
										},
										{
											"begin": 5600,
											"end": 5615,
											"name": "TIMESTAMP"
										},
										{
											"begin": 5600,
											"end": 5630,
											"name": "GT"
										},
										{
											"begin": 5578,
											"end": 5746,
											"name": "PUSH [tag]",
											"value": "213"
										},
										{
											"begin": 5578,
											"end": 5746,
											"name": "JUMPI"
										},
										{
											"begin": 5578,
											"end": 5746,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5578,
											"end": 5746,
											"name": "MLOAD"
										},
										{
											"begin": 5578,
											"end": 5746,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5578,
											"end": 5746,
											"name": "DUP2"
										},
										{
											"begin": 5578,
											"end": 5746,
											"name": "MSTORE"
										},
										{
											"begin": 5578,
											"end": 5746,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 5578,
											"end": 5746,
											"name": "ADD"
										},
										{
											"begin": 5578,
											"end": 5746,
											"name": "DUP1"
										},
										{
											"begin": 5578,
											"end": 5746,
											"name": "DUP1"
										},
										{
											"begin": 5578,
											"end": 5746,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5578,
											"end": 5746,
											"name": "ADD"
										},
										{
											"begin": 5578,
											"end": 5746,
											"name": "DUP3"
										},
										{
											"begin": 5578,
											"end": 5746,
											"name": "DUP2"
										},
										{
											"begin": 5578,
											"end": 5746,
											"name": "SUB"
										},
										{
											"begin": 5578,
											"end": 5746,
											"name": "DUP3"
										},
										{
											"begin": 5578,
											"end": 5746,
											"name": "MSTORE"
										},
										{
											"begin": 5578,
											"end": 5746,
											"name": "PUSH",
											"value": "58"
										},
										{
											"begin": 5578,
											"end": 5746,
											"name": "DUP2"
										},
										{
											"begin": 5578,
											"end": 5746,
											"name": "MSTORE"
										},
										{
											"begin": 5578,
											"end": 5746,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5578,
											"end": 5746,
											"name": "ADD"
										},
										{
											"begin": 5578,
											"end": 5746,
											"name": "DUP1"
										},
										{
											"begin": 5578,
											"end": 5746,
											"name": "PUSH data",
											"value": "7F2725172F5941B576A01EC7036D341E0C837E280F27B110CB3E6FD2F2C4A56"
										},
										{
											"begin": 5578,
											"end": 5746,
											"name": "PUSH",
											"value": "58"
										},
										{
											"begin": 5578,
											"end": 5746,
											"name": "SWAP2"
										},
										{
											"begin": 5578,
											"end": 5746,
											"name": "CODECOPY"
										},
										{
											"begin": 5578,
											"end": 5746,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 5578,
											"end": 5746,
											"name": "ADD"
										},
										{
											"begin": 5578,
											"end": 5746,
											"name": "SWAP2"
										},
										{
											"begin": 5578,
											"end": 5746,
											"name": "POP"
										},
										{
											"begin": 5578,
											"end": 5746,
											"name": "POP"
										},
										{
											"begin": 5578,
											"end": 5746,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5578,
											"end": 5746,
											"name": "MLOAD"
										},
										{
											"begin": 5578,
											"end": 5746,
											"name": "DUP1"
										},
										{
											"begin": 5578,
											"end": 5746,
											"name": "SWAP2"
										},
										{
											"begin": 5578,
											"end": 5746,
											"name": "SUB"
										},
										{
											"begin": 5578,
											"end": 5746,
											"name": "SWAP1"
										},
										{
											"begin": 5578,
											"end": 5746,
											"name": "REVERT"
										},
										{
											"begin": 5578,
											"end": 5746,
											"name": "tag",
											"value": "213"
										},
										{
											"begin": 5578,
											"end": 5746,
											"name": "JUMPDEST"
										},
										{
											"begin": 5775,
											"end": 5791,
											"name": "DUP1"
										},
										{
											"begin": 5757,
											"end": 5772,
											"name": "PUSH",
											"value": "9"
										},
										{
											"begin": 5757,
											"end": 5791,
											"name": "DUP2"
										},
										{
											"begin": 5757,
											"end": 5791,
											"name": "SWAP1"
										},
										{
											"begin": 5757,
											"end": 5791,
											"name": "SSTORE"
										},
										{
											"begin": 5757,
											"end": 5791,
											"name": "POP"
										},
										{
											"begin": 5807,
											"end": 5846,
											"name": "PUSH",
											"value": "FB46CA5A5E06D4540D6387B930A7C978BCE0DB5F449EC6B3F5D07C6E1D44F2D3"
										},
										{
											"begin": 5830,
											"end": 5845,
											"name": "PUSH",
											"value": "9"
										},
										{
											"begin": 5830,
											"end": 5845,
											"name": "SLOAD"
										},
										{
											"begin": 5807,
											"end": 5846,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5807,
											"end": 5846,
											"name": "MLOAD"
										},
										{
											"begin": 5807,
											"end": 5846,
											"name": "DUP1"
										},
										{
											"begin": 5807,
											"end": 5846,
											"name": "DUP3"
										},
										{
											"begin": 5807,
											"end": 5846,
											"name": "DUP2"
										},
										{
											"begin": 5807,
											"end": 5846,
											"name": "MSTORE"
										},
										{
											"begin": 5807,
											"end": 5846,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5807,
											"end": 5846,
											"name": "ADD"
										},
										{
											"begin": 5807,
											"end": 5846,
											"name": "SWAP2"
										},
										{
											"begin": 5807,
											"end": 5846,
											"name": "POP"
										},
										{
											"begin": 5807,
											"end": 5846,
											"name": "POP"
										},
										{
											"begin": 5807,
											"end": 5846,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5807,
											"end": 5846,
											"name": "MLOAD"
										},
										{
											"begin": 5807,
											"end": 5846,
											"name": "DUP1"
										},
										{
											"begin": 5807,
											"end": 5846,
											"name": "SWAP2"
										},
										{
											"begin": 5807,
											"end": 5846,
											"name": "SUB"
										},
										{
											"begin": 5807,
											"end": 5846,
											"name": "SWAP1"
										},
										{
											"begin": 5807,
											"end": 5846,
											"name": "LOG1"
										},
										{
											"begin": 5494,
											"end": 5854,
											"name": "POP"
										},
										{
											"begin": 5494,
											"end": 5854,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2031,
											"end": 2361,
											"name": "tag",
											"value": "106"
										},
										{
											"begin": 2031,
											"end": 2361,
											"name": "JUMPDEST"
										},
										{
											"begin": 2078,
											"end": 2085,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2118,
											"end": 2119,
											"name": "DUP1"
										},
										{
											"begin": 2102,
											"end": 2114,
											"name": "PUSH",
											"value": "E"
										},
										{
											"begin": 2102,
											"end": 2114,
											"name": "SLOAD"
										},
										{
											"begin": 2102,
											"end": 2119,
											"name": "EQ"
										},
										{
											"begin": 2098,
											"end": 2175,
											"name": "ISZERO"
										},
										{
											"begin": 2098,
											"end": 2175,
											"name": "PUSH [tag]",
											"value": "215"
										},
										{
											"begin": 2098,
											"end": 2175,
											"name": "JUMPI"
										},
										{
											"begin": 2143,
											"end": 2163,
											"name": "PUSH",
											"value": "B"
										},
										{
											"begin": 2143,
											"end": 2163,
											"name": "SLOAD"
										},
										{
											"begin": 2136,
											"end": 2163,
											"name": "SWAP1"
										},
										{
											"begin": 2136,
											"end": 2163,
											"name": "POP"
										},
										{
											"begin": 2136,
											"end": 2163,
											"name": "PUSH [tag]",
											"value": "214"
										},
										{
											"begin": 2136,
											"end": 2163,
											"name": "JUMP"
										},
										{
											"begin": 2098,
											"end": 2175,
											"name": "tag",
											"value": "215"
										},
										{
											"begin": 2098,
											"end": 2175,
											"name": "JUMPDEST"
										},
										{
											"begin": 2205,
											"end": 2353,
											"name": "PUSH [tag]",
											"value": "216"
										},
										{
											"begin": 2248,
											"end": 2338,
											"name": "PUSH [tag]",
											"value": "217"
										},
										{
											"begin": 2325,
											"end": 2337,
											"name": "PUSH",
											"value": "E"
										},
										{
											"begin": 2325,
											"end": 2337,
											"name": "SLOAD"
										},
										{
											"begin": 2248,
											"end": 2320,
											"name": "PUSH [tag]",
											"value": "218"
										},
										{
											"begin": 2315,
											"end": 2319,
											"name": "PUSH",
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 2248,
											"end": 2310,
											"name": "PUSH [tag]",
											"value": "219"
										},
										{
											"begin": 2299,
											"end": 2309,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 2299,
											"end": 2309,
											"name": "SLOAD"
										},
										{
											"begin": 2248,
											"end": 2294,
											"name": "PUSH [tag]",
											"value": "220"
										},
										{
											"begin": 2279,
											"end": 2293,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 2279,
											"end": 2293,
											"name": "SLOAD"
										},
										{
											"begin": 2248,
											"end": 2274,
											"name": "PUSH [tag]",
											"value": "221"
										},
										{
											"begin": 2248,
											"end": 2272,
											"name": "PUSH [tag]",
											"value": "86"
										},
										{
											"begin": 2248,
											"end": 2274,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2248,
											"end": 2274,
											"name": "tag",
											"value": "221"
										},
										{
											"begin": 2248,
											"end": 2274,
											"name": "JUMPDEST"
										},
										{
											"begin": 2248,
											"end": 2278,
											"name": "PUSH [tag]",
											"value": "121"
										},
										{
											"begin": 2248,
											"end": 2278,
											"name": "SWAP1"
										},
										{
											"begin": 2248,
											"end": 2294,
											"name": "SWAP2"
										},
										{
											"begin": 2248,
											"end": 2294,
											"name": "SWAP1"
										},
										{
											"begin": 2248,
											"end": 2294,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 2248,
											"end": 2294,
											"name": "AND"
										},
										{
											"begin": 2248,
											"end": 2294,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2248,
											"end": 2294,
											"name": "tag",
											"value": "220"
										},
										{
											"begin": 2248,
											"end": 2294,
											"name": "JUMPDEST"
										},
										{
											"begin": 2248,
											"end": 2298,
											"name": "PUSH [tag]",
											"value": "122"
										},
										{
											"begin": 2248,
											"end": 2298,
											"name": "SWAP1"
										},
										{
											"begin": 2248,
											"end": 2310,
											"name": "SWAP2"
										},
										{
											"begin": 2248,
											"end": 2310,
											"name": "SWAP1"
										},
										{
											"begin": 2248,
											"end": 2310,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 2248,
											"end": 2310,
											"name": "AND"
										},
										{
											"begin": 2248,
											"end": 2310,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2248,
											"end": 2310,
											"name": "tag",
											"value": "219"
										},
										{
											"begin": 2248,
											"end": 2310,
											"name": "JUMPDEST"
										},
										{
											"begin": 2248,
											"end": 2314,
											"name": "PUSH [tag]",
											"value": "122"
										},
										{
											"begin": 2248,
											"end": 2314,
											"name": "SWAP1"
										},
										{
											"begin": 2248,
											"end": 2320,
											"name": "SWAP2"
										},
										{
											"begin": 2248,
											"end": 2320,
											"name": "SWAP1"
										},
										{
											"begin": 2248,
											"end": 2320,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 2248,
											"end": 2320,
											"name": "AND"
										},
										{
											"begin": 2248,
											"end": 2320,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2248,
											"end": 2320,
											"name": "tag",
											"value": "218"
										},
										{
											"begin": 2248,
											"end": 2320,
											"name": "JUMPDEST"
										},
										{
											"begin": 2248,
											"end": 2324,
											"name": "PUSH [tag]",
											"value": "123"
										},
										{
											"begin": 2248,
											"end": 2324,
											"name": "SWAP1"
										},
										{
											"begin": 2248,
											"end": 2338,
											"name": "SWAP2"
										},
										{
											"begin": 2248,
											"end": 2338,
											"name": "SWAP1"
										},
										{
											"begin": 2248,
											"end": 2338,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 2248,
											"end": 2338,
											"name": "AND"
										},
										{
											"begin": 2248,
											"end": 2338,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2248,
											"end": 2338,
											"name": "tag",
											"value": "217"
										},
										{
											"begin": 2248,
											"end": 2338,
											"name": "JUMPDEST"
										},
										{
											"begin": 2205,
											"end": 2225,
											"name": "PUSH",
											"value": "B"
										},
										{
											"begin": 2205,
											"end": 2225,
											"name": "SLOAD"
										},
										{
											"begin": 2205,
											"end": 2229,
											"name": "PUSH [tag]",
											"value": "124"
										},
										{
											"begin": 2205,
											"end": 2229,
											"name": "SWAP1"
										},
										{
											"begin": 2205,
											"end": 2353,
											"name": "SWAP2"
										},
										{
											"begin": 2205,
											"end": 2353,
											"name": "SWAP1"
										},
										{
											"begin": 2205,
											"end": 2353,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 2205,
											"end": 2353,
											"name": "AND"
										},
										{
											"begin": 2205,
											"end": 2353,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2205,
											"end": 2353,
											"name": "tag",
											"value": "216"
										},
										{
											"begin": 2205,
											"end": 2353,
											"name": "JUMPDEST"
										},
										{
											"begin": 2185,
											"end": 2353,
											"name": "SWAP1"
										},
										{
											"begin": 2185,
											"end": 2353,
											"name": "POP"
										},
										{
											"begin": 2031,
											"end": 2361,
											"name": "tag",
											"value": "214"
										},
										{
											"begin": 2031,
											"end": 2361,
											"name": "JUMPDEST"
										},
										{
											"begin": 2031,
											"end": 2361,
											"name": "SWAP1"
										},
										{
											"begin": 2031,
											"end": 2361,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 758,
											"end": 784,
											"name": "tag",
											"value": "108"
										},
										{
											"begin": 758,
											"end": 784,
											"name": "JUMPDEST"
										},
										{
											"begin": 758,
											"end": 784,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 758,
											"end": 784,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 758,
											"end": 784,
											"name": "SWAP1"
										},
										{
											"begin": 758,
											"end": 784,
											"name": "SLOAD"
										},
										{
											"begin": 758,
											"end": 784,
											"name": "SWAP1"
										},
										{
											"begin": 758,
											"end": 784,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 758,
											"end": 784,
											"name": "EXP"
										},
										{
											"begin": 758,
											"end": 784,
											"name": "SWAP1"
										},
										{
											"begin": 758,
											"end": 784,
											"name": "DIV"
										},
										{
											"begin": 758,
											"end": 784,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 758,
											"end": 784,
											"name": "AND"
										},
										{
											"begin": 758,
											"end": 784,
											"name": "DUP2"
										},
										{
											"begin": 758,
											"end": 784,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 980,
											"end": 1015,
											"name": "tag",
											"value": "110"
										},
										{
											"begin": 980,
											"end": 1015,
											"name": "JUMPDEST"
										},
										{
											"begin": 980,
											"end": 1015,
											"name": "PUSH",
											"value": "B"
										},
										{
											"begin": 980,
											"end": 1015,
											"name": "SLOAD"
										},
										{
											"begin": 980,
											"end": 1015,
											"name": "DUP2"
										},
										{
											"begin": 980,
											"end": 1015,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 3825,
											"end": 3922,
											"name": "tag",
											"value": "112"
										},
										{
											"begin": 3825,
											"end": 3922,
											"name": "JUMPDEST"
										},
										{
											"begin": 3861,
											"end": 3892,
											"name": "PUSH [tag]",
											"value": "223"
										},
										{
											"begin": 3870,
											"end": 3879,
											"name": "PUSH",
											"value": "F"
										},
										{
											"begin": 3870,
											"end": 3891,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3880,
											"end": 3890,
											"name": "CALLER"
										},
										{
											"begin": 3870,
											"end": 3891,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3870,
											"end": 3891,
											"name": "AND"
										},
										{
											"begin": 3870,
											"end": 3891,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3870,
											"end": 3891,
											"name": "AND"
										},
										{
											"begin": 3870,
											"end": 3891,
											"name": "DUP2"
										},
										{
											"begin": 3870,
											"end": 3891,
											"name": "MSTORE"
										},
										{
											"begin": 3870,
											"end": 3891,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3870,
											"end": 3891,
											"name": "ADD"
										},
										{
											"begin": 3870,
											"end": 3891,
											"name": "SWAP1"
										},
										{
											"begin": 3870,
											"end": 3891,
											"name": "DUP2"
										},
										{
											"begin": 3870,
											"end": 3891,
											"name": "MSTORE"
										},
										{
											"begin": 3870,
											"end": 3891,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3870,
											"end": 3891,
											"name": "ADD"
										},
										{
											"begin": 3870,
											"end": 3891,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3870,
											"end": 3891,
											"name": "KECCAK256"
										},
										{
											"begin": 3870,
											"end": 3891,
											"name": "SLOAD"
										},
										{
											"begin": 3861,
											"end": 3869,
											"name": "PUSH [tag]",
											"value": "62"
										},
										{
											"begin": 3861,
											"end": 3892,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3861,
											"end": 3892,
											"name": "tag",
											"value": "223"
										},
										{
											"begin": 3861,
											"end": 3892,
											"name": "JUMPDEST"
										},
										{
											"begin": 3903,
											"end": 3914,
											"name": "PUSH [tag]",
											"value": "224"
										},
										{
											"begin": 3903,
											"end": 3912,
											"name": "PUSH [tag]",
											"value": "69"
										},
										{
											"begin": 3903,
											"end": 3914,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3903,
											"end": 3914,
											"name": "tag",
											"value": "224"
										},
										{
											"begin": 3903,
											"end": 3914,
											"name": "JUMPDEST"
										},
										{
											"begin": 3825,
											"end": 3922,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 824,
											"end": 855,
											"name": "tag",
											"value": "114"
										},
										{
											"begin": 824,
											"end": 855,
											"name": "JUMPDEST"
										},
										{
											"begin": 824,
											"end": 855,
											"name": "PUSH",
											"value": "7"
										},
										{
											"begin": 824,
											"end": 855,
											"name": "SLOAD"
										},
										{
											"begin": 824,
											"end": 855,
											"name": "DUP2"
										},
										{
											"begin": 824,
											"end": 855,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1315,
											"end": 1499,
											"name": "tag",
											"value": "121"
										},
										{
											"begin": 1315,
											"end": 1499,
											"name": "JUMPDEST"
										},
										{
											"begin": 1373,
											"end": 1380,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1406,
											"end": 1407,
											"name": "DUP3"
										},
										{
											"begin": 1401,
											"end": 1402,
											"name": "DUP3"
										},
										{
											"begin": 1401,
											"end": 1407,
											"name": "GT"
										},
										{
											"begin": 1401,
											"end": 1407,
											"name": "ISZERO"
										},
										{
											"begin": 1393,
											"end": 1442,
											"name": "PUSH [tag]",
											"value": "226"
										},
										{
											"begin": 1393,
											"end": 1442,
											"name": "JUMPI"
										},
										{
											"begin": 1393,
											"end": 1442,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1393,
											"end": 1442,
											"name": "MLOAD"
										},
										{
											"begin": 1393,
											"end": 1442,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1393,
											"end": 1442,
											"name": "DUP2"
										},
										{
											"begin": 1393,
											"end": 1442,
											"name": "MSTORE"
										},
										{
											"begin": 1393,
											"end": 1442,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1393,
											"end": 1442,
											"name": "ADD"
										},
										{
											"begin": 1393,
											"end": 1442,
											"name": "DUP1"
										},
										{
											"begin": 1393,
											"end": 1442,
											"name": "DUP1"
										},
										{
											"begin": 1393,
											"end": 1442,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1393,
											"end": 1442,
											"name": "ADD"
										},
										{
											"begin": 1393,
											"end": 1442,
											"name": "DUP3"
										},
										{
											"begin": 1393,
											"end": 1442,
											"name": "DUP2"
										},
										{
											"begin": 1393,
											"end": 1442,
											"name": "SUB"
										},
										{
											"begin": 1393,
											"end": 1442,
											"name": "DUP3"
										},
										{
											"begin": 1393,
											"end": 1442,
											"name": "MSTORE"
										},
										{
											"begin": 1393,
											"end": 1442,
											"name": "PUSH",
											"value": "1E"
										},
										{
											"begin": 1393,
											"end": 1442,
											"name": "DUP2"
										},
										{
											"begin": 1393,
											"end": 1442,
											"name": "MSTORE"
										},
										{
											"begin": 1393,
											"end": 1442,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1393,
											"end": 1442,
											"name": "ADD"
										},
										{
											"begin": 1393,
											"end": 1442,
											"name": "DUP1"
										},
										{
											"begin": 1393,
											"end": 1442,
											"name": "PUSH",
											"value": "536166654D6174683A207375627472616374696F6E206F766572666C6F770000"
										},
										{
											"begin": 1393,
											"end": 1442,
											"name": "DUP2"
										},
										{
											"begin": 1393,
											"end": 1442,
											"name": "MSTORE"
										},
										{
											"begin": 1393,
											"end": 1442,
											"name": "POP"
										},
										{
											"begin": 1393,
											"end": 1442,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1393,
											"end": 1442,
											"name": "ADD"
										},
										{
											"begin": 1393,
											"end": 1442,
											"name": "SWAP2"
										},
										{
											"begin": 1393,
											"end": 1442,
											"name": "POP"
										},
										{
											"begin": 1393,
											"end": 1442,
											"name": "POP"
										},
										{
											"begin": 1393,
											"end": 1442,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1393,
											"end": 1442,
											"name": "MLOAD"
										},
										{
											"begin": 1393,
											"end": 1442,
											"name": "DUP1"
										},
										{
											"begin": 1393,
											"end": 1442,
											"name": "SWAP2"
										},
										{
											"begin": 1393,
											"end": 1442,
											"name": "SUB"
										},
										{
											"begin": 1393,
											"end": 1442,
											"name": "SWAP1"
										},
										{
											"begin": 1393,
											"end": 1442,
											"name": "REVERT"
										},
										{
											"begin": 1393,
											"end": 1442,
											"name": "tag",
											"value": "226"
										},
										{
											"begin": 1393,
											"end": 1442,
											"name": "JUMPDEST"
										},
										{
											"begin": 1453,
											"end": 1462,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1469,
											"end": 1470,
											"name": "DUP3"
										},
										{
											"begin": 1465,
											"end": 1466,
											"name": "DUP5"
										},
										{
											"begin": 1465,
											"end": 1470,
											"name": "SUB"
										},
										{
											"begin": 1453,
											"end": 1470,
											"name": "SWAP1"
										},
										{
											"begin": 1453,
											"end": 1470,
											"name": "POP"
										},
										{
											"begin": 1490,
											"end": 1491,
											"name": "DUP1"
										},
										{
											"begin": 1483,
											"end": 1491,
											"name": "SWAP2"
										},
										{
											"begin": 1483,
											"end": 1491,
											"name": "POP"
										},
										{
											"begin": 1483,
											"end": 1491,
											"name": "POP"
										},
										{
											"begin": 1315,
											"end": 1499,
											"name": "SWAP3"
										},
										{
											"begin": 1315,
											"end": 1499,
											"name": "SWAP2"
										},
										{
											"begin": 1315,
											"end": 1499,
											"name": "POP"
										},
										{
											"begin": 1315,
											"end": 1499,
											"name": "POP"
										},
										{
											"begin": 1315,
											"end": 1499,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1750,
											"end": 2221,
											"name": "tag",
											"value": "122"
										},
										{
											"begin": 1750,
											"end": 2221,
											"name": "JUMPDEST"
										},
										{
											"begin": 1808,
											"end": 1815,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2058,
											"end": 2059,
											"name": "DUP1"
										},
										{
											"begin": 2053,
											"end": 2054,
											"name": "DUP4"
										},
										{
											"begin": 2053,
											"end": 2059,
											"name": "EQ"
										},
										{
											"begin": 2049,
											"end": 2096,
											"name": "ISZERO"
										},
										{
											"begin": 2049,
											"end": 2096,
											"name": "PUSH [tag]",
											"value": "228"
										},
										{
											"begin": 2049,
											"end": 2096,
											"name": "JUMPI"
										},
										{
											"begin": 2083,
											"end": 2084,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2076,
											"end": 2084,
											"name": "SWAP1"
										},
										{
											"begin": 2076,
											"end": 2084,
											"name": "POP"
										},
										{
											"begin": 2076,
											"end": 2084,
											"name": "PUSH [tag]",
											"value": "227"
										},
										{
											"begin": 2076,
											"end": 2084,
											"name": "JUMP"
										},
										{
											"begin": 2049,
											"end": 2096,
											"name": "tag",
											"value": "228"
										},
										{
											"begin": 2049,
											"end": 2096,
											"name": "JUMPDEST"
										},
										{
											"begin": 2108,
											"end": 2117,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2124,
											"end": 2125,
											"name": "DUP3"
										},
										{
											"begin": 2120,
											"end": 2121,
											"name": "DUP5"
										},
										{
											"begin": 2120,
											"end": 2125,
											"name": "MUL"
										},
										{
											"begin": 2108,
											"end": 2125,
											"name": "SWAP1"
										},
										{
											"begin": 2108,
											"end": 2125,
											"name": "POP"
										},
										{
											"begin": 2153,
											"end": 2154,
											"name": "DUP3"
										},
										{
											"begin": 2148,
											"end": 2149,
											"name": "DUP5"
										},
										{
											"begin": 2144,
											"end": 2145,
											"name": "DUP3"
										},
										{
											"begin": 2144,
											"end": 2149,
											"name": "DUP2"
										},
										{
											"begin": 2144,
											"end": 2149,
											"name": "PUSH [tag]",
											"value": "229"
										},
										{
											"begin": 2144,
											"end": 2149,
											"name": "JUMPI"
										},
										{
											"begin": 2144,
											"end": 2149,
											"name": "INVALID"
										},
										{
											"begin": 2144,
											"end": 2149,
											"name": "tag",
											"value": "229"
										},
										{
											"begin": 2144,
											"end": 2149,
											"name": "JUMPDEST"
										},
										{
											"begin": 2144,
											"end": 2149,
											"name": "DIV"
										},
										{
											"begin": 2144,
											"end": 2154,
											"name": "EQ"
										},
										{
											"begin": 2136,
											"end": 2192,
											"name": "PUSH [tag]",
											"value": "230"
										},
										{
											"begin": 2136,
											"end": 2192,
											"name": "JUMPI"
										},
										{
											"begin": 2136,
											"end": 2192,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2136,
											"end": 2192,
											"name": "MLOAD"
										},
										{
											"begin": 2136,
											"end": 2192,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2136,
											"end": 2192,
											"name": "DUP2"
										},
										{
											"begin": 2136,
											"end": 2192,
											"name": "MSTORE"
										},
										{
											"begin": 2136,
											"end": 2192,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2136,
											"end": 2192,
											"name": "ADD"
										},
										{
											"begin": 2136,
											"end": 2192,
											"name": "DUP1"
										},
										{
											"begin": 2136,
											"end": 2192,
											"name": "DUP1"
										},
										{
											"begin": 2136,
											"end": 2192,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2136,
											"end": 2192,
											"name": "ADD"
										},
										{
											"begin": 2136,
											"end": 2192,
											"name": "DUP3"
										},
										{
											"begin": 2136,
											"end": 2192,
											"name": "DUP2"
										},
										{
											"begin": 2136,
											"end": 2192,
											"name": "SUB"
										},
										{
											"begin": 2136,
											"end": 2192,
											"name": "DUP3"
										},
										{
											"begin": 2136,
											"end": 2192,
											"name": "MSTORE"
										},
										{
											"begin": 2136,
											"end": 2192,
											"name": "PUSH",
											"value": "21"
										},
										{
											"begin": 2136,
											"end": 2192,
											"name": "DUP2"
										},
										{
											"begin": 2136,
											"end": 2192,
											"name": "MSTORE"
										},
										{
											"begin": 2136,
											"end": 2192,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2136,
											"end": 2192,
											"name": "ADD"
										},
										{
											"begin": 2136,
											"end": 2192,
											"name": "DUP1"
										},
										{
											"begin": 2136,
											"end": 2192,
											"name": "PUSH data",
											"value": "9113BB53C2876A3805B2C9242029423FC540A728243CE887AB24C82CF119FBA3"
										},
										{
											"begin": 2136,
											"end": 2192,
											"name": "PUSH",
											"value": "21"
										},
										{
											"begin": 2136,
											"end": 2192,
											"name": "SWAP2"
										},
										{
											"begin": 2136,
											"end": 2192,
											"name": "CODECOPY"
										},
										{
											"begin": 2136,
											"end": 2192,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2136,
											"end": 2192,
											"name": "ADD"
										},
										{
											"begin": 2136,
											"end": 2192,
											"name": "SWAP2"
										},
										{
											"begin": 2136,
											"end": 2192,
											"name": "POP"
										},
										{
											"begin": 2136,
											"end": 2192,
											"name": "POP"
										},
										{
											"begin": 2136,
											"end": 2192,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2136,
											"end": 2192,
											"name": "MLOAD"
										},
										{
											"begin": 2136,
											"end": 2192,
											"name": "DUP1"
										},
										{
											"begin": 2136,
											"end": 2192,
											"name": "SWAP2"
										},
										{
											"begin": 2136,
											"end": 2192,
											"name": "SUB"
										},
										{
											"begin": 2136,
											"end": 2192,
											"name": "SWAP1"
										},
										{
											"begin": 2136,
											"end": 2192,
											"name": "REVERT"
										},
										{
											"begin": 2136,
											"end": 2192,
											"name": "tag",
											"value": "230"
										},
										{
											"begin": 2136,
											"end": 2192,
											"name": "JUMPDEST"
										},
										{
											"begin": 2212,
											"end": 2213,
											"name": "DUP1"
										},
										{
											"begin": 2205,
											"end": 2213,
											"name": "SWAP2"
										},
										{
											"begin": 2205,
											"end": 2213,
											"name": "POP"
										},
										{
											"begin": 2205,
											"end": 2213,
											"name": "POP"
										},
										{
											"begin": 1750,
											"end": 2221,
											"name": "tag",
											"value": "227"
										},
										{
											"begin": 1750,
											"end": 2221,
											"name": "JUMPDEST"
										},
										{
											"begin": 1750,
											"end": 2221,
											"name": "SWAP3"
										},
										{
											"begin": 1750,
											"end": 2221,
											"name": "SWAP2"
										},
										{
											"begin": 1750,
											"end": 2221,
											"name": "POP"
										},
										{
											"begin": 1750,
											"end": 2221,
											"name": "POP"
										},
										{
											"begin": 1750,
											"end": 2221,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2689,
											"end": 3022,
											"name": "tag",
											"value": "123"
										},
										{
											"begin": 2689,
											"end": 3022,
											"name": "JUMPDEST"
										},
										{
											"begin": 2747,
											"end": 2754,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2846,
											"end": 2847,
											"name": "DUP1"
										},
										{
											"begin": 2842,
											"end": 2843,
											"name": "DUP3"
										},
										{
											"begin": 2842,
											"end": 2847,
											"name": "GT"
										},
										{
											"begin": 2834,
											"end": 2878,
											"name": "PUSH [tag]",
											"value": "232"
										},
										{
											"begin": 2834,
											"end": 2878,
											"name": "JUMPI"
										},
										{
											"begin": 2834,
											"end": 2878,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2834,
											"end": 2878,
											"name": "MLOAD"
										},
										{
											"begin": 2834,
											"end": 2878,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2834,
											"end": 2878,
											"name": "DUP2"
										},
										{
											"begin": 2834,
											"end": 2878,
											"name": "MSTORE"
										},
										{
											"begin": 2834,
											"end": 2878,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2834,
											"end": 2878,
											"name": "ADD"
										},
										{
											"begin": 2834,
											"end": 2878,
											"name": "DUP1"
										},
										{
											"begin": 2834,
											"end": 2878,
											"name": "DUP1"
										},
										{
											"begin": 2834,
											"end": 2878,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2834,
											"end": 2878,
											"name": "ADD"
										},
										{
											"begin": 2834,
											"end": 2878,
											"name": "DUP3"
										},
										{
											"begin": 2834,
											"end": 2878,
											"name": "DUP2"
										},
										{
											"begin": 2834,
											"end": 2878,
											"name": "SUB"
										},
										{
											"begin": 2834,
											"end": 2878,
											"name": "DUP3"
										},
										{
											"begin": 2834,
											"end": 2878,
											"name": "MSTORE"
										},
										{
											"begin": 2834,
											"end": 2878,
											"name": "PUSH",
											"value": "1A"
										},
										{
											"begin": 2834,
											"end": 2878,
											"name": "DUP2"
										},
										{
											"begin": 2834,
											"end": 2878,
											"name": "MSTORE"
										},
										{
											"begin": 2834,
											"end": 2878,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2834,
											"end": 2878,
											"name": "ADD"
										},
										{
											"begin": 2834,
											"end": 2878,
											"name": "DUP1"
										},
										{
											"begin": 2834,
											"end": 2878,
											"name": "PUSH",
											"value": "536166654D6174683A206469766973696F6E206279207A65726F000000000000"
										},
										{
											"begin": 2834,
											"end": 2878,
											"name": "DUP2"
										},
										{
											"begin": 2834,
											"end": 2878,
											"name": "MSTORE"
										},
										{
											"begin": 2834,
											"end": 2878,
											"name": "POP"
										},
										{
											"begin": 2834,
											"end": 2878,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2834,
											"end": 2878,
											"name": "ADD"
										},
										{
											"begin": 2834,
											"end": 2878,
											"name": "SWAP2"
										},
										{
											"begin": 2834,
											"end": 2878,
											"name": "POP"
										},
										{
											"begin": 2834,
											"end": 2878,
											"name": "POP"
										},
										{
											"begin": 2834,
											"end": 2878,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2834,
											"end": 2878,
											"name": "MLOAD"
										},
										{
											"begin": 2834,
											"end": 2878,
											"name": "DUP1"
										},
										{
											"begin": 2834,
											"end": 2878,
											"name": "SWAP2"
										},
										{
											"begin": 2834,
											"end": 2878,
											"name": "SUB"
										},
										{
											"begin": 2834,
											"end": 2878,
											"name": "SWAP1"
										},
										{
											"begin": 2834,
											"end": 2878,
											"name": "REVERT"
										},
										{
											"begin": 2834,
											"end": 2878,
											"name": "tag",
											"value": "232"
										},
										{
											"begin": 2834,
											"end": 2878,
											"name": "JUMPDEST"
										},
										{
											"begin": 2889,
											"end": 2898,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2905,
											"end": 2906,
											"name": "DUP3"
										},
										{
											"begin": 2901,
											"end": 2902,
											"name": "DUP5"
										},
										{
											"begin": 2901,
											"end": 2906,
											"name": "DUP2"
										},
										{
											"begin": 2901,
											"end": 2906,
											"name": "PUSH [tag]",
											"value": "233"
										},
										{
											"begin": 2901,
											"end": 2906,
											"name": "JUMPI"
										},
										{
											"begin": 2901,
											"end": 2906,
											"name": "INVALID"
										},
										{
											"begin": 2901,
											"end": 2906,
											"name": "tag",
											"value": "233"
										},
										{
											"begin": 2901,
											"end": 2906,
											"name": "JUMPDEST"
										},
										{
											"begin": 2901,
											"end": 2906,
											"name": "DIV"
										},
										{
											"begin": 2889,
											"end": 2906,
											"name": "SWAP1"
										},
										{
											"begin": 2889,
											"end": 2906,
											"name": "POP"
										},
										{
											"begin": 3013,
											"end": 3014,
											"name": "DUP1"
										},
										{
											"begin": 3006,
											"end": 3014,
											"name": "SWAP2"
										},
										{
											"begin": 3006,
											"end": 3014,
											"name": "POP"
										},
										{
											"begin": 3006,
											"end": 3014,
											"name": "POP"
										},
										{
											"begin": 2689,
											"end": 3022,
											"name": "SWAP3"
										},
										{
											"begin": 2689,
											"end": 3022,
											"name": "SWAP2"
										},
										{
											"begin": 2689,
											"end": 3022,
											"name": "POP"
										},
										{
											"begin": 2689,
											"end": 3022,
											"name": "POP"
										},
										{
											"begin": 2689,
											"end": 3022,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 859,
											"end": 1040,
											"name": "tag",
											"value": "124"
										},
										{
											"begin": 859,
											"end": 1040,
											"name": "JUMPDEST"
										},
										{
											"begin": 917,
											"end": 924,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 937,
											"end": 946,
											"name": "DUP1"
										},
										{
											"begin": 953,
											"end": 954,
											"name": "DUP3"
										},
										{
											"begin": 949,
											"end": 950,
											"name": "DUP5"
										},
										{
											"begin": 949,
											"end": 954,
											"name": "ADD"
										},
										{
											"begin": 937,
											"end": 954,
											"name": "SWAP1"
										},
										{
											"begin": 937,
											"end": 954,
											"name": "POP"
										},
										{
											"begin": 978,
											"end": 979,
											"name": "DUP4"
										},
										{
											"begin": 973,
											"end": 974,
											"name": "DUP2"
										},
										{
											"begin": 973,
											"end": 979,
											"name": "LT"
										},
										{
											"begin": 973,
											"end": 979,
											"name": "ISZERO"
										},
										{
											"begin": 965,
											"end": 1011,
											"name": "PUSH [tag]",
											"value": "235"
										},
										{
											"begin": 965,
											"end": 1011,
											"name": "JUMPI"
										},
										{
											"begin": 965,
											"end": 1011,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 965,
											"end": 1011,
											"name": "MLOAD"
										},
										{
											"begin": 965,
											"end": 1011,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 965,
											"end": 1011,
											"name": "DUP2"
										},
										{
											"begin": 965,
											"end": 1011,
											"name": "MSTORE"
										},
										{
											"begin": 965,
											"end": 1011,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 965,
											"end": 1011,
											"name": "ADD"
										},
										{
											"begin": 965,
											"end": 1011,
											"name": "DUP1"
										},
										{
											"begin": 965,
											"end": 1011,
											"name": "DUP1"
										},
										{
											"begin": 965,
											"end": 1011,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 965,
											"end": 1011,
											"name": "ADD"
										},
										{
											"begin": 965,
											"end": 1011,
											"name": "DUP3"
										},
										{
											"begin": 965,
											"end": 1011,
											"name": "DUP2"
										},
										{
											"begin": 965,
											"end": 1011,
											"name": "SUB"
										},
										{
											"begin": 965,
											"end": 1011,
											"name": "DUP3"
										},
										{
											"begin": 965,
											"end": 1011,
											"name": "MSTORE"
										},
										{
											"begin": 965,
											"end": 1011,
											"name": "PUSH",
											"value": "1B"
										},
										{
											"begin": 965,
											"end": 1011,
											"name": "DUP2"
										},
										{
											"begin": 965,
											"end": 1011,
											"name": "MSTORE"
										},
										{
											"begin": 965,
											"end": 1011,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 965,
											"end": 1011,
											"name": "ADD"
										},
										{
											"begin": 965,
											"end": 1011,
											"name": "DUP1"
										},
										{
											"begin": 965,
											"end": 1011,
											"name": "PUSH",
											"value": "536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
										},
										{
											"begin": 965,
											"end": 1011,
											"name": "DUP2"
										},
										{
											"begin": 965,
											"end": 1011,
											"name": "MSTORE"
										},
										{
											"begin": 965,
											"end": 1011,
											"name": "POP"
										},
										{
											"begin": 965,
											"end": 1011,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 965,
											"end": 1011,
											"name": "ADD"
										},
										{
											"begin": 965,
											"end": 1011,
											"name": "SWAP2"
										},
										{
											"begin": 965,
											"end": 1011,
											"name": "POP"
										},
										{
											"begin": 965,
											"end": 1011,
											"name": "POP"
										},
										{
											"begin": 965,
											"end": 1011,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 965,
											"end": 1011,
											"name": "MLOAD"
										},
										{
											"begin": 965,
											"end": 1011,
											"name": "DUP1"
										},
										{
											"begin": 965,
											"end": 1011,
											"name": "SWAP2"
										},
										{
											"begin": 965,
											"end": 1011,
											"name": "SUB"
										},
										{
											"begin": 965,
											"end": 1011,
											"name": "SWAP1"
										},
										{
											"begin": 965,
											"end": 1011,
											"name": "REVERT"
										},
										{
											"begin": 965,
											"end": 1011,
											"name": "tag",
											"value": "235"
										},
										{
											"begin": 965,
											"end": 1011,
											"name": "JUMPDEST"
										},
										{
											"begin": 1031,
											"end": 1032,
											"name": "DUP1"
										},
										{
											"begin": 1024,
											"end": 1032,
											"name": "SWAP2"
										},
										{
											"begin": 1024,
											"end": 1032,
											"name": "POP"
										},
										{
											"begin": 1024,
											"end": 1032,
											"name": "POP"
										},
										{
											"begin": 859,
											"end": 1040,
											"name": "SWAP3"
										},
										{
											"begin": 859,
											"end": 1040,
											"name": "SWAP2"
										},
										{
											"begin": 859,
											"end": 1040,
											"name": "POP"
										},
										{
											"begin": 859,
											"end": 1040,
											"name": "POP"
										},
										{
											"begin": 859,
											"end": 1040,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 869,
											"end": 1002,
											"name": "tag",
											"value": "127"
										},
										{
											"begin": 869,
											"end": 1002,
											"name": "JUMPDEST"
										},
										{
											"begin": 937,
											"end": 942,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 937,
											"end": 942,
											"name": "DUP1"
										},
										{
											"begin": 937,
											"end": 942,
											"name": "SWAP1"
										},
										{
											"begin": 937,
											"end": 942,
											"name": "SLOAD"
										},
										{
											"begin": 937,
											"end": 942,
											"name": "SWAP1"
										},
										{
											"begin": 937,
											"end": 942,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 937,
											"end": 942,
											"name": "EXP"
										},
										{
											"begin": 937,
											"end": 942,
											"name": "SWAP1"
										},
										{
											"begin": 937,
											"end": 942,
											"name": "DIV"
										},
										{
											"begin": 937,
											"end": 942,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 937,
											"end": 942,
											"name": "AND"
										},
										{
											"begin": 923,
											"end": 942,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 923,
											"end": 942,
											"name": "AND"
										},
										{
											"begin": 923,
											"end": 933,
											"name": "CALLER"
										},
										{
											"begin": 923,
											"end": 942,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 923,
											"end": 942,
											"name": "AND"
										},
										{
											"begin": 923,
											"end": 942,
											"name": "EQ"
										},
										{
											"begin": 915,
											"end": 994,
											"name": "PUSH [tag]",
											"value": "237"
										},
										{
											"begin": 915,
											"end": 994,
											"name": "JUMPI"
										},
										{
											"begin": 915,
											"end": 994,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 915,
											"end": 994,
											"name": "MLOAD"
										},
										{
											"begin": 915,
											"end": 994,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 915,
											"end": 994,
											"name": "DUP2"
										},
										{
											"begin": 915,
											"end": 994,
											"name": "MSTORE"
										},
										{
											"begin": 915,
											"end": 994,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 915,
											"end": 994,
											"name": "ADD"
										},
										{
											"begin": 915,
											"end": 994,
											"name": "DUP1"
										},
										{
											"begin": 915,
											"end": 994,
											"name": "DUP1"
										},
										{
											"begin": 915,
											"end": 994,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 915,
											"end": 994,
											"name": "ADD"
										},
										{
											"begin": 915,
											"end": 994,
											"name": "DUP3"
										},
										{
											"begin": 915,
											"end": 994,
											"name": "DUP2"
										},
										{
											"begin": 915,
											"end": 994,
											"name": "SUB"
										},
										{
											"begin": 915,
											"end": 994,
											"name": "DUP3"
										},
										{
											"begin": 915,
											"end": 994,
											"name": "MSTORE"
										},
										{
											"begin": 915,
											"end": 994,
											"name": "PUSH",
											"value": "2F"
										},
										{
											"begin": 915,
											"end": 994,
											"name": "DUP2"
										},
										{
											"begin": 915,
											"end": 994,
											"name": "MSTORE"
										},
										{
											"begin": 915,
											"end": 994,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 915,
											"end": 994,
											"name": "ADD"
										},
										{
											"begin": 915,
											"end": 994,
											"name": "DUP1"
										},
										{
											"begin": 915,
											"end": 994,
											"name": "PUSH data",
											"value": "873D2051B76E0142B287297AFDFC273BF1AB5C24EE229ED4EF117F1FF0679A4A"
										},
										{
											"begin": 915,
											"end": 994,
											"name": "PUSH",
											"value": "2F"
										},
										{
											"begin": 915,
											"end": 994,
											"name": "SWAP2"
										},
										{
											"begin": 915,
											"end": 994,
											"name": "CODECOPY"
										},
										{
											"begin": 915,
											"end": 994,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 915,
											"end": 994,
											"name": "ADD"
										},
										{
											"begin": 915,
											"end": 994,
											"name": "SWAP2"
										},
										{
											"begin": 915,
											"end": 994,
											"name": "POP"
										},
										{
											"begin": 915,
											"end": 994,
											"name": "POP"
										},
										{
											"begin": 915,
											"end": 994,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 915,
											"end": 994,
											"name": "MLOAD"
										},
										{
											"begin": 915,
											"end": 994,
											"name": "DUP1"
										},
										{
											"begin": 915,
											"end": 994,
											"name": "SWAP2"
										},
										{
											"begin": 915,
											"end": 994,
											"name": "SUB"
										},
										{
											"begin": 915,
											"end": 994,
											"name": "SWAP1"
										},
										{
											"begin": 915,
											"end": 994,
											"name": "REVERT"
										},
										{
											"begin": 915,
											"end": 994,
											"name": "tag",
											"value": "237"
										},
										{
											"begin": 915,
											"end": 994,
											"name": "JUMPDEST"
										},
										{
											"begin": 869,
											"end": 1002,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 681,
											"end": 857,
											"name": "tag",
											"value": "151"
										},
										{
											"begin": 681,
											"end": 857,
											"name": "JUMPDEST"
										},
										{
											"begin": 764,
											"end": 849,
											"name": "PUSH [tag]",
											"value": "239"
										},
										{
											"begin": 783,
											"end": 788,
											"name": "DUP4"
										},
										{
											"begin": 813,
											"end": 818,
											"name": "DUP5"
										},
										{
											"begin": 813,
											"end": 827,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 813,
											"end": 827,
											"name": "AND"
										},
										{
											"begin": 813,
											"end": 827,
											"name": "PUSH",
											"value": "A9059CBB"
										},
										{
											"begin": 813,
											"end": 836,
											"name": "SWAP1"
										},
										{
											"begin": 813,
											"end": 836,
											"name": "POP"
										},
										{
											"begin": 813,
											"end": 836,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 813,
											"end": 836,
											"name": "SHL"
										},
										{
											"begin": 838,
											"end": 840,
											"name": "DUP5"
										},
										{
											"begin": 842,
											"end": 847,
											"name": "DUP5"
										},
										{
											"begin": 790,
											"end": 848,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 790,
											"end": 848,
											"name": "MLOAD"
										},
										{
											"begin": 790,
											"end": 848,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 790,
											"end": 848,
											"name": "ADD"
										},
										{
											"begin": 790,
											"end": 848,
											"name": "DUP1"
										},
										{
											"begin": 790,
											"end": 848,
											"name": "DUP4"
										},
										{
											"begin": 790,
											"end": 848,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 790,
											"end": 848,
											"name": "AND"
										},
										{
											"begin": 790,
											"end": 848,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 790,
											"end": 848,
											"name": "AND"
										},
										{
											"begin": 790,
											"end": 848,
											"name": "DUP2"
										},
										{
											"begin": 790,
											"end": 848,
											"name": "MSTORE"
										},
										{
											"begin": 790,
											"end": 848,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 790,
											"end": 848,
											"name": "ADD"
										},
										{
											"begin": 790,
											"end": 848,
											"name": "DUP3"
										},
										{
											"begin": 790,
											"end": 848,
											"name": "DUP2"
										},
										{
											"begin": 790,
											"end": 848,
											"name": "MSTORE"
										},
										{
											"begin": 790,
											"end": 848,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 790,
											"end": 848,
											"name": "ADD"
										},
										{
											"begin": 790,
											"end": 848,
											"name": "SWAP3"
										},
										{
											"begin": 790,
											"end": 848,
											"name": "POP"
										},
										{
											"begin": 790,
											"end": 848,
											"name": "POP"
										},
										{
											"begin": 790,
											"end": 848,
											"name": "POP"
										},
										{
											"begin": 790,
											"end": 848,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 790,
											"end": 848,
											"name": "MLOAD"
										},
										{
											"begin": 49,
											"end": 53,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 39,
											"end": 46,
											"name": "DUP2"
										},
										{
											"begin": 30,
											"end": 37,
											"name": "DUP4"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "SUB"
										},
										{
											"begin": 22,
											"end": 54,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 20,
											"name": "DUP2"
										},
										{
											"begin": 6,
											"end": 55,
											"name": "MSTORE"
										},
										{
											"begin": 790,
											"end": 848,
											"name": "SWAP1"
										},
										{
											"begin": 790,
											"end": 848,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 790,
											"end": 848,
											"name": "MSTORE"
										},
										{
											"begin": 790,
											"end": 848,
											"name": "SWAP1"
										},
										{
											"begin": 790,
											"end": 848,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 790,
											"end": 848,
											"name": "NOT"
										},
										{
											"begin": 790,
											"end": 848,
											"name": "AND"
										},
										{
											"begin": 38,
											"end": 42,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 29,
											"end": 36,
											"name": "DUP3"
										},
										{
											"begin": 25,
											"end": 43,
											"name": "ADD"
										},
										{
											"begin": 67,
											"end": 77,
											"name": "DUP1"
										},
										{
											"begin": 61,
											"end": 78,
											"name": "MLOAD"
										},
										{
											"begin": 96,
											"end": 154,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 199,
											"end": 207,
											"name": "DUP4"
										},
										{
											"begin": 192,
											"end": 196,
											"name": "DUP2"
										},
										{
											"begin": 186,
											"end": 190,
											"name": "DUP4"
										},
										{
											"begin": 182,
											"end": 197,
											"name": "AND"
										},
										{
											"begin": 179,
											"end": 208,
											"name": "OR"
										},
										{
											"begin": 167,
											"end": 177,
											"name": "DUP4"
										},
										{
											"begin": 160,
											"end": 209,
											"name": "MSTORE"
										},
										{
											"begin": 0,
											"end": 215,
											"name": "POP"
										},
										{
											"begin": 0,
											"end": 215,
											"name": "POP"
										},
										{
											"begin": 0,
											"end": 215,
											"name": "POP"
										},
										{
											"begin": 790,
											"end": 848,
											"name": "POP"
										},
										{
											"begin": 764,
											"end": 782,
											"name": "PUSH [tag]",
											"value": "240"
										},
										{
											"begin": 764,
											"end": 849,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 764,
											"end": 849,
											"name": "tag",
											"value": "239"
										},
										{
											"begin": 764,
											"end": 849,
											"name": "JUMPDEST"
										},
										{
											"begin": 681,
											"end": 857,
											"name": "POP"
										},
										{
											"begin": 681,
											"end": 857,
											"name": "POP"
										},
										{
											"begin": 681,
											"end": 857,
											"name": "POP"
										},
										{
											"begin": 681,
											"end": 857,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 865,
											"end": 1069,
											"name": "tag",
											"value": "208"
										},
										{
											"begin": 865,
											"end": 1069,
											"name": "JUMPDEST"
										},
										{
											"begin": 966,
											"end": 1061,
											"name": "PUSH [tag]",
											"value": "242"
										},
										{
											"begin": 985,
											"end": 990,
											"name": "DUP5"
										},
										{
											"begin": 1015,
											"end": 1020,
											"name": "DUP6"
										},
										{
											"begin": 1015,
											"end": 1033,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1015,
											"end": 1033,
											"name": "AND"
										},
										{
											"begin": 1015,
											"end": 1033,
											"name": "PUSH",
											"value": "23B872DD"
										},
										{
											"begin": 1015,
											"end": 1042,
											"name": "SWAP1"
										},
										{
											"begin": 1015,
											"end": 1042,
											"name": "POP"
										},
										{
											"begin": 1015,
											"end": 1042,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 1015,
											"end": 1042,
											"name": "SHL"
										},
										{
											"begin": 1044,
											"end": 1048,
											"name": "DUP6"
										},
										{
											"begin": 1050,
											"end": 1052,
											"name": "DUP6"
										},
										{
											"begin": 1054,
											"end": 1059,
											"name": "DUP6"
										},
										{
											"begin": 992,
											"end": 1060,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 992,
											"end": 1060,
											"name": "MLOAD"
										},
										{
											"begin": 992,
											"end": 1060,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 992,
											"end": 1060,
											"name": "ADD"
										},
										{
											"begin": 992,
											"end": 1060,
											"name": "DUP1"
										},
										{
											"begin": 992,
											"end": 1060,
											"name": "DUP5"
										},
										{
											"begin": 992,
											"end": 1060,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 992,
											"end": 1060,
											"name": "AND"
										},
										{
											"begin": 992,
											"end": 1060,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 992,
											"end": 1060,
											"name": "AND"
										},
										{
											"begin": 992,
											"end": 1060,
											"name": "DUP2"
										},
										{
											"begin": 992,
											"end": 1060,
											"name": "MSTORE"
										},
										{
											"begin": 992,
											"end": 1060,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 992,
											"end": 1060,
											"name": "ADD"
										},
										{
											"begin": 992,
											"end": 1060,
											"name": "DUP4"
										},
										{
											"begin": 992,
											"end": 1060,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 992,
											"end": 1060,
											"name": "AND"
										},
										{
											"begin": 992,
											"end": 1060,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 992,
											"end": 1060,
											"name": "AND"
										},
										{
											"begin": 992,
											"end": 1060,
											"name": "DUP2"
										},
										{
											"begin": 992,
											"end": 1060,
											"name": "MSTORE"
										},
										{
											"begin": 992,
											"end": 1060,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 992,
											"end": 1060,
											"name": "ADD"
										},
										{
											"begin": 992,
											"end": 1060,
											"name": "DUP3"
										},
										{
											"begin": 992,
											"end": 1060,
											"name": "DUP2"
										},
										{
											"begin": 992,
											"end": 1060,
											"name": "MSTORE"
										},
										{
											"begin": 992,
											"end": 1060,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 992,
											"end": 1060,
											"name": "ADD"
										},
										{
											"begin": 992,
											"end": 1060,
											"name": "SWAP4"
										},
										{
											"begin": 992,
											"end": 1060,
											"name": "POP"
										},
										{
											"begin": 992,
											"end": 1060,
											"name": "POP"
										},
										{
											"begin": 992,
											"end": 1060,
											"name": "POP"
										},
										{
											"begin": 992,
											"end": 1060,
											"name": "POP"
										},
										{
											"begin": 992,
											"end": 1060,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 992,
											"end": 1060,
											"name": "MLOAD"
										},
										{
											"begin": 49,
											"end": 53,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 39,
											"end": 46,
											"name": "DUP2"
										},
										{
											"begin": 30,
											"end": 37,
											"name": "DUP4"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "SUB"
										},
										{
											"begin": 22,
											"end": 54,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 20,
											"name": "DUP2"
										},
										{
											"begin": 6,
											"end": 55,
											"name": "MSTORE"
										},
										{
											"begin": 992,
											"end": 1060,
											"name": "SWAP1"
										},
										{
											"begin": 992,
											"end": 1060,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 992,
											"end": 1060,
											"name": "MSTORE"
										},
										{
											"begin": 992,
											"end": 1060,
											"name": "SWAP1"
										},
										{
											"begin": 992,
											"end": 1060,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 992,
											"end": 1060,
											"name": "NOT"
										},
										{
											"begin": 992,
											"end": 1060,
											"name": "AND"
										},
										{
											"begin": 38,
											"end": 42,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 29,
											"end": 36,
											"name": "DUP3"
										},
										{
											"begin": 25,
											"end": 43,
											"name": "ADD"
										},
										{
											"begin": 67,
											"end": 77,
											"name": "DUP1"
										},
										{
											"begin": 61,
											"end": 78,
											"name": "MLOAD"
										},
										{
											"begin": 96,
											"end": 154,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 199,
											"end": 207,
											"name": "DUP4"
										},
										{
											"begin": 192,
											"end": 196,
											"name": "DUP2"
										},
										{
											"begin": 186,
											"end": 190,
											"name": "DUP4"
										},
										{
											"begin": 182,
											"end": 197,
											"name": "AND"
										},
										{
											"begin": 179,
											"end": 208,
											"name": "OR"
										},
										{
											"begin": 167,
											"end": 177,
											"name": "DUP4"
										},
										{
											"begin": 160,
											"end": 209,
											"name": "MSTORE"
										},
										{
											"begin": 0,
											"end": 215,
											"name": "POP"
										},
										{
											"begin": 0,
											"end": 215,
											"name": "POP"
										},
										{
											"begin": 0,
											"end": 215,
											"name": "POP"
										},
										{
											"begin": 992,
											"end": 1060,
											"name": "POP"
										},
										{
											"begin": 966,
											"end": 984,
											"name": "PUSH [tag]",
											"value": "240"
										},
										{
											"begin": 966,
											"end": 1061,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 966,
											"end": 1061,
											"name": "tag",
											"value": "242"
										},
										{
											"begin": 966,
											"end": 1061,
											"name": "JUMPDEST"
										},
										{
											"begin": 865,
											"end": 1069,
											"name": "POP"
										},
										{
											"begin": 865,
											"end": 1069,
											"name": "POP"
										},
										{
											"begin": 865,
											"end": 1069,
											"name": "POP"
										},
										{
											"begin": 865,
											"end": 1069,
											"name": "POP"
										},
										{
											"begin": 865,
											"end": 1069,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2675,
											"end": 3789,
											"name": "tag",
											"value": "240"
										},
										{
											"begin": 2675,
											"end": 3789,
											"name": "JUMPDEST"
										},
										{
											"begin": 3279,
											"end": 3306,
											"name": "PUSH [tag]",
											"value": "244"
										},
										{
											"begin": 3287,
											"end": 3292,
											"name": "DUP3"
										},
										{
											"begin": 3279,
											"end": 3304,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3279,
											"end": 3304,
											"name": "AND"
										},
										{
											"begin": 3279,
											"end": 3304,
											"name": "PUSH [tag]",
											"value": "245"
										},
										{
											"begin": 3279,
											"end": 3306,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3279,
											"end": 3306,
											"name": "tag",
											"value": "244"
										},
										{
											"begin": 3279,
											"end": 3306,
											"name": "JUMPDEST"
										},
										{
											"begin": 3271,
											"end": 3342,
											"name": "PUSH [tag]",
											"value": "246"
										},
										{
											"begin": 3271,
											"end": 3342,
											"name": "JUMPI"
										},
										{
											"begin": 3271,
											"end": 3342,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3271,
											"end": 3342,
											"name": "MLOAD"
										},
										{
											"begin": 3271,
											"end": 3342,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3271,
											"end": 3342,
											"name": "DUP2"
										},
										{
											"begin": 3271,
											"end": 3342,
											"name": "MSTORE"
										},
										{
											"begin": 3271,
											"end": 3342,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3271,
											"end": 3342,
											"name": "ADD"
										},
										{
											"begin": 3271,
											"end": 3342,
											"name": "DUP1"
										},
										{
											"begin": 3271,
											"end": 3342,
											"name": "DUP1"
										},
										{
											"begin": 3271,
											"end": 3342,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3271,
											"end": 3342,
											"name": "ADD"
										},
										{
											"begin": 3271,
											"end": 3342,
											"name": "DUP3"
										},
										{
											"begin": 3271,
											"end": 3342,
											"name": "DUP2"
										},
										{
											"begin": 3271,
											"end": 3342,
											"name": "SUB"
										},
										{
											"begin": 3271,
											"end": 3342,
											"name": "DUP3"
										},
										{
											"begin": 3271,
											"end": 3342,
											"name": "MSTORE"
										},
										{
											"begin": 3271,
											"end": 3342,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 3271,
											"end": 3342,
											"name": "DUP2"
										},
										{
											"begin": 3271,
											"end": 3342,
											"name": "MSTORE"
										},
										{
											"begin": 3271,
											"end": 3342,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3271,
											"end": 3342,
											"name": "ADD"
										},
										{
											"begin": 3271,
											"end": 3342,
											"name": "DUP1"
										},
										{
											"begin": 3271,
											"end": 3342,
											"name": "PUSH",
											"value": "5361666545524332303A2063616C6C20746F206E6F6E2D636F6E747261637400"
										},
										{
											"begin": 3271,
											"end": 3342,
											"name": "DUP2"
										},
										{
											"begin": 3271,
											"end": 3342,
											"name": "MSTORE"
										},
										{
											"begin": 3271,
											"end": 3342,
											"name": "POP"
										},
										{
											"begin": 3271,
											"end": 3342,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3271,
											"end": 3342,
											"name": "ADD"
										},
										{
											"begin": 3271,
											"end": 3342,
											"name": "SWAP2"
										},
										{
											"begin": 3271,
											"end": 3342,
											"name": "POP"
										},
										{
											"begin": 3271,
											"end": 3342,
											"name": "POP"
										},
										{
											"begin": 3271,
											"end": 3342,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3271,
											"end": 3342,
											"name": "MLOAD"
										},
										{
											"begin": 3271,
											"end": 3342,
											"name": "DUP1"
										},
										{
											"begin": 3271,
											"end": 3342,
											"name": "SWAP2"
										},
										{
											"begin": 3271,
											"end": 3342,
											"name": "SUB"
										},
										{
											"begin": 3271,
											"end": 3342,
											"name": "SWAP1"
										},
										{
											"begin": 3271,
											"end": 3342,
											"name": "REVERT"
										},
										{
											"begin": 3271,
											"end": 3342,
											"name": "tag",
											"value": "246"
										},
										{
											"begin": 3271,
											"end": 3342,
											"name": "JUMPDEST"
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3430,
											"end": 3453,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 3465,
											"end": 3470,
											"name": "DUP4"
										},
										{
											"begin": 3457,
											"end": 3476,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3457,
											"end": 3476,
											"name": "AND"
										},
										{
											"begin": 3477,
											"end": 3481,
											"name": "DUP4"
										},
										{
											"begin": 3457,
											"end": 3482,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3457,
											"end": 3482,
											"name": "MLOAD"
										},
										{
											"begin": 3457,
											"end": 3482,
											"name": "DUP1"
										},
										{
											"begin": 3457,
											"end": 3482,
											"name": "DUP3"
										},
										{
											"begin": 3457,
											"end": 3482,
											"name": "DUP1"
										},
										{
											"begin": 3457,
											"end": 3482,
											"name": "MLOAD"
										},
										{
											"begin": 3457,
											"end": 3482,
											"name": "SWAP1"
										},
										{
											"begin": 3457,
											"end": 3482,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3457,
											"end": 3482,
											"name": "ADD"
										},
										{
											"begin": 3457,
											"end": 3482,
											"name": "SWAP1"
										},
										{
											"begin": 3457,
											"end": 3482,
											"name": "DUP1"
										},
										{
											"begin": 3457,
											"end": 3482,
											"name": "DUP4"
										},
										{
											"begin": 3457,
											"end": 3482,
											"name": "DUP4"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "tag",
											"value": "247"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMPDEST"
										},
										{
											"begin": 66,
											"end": 68,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 61,
											"end": 64,
											"name": "DUP4"
										},
										{
											"begin": 58,
											"end": 69,
											"name": "LT"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "PUSH [tag]",
											"value": "249"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMPI"
										},
										{
											"begin": 182,
											"end": 185,
											"name": "DUP1"
										},
										{
											"begin": 176,
											"end": 186,
											"name": "MLOAD"
										},
										{
											"begin": 171,
											"end": 174,
											"name": "DUP3"
										},
										{
											"begin": 164,
											"end": 187,
											"name": "MSTORE"
										},
										{
											"begin": 98,
											"end": 100,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 93,
											"end": 96,
											"name": "DUP3"
										},
										{
											"begin": 89,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 82,
											"end": 101,
											"name": "SWAP2"
										},
										{
											"begin": 82,
											"end": 101,
											"name": "POP"
										},
										{
											"begin": 123,
											"end": 125,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 118,
											"end": 121,
											"name": "DUP2"
										},
										{
											"begin": 114,
											"end": 126,
											"name": "ADD"
										},
										{
											"begin": 107,
											"end": 126,
											"name": "SWAP1"
										},
										{
											"begin": 107,
											"end": 126,
											"name": "POP"
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 143,
											"end": 146,
											"name": "DUP4"
										},
										{
											"begin": 139,
											"end": 151,
											"name": "SUB"
										},
										{
											"begin": 132,
											"end": 151,
											"name": "SWAP3"
										},
										{
											"begin": 132,
											"end": 151,
											"name": "POP"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "PUSH [tag]",
											"value": "247"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMP"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "tag",
											"value": "249"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMPDEST"
										},
										{
											"begin": 274,
											"end": 275,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 267,
											"end": 270,
											"name": "DUP4"
										},
										{
											"begin": 263,
											"end": 265,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 259,
											"end": 271,
											"name": "SUB"
										},
										{
											"begin": 254,
											"end": 257,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 250,
											"end": 272,
											"name": "EXP"
										},
										{
											"begin": 246,
											"end": 276,
											"name": "SUB"
										},
										{
											"begin": 315,
											"end": 319,
											"name": "DUP1"
										},
										{
											"begin": 311,
											"end": 320,
											"name": "NOT"
										},
										{
											"begin": 305,
											"end": 308,
											"name": "DUP3"
										},
										{
											"begin": 299,
											"end": 309,
											"name": "MLOAD"
										},
										{
											"begin": 295,
											"end": 321,
											"name": "AND"
										},
										{
											"begin": 356,
											"end": 360,
											"name": "DUP2"
										},
										{
											"begin": 350,
											"end": 353,
											"name": "DUP5"
										},
										{
											"begin": 344,
											"end": 354,
											"name": "MLOAD"
										},
										{
											"begin": 340,
											"end": 361,
											"name": "AND"
										},
										{
											"begin": 389,
											"end": 396,
											"name": "DUP1"
										},
										{
											"begin": 380,
											"end": 387,
											"name": "DUP3"
										},
										{
											"begin": 377,
											"end": 397,
											"name": "OR"
										},
										{
											"begin": 372,
											"end": 375,
											"name": "DUP6"
										},
										{
											"begin": 365,
											"end": 398,
											"name": "MSTORE"
										},
										{
											"begin": 3,
											"end": 402,
											"name": "POP"
										},
										{
											"begin": 3,
											"end": 402,
											"name": "POP"
										},
										{
											"begin": 3,
											"end": 402,
											"name": "POP"
										},
										{
											"begin": 3457,
											"end": 3482,
											"name": "POP"
										},
										{
											"begin": 3457,
											"end": 3482,
											"name": "POP"
										},
										{
											"begin": 3457,
											"end": 3482,
											"name": "POP"
										},
										{
											"begin": 3457,
											"end": 3482,
											"name": "SWAP1"
										},
										{
											"begin": 3457,
											"end": 3482,
											"name": "POP"
										},
										{
											"begin": 3457,
											"end": 3482,
											"name": "ADD"
										},
										{
											"begin": 3457,
											"end": 3482,
											"name": "SWAP2"
										},
										{
											"begin": 3457,
											"end": 3482,
											"name": "POP"
										},
										{
											"begin": 3457,
											"end": 3482,
											"name": "POP"
										},
										{
											"begin": 3457,
											"end": 3482,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3457,
											"end": 3482,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3457,
											"end": 3482,
											"name": "MLOAD"
										},
										{
											"begin": 3457,
											"end": 3482,
											"name": "DUP1"
										},
										{
											"begin": 3457,
											"end": 3482,
											"name": "DUP4"
										},
										{
											"begin": 3457,
											"end": 3482,
											"name": "SUB"
										},
										{
											"begin": 3457,
											"end": 3482,
											"name": "DUP2"
										},
										{
											"begin": 3457,
											"end": 3482,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3457,
											"end": 3482,
											"name": "DUP7"
										},
										{
											"begin": 3457,
											"end": 3482,
											"name": "GAS"
										},
										{
											"begin": 3457,
											"end": 3482,
											"name": "CALL"
										},
										{
											"begin": 3457,
											"end": 3482,
											"name": "SWAP2"
										},
										{
											"begin": 3457,
											"end": 3482,
											"name": "POP"
										},
										{
											"begin": 3457,
											"end": 3482,
											"name": "POP"
										},
										{
											"begin": 3457,
											"end": 3482,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 14,
											"end": 15,
											"name": "DUP1"
										},
										{
											"begin": 21,
											"end": 22,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16,
											"end": 47,
											"name": "DUP2"
										},
										{
											"begin": 16,
											"end": 47,
											"name": "EQ"
										},
										{
											"begin": 16,
											"end": 47,
											"name": "PUSH [tag]",
											"value": "251"
										},
										{
											"begin": 16,
											"end": 47,
											"name": "JUMPI"
										},
										{
											"begin": 75,
											"end": 79,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 69,
											"end": 80,
											"name": "MLOAD"
										},
										{
											"begin": 64,
											"end": 80,
											"name": "SWAP2"
										},
										{
											"begin": 64,
											"end": 80,
											"name": "POP"
										},
										{
											"begin": 144,
											"end": 148,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 140,
											"end": 149,
											"name": "NOT"
										},
										{
											"begin": 133,
											"end": 137,
											"name": "PUSH",
											"value": "3F"
										},
										{
											"begin": 115,
											"end": 131,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 111,
											"end": 138,
											"name": "ADD"
										},
										{
											"begin": 107,
											"end": 150,
											"name": "AND"
										},
										{
											"begin": 104,
											"end": 105,
											"name": "DUP3"
										},
										{
											"begin": 100,
											"end": 151,
											"name": "ADD"
										},
										{
											"begin": 94,
											"end": 98,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 87,
											"end": 152,
											"name": "MSTORE"
										},
										{
											"begin": 169,
											"end": 185,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 166,
											"end": 167,
											"name": "DUP3"
										},
										{
											"begin": 159,
											"end": 186,
											"name": "MSTORE"
										},
										{
											"begin": 225,
											"end": 241,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 222,
											"end": 223,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 215,
											"end": 219,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 212,
											"end": 213,
											"name": "DUP5"
										},
										{
											"begin": 208,
											"end": 220,
											"name": "ADD"
										},
										{
											"begin": 193,
											"end": 242,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 7,
											"end": 249,
											"name": "PUSH [tag]",
											"value": "250"
										},
										{
											"begin": 7,
											"end": 249,
											"name": "JUMP"
										},
										{
											"begin": 16,
											"end": 47,
											"name": "tag",
											"value": "251"
										},
										{
											"begin": 16,
											"end": 47,
											"name": "JUMPDEST"
										},
										{
											"begin": 36,
											"end": 40,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 31,
											"end": 40,
											"name": "SWAP2"
										},
										{
											"begin": 31,
											"end": 40,
											"name": "POP"
										},
										{
											"begin": 7,
											"end": 249,
											"name": "tag",
											"value": "250"
										},
										{
											"begin": 7,
											"end": 249,
											"name": "JUMPDEST"
										},
										{
											"begin": 7,
											"end": 249,
											"name": "POP"
										},
										{
											"begin": 3415,
											"end": 3482,
											"name": "SWAP2"
										},
										{
											"begin": 3415,
											"end": 3482,
											"name": "POP"
										},
										{
											"begin": 3415,
											"end": 3482,
											"name": "SWAP2"
										},
										{
											"begin": 3415,
											"end": 3482,
											"name": "POP"
										},
										{
											"begin": 3501,
											"end": 3508,
											"name": "DUP2"
										},
										{
											"begin": 3493,
											"end": 3545,
											"name": "PUSH [tag]",
											"value": "252"
										},
										{
											"begin": 3493,
											"end": 3545,
											"name": "JUMPI"
										},
										{
											"begin": 3493,
											"end": 3545,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3493,
											"end": 3545,
											"name": "MLOAD"
										},
										{
											"begin": 3493,
											"end": 3545,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3493,
											"end": 3545,
											"name": "DUP2"
										},
										{
											"begin": 3493,
											"end": 3545,
											"name": "MSTORE"
										},
										{
											"begin": 3493,
											"end": 3545,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3493,
											"end": 3545,
											"name": "ADD"
										},
										{
											"begin": 3493,
											"end": 3545,
											"name": "DUP1"
										},
										{
											"begin": 3493,
											"end": 3545,
											"name": "DUP1"
										},
										{
											"begin": 3493,
											"end": 3545,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3493,
											"end": 3545,
											"name": "ADD"
										},
										{
											"begin": 3493,
											"end": 3545,
											"name": "DUP3"
										},
										{
											"begin": 3493,
											"end": 3545,
											"name": "DUP2"
										},
										{
											"begin": 3493,
											"end": 3545,
											"name": "SUB"
										},
										{
											"begin": 3493,
											"end": 3545,
											"name": "DUP3"
										},
										{
											"begin": 3493,
											"end": 3545,
											"name": "MSTORE"
										},
										{
											"begin": 3493,
											"end": 3545,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3493,
											"end": 3545,
											"name": "DUP2"
										},
										{
											"begin": 3493,
											"end": 3545,
											"name": "MSTORE"
										},
										{
											"begin": 3493,
											"end": 3545,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3493,
											"end": 3545,
											"name": "ADD"
										},
										{
											"begin": 3493,
											"end": 3545,
											"name": "DUP1"
										},
										{
											"begin": 3493,
											"end": 3545,
											"name": "PUSH",
											"value": "5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564"
										},
										{
											"begin": 3493,
											"end": 3545,
											"name": "DUP2"
										},
										{
											"begin": 3493,
											"end": 3545,
											"name": "MSTORE"
										},
										{
											"begin": 3493,
											"end": 3545,
											"name": "POP"
										},
										{
											"begin": 3493,
											"end": 3545,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3493,
											"end": 3545,
											"name": "ADD"
										},
										{
											"begin": 3493,
											"end": 3545,
											"name": "SWAP2"
										},
										{
											"begin": 3493,
											"end": 3545,
											"name": "POP"
										},
										{
											"begin": 3493,
											"end": 3545,
											"name": "POP"
										},
										{
											"begin": 3493,
											"end": 3545,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3493,
											"end": 3545,
											"name": "MLOAD"
										},
										{
											"begin": 3493,
											"end": 3545,
											"name": "DUP1"
										},
										{
											"begin": 3493,
											"end": 3545,
											"name": "SWAP2"
										},
										{
											"begin": 3493,
											"end": 3545,
											"name": "SUB"
										},
										{
											"begin": 3493,
											"end": 3545,
											"name": "SWAP1"
										},
										{
											"begin": 3493,
											"end": 3545,
											"name": "REVERT"
										},
										{
											"begin": 3493,
											"end": 3545,
											"name": "tag",
											"value": "252"
										},
										{
											"begin": 3493,
											"end": 3545,
											"name": "JUMPDEST"
										},
										{
											"begin": 3582,
											"end": 3583,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3562,
											"end": 3572,
											"name": "DUP2"
										},
										{
											"begin": 3562,
											"end": 3579,
											"name": "MLOAD"
										},
										{
											"begin": 3562,
											"end": 3583,
											"name": "GT"
										},
										{
											"begin": 3558,
											"end": 3782,
											"name": "ISZERO"
										},
										{
											"begin": 3558,
											"end": 3782,
											"name": "PUSH [tag]",
											"value": "253"
										},
										{
											"begin": 3558,
											"end": 3782,
											"name": "JUMPI"
										},
										{
											"begin": 3704,
											"end": 3714,
											"name": "DUP1"
										},
										{
											"begin": 3693,
											"end": 3723,
											"name": "DUP1"
										},
										{
											"begin": 3693,
											"end": 3723,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3693,
											"end": 3723,
											"name": "ADD"
										},
										{
											"begin": 3693,
											"end": 3723,
											"name": "SWAP1"
										},
										{
											"begin": 3693,
											"end": 3723,
											"name": "MLOAD"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "254"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "254"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 3693,
											"end": 3723,
											"name": "DUP2"
										},
										{
											"begin": 3693,
											"end": 3723,
											"name": "ADD"
										},
										{
											"begin": 3693,
											"end": 3723,
											"name": "SWAP1"
										},
										{
											"begin": 3693,
											"end": 3723,
											"name": "DUP1"
										},
										{
											"begin": 3693,
											"end": 3723,
											"name": "DUP1"
										},
										{
											"begin": 3693,
											"end": 3723,
											"name": "MLOAD"
										},
										{
											"begin": 3693,
											"end": 3723,
											"name": "SWAP1"
										},
										{
											"begin": 3693,
											"end": 3723,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3693,
											"end": 3723,
											"name": "ADD"
										},
										{
											"begin": 3693,
											"end": 3723,
											"name": "SWAP1"
										},
										{
											"begin": 3693,
											"end": 3723,
											"name": "SWAP3"
										},
										{
											"begin": 3693,
											"end": 3723,
											"name": "SWAP2"
										},
										{
											"begin": 3693,
											"end": 3723,
											"name": "SWAP1"
										},
										{
											"begin": 3693,
											"end": 3723,
											"name": "POP"
										},
										{
											"begin": 3693,
											"end": 3723,
											"name": "POP"
										},
										{
											"begin": 3693,
											"end": 3723,
											"name": "POP"
										},
										{
											"begin": 3685,
											"end": 3770,
											"name": "PUSH [tag]",
											"value": "255"
										},
										{
											"begin": 3685,
											"end": 3770,
											"name": "JUMPI"
										},
										{
											"begin": 3685,
											"end": 3770,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3685,
											"end": 3770,
											"name": "MLOAD"
										},
										{
											"begin": 3685,
											"end": 3770,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3685,
											"end": 3770,
											"name": "DUP2"
										},
										{
											"begin": 3685,
											"end": 3770,
											"name": "MSTORE"
										},
										{
											"begin": 3685,
											"end": 3770,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3685,
											"end": 3770,
											"name": "ADD"
										},
										{
											"begin": 3685,
											"end": 3770,
											"name": "DUP1"
										},
										{
											"begin": 3685,
											"end": 3770,
											"name": "DUP1"
										},
										{
											"begin": 3685,
											"end": 3770,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3685,
											"end": 3770,
											"name": "ADD"
										},
										{
											"begin": 3685,
											"end": 3770,
											"name": "DUP3"
										},
										{
											"begin": 3685,
											"end": 3770,
											"name": "DUP2"
										},
										{
											"begin": 3685,
											"end": 3770,
											"name": "SUB"
										},
										{
											"begin": 3685,
											"end": 3770,
											"name": "DUP3"
										},
										{
											"begin": 3685,
											"end": 3770,
											"name": "MSTORE"
										},
										{
											"begin": 3685,
											"end": 3770,
											"name": "PUSH",
											"value": "2A"
										},
										{
											"begin": 3685,
											"end": 3770,
											"name": "DUP2"
										},
										{
											"begin": 3685,
											"end": 3770,
											"name": "MSTORE"
										},
										{
											"begin": 3685,
											"end": 3770,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3685,
											"end": 3770,
											"name": "ADD"
										},
										{
											"begin": 3685,
											"end": 3770,
											"name": "DUP1"
										},
										{
											"begin": 3685,
											"end": 3770,
											"name": "PUSH data",
											"value": "E11AD79D1E4A7F2E5F376964CB99E8E8F7904E3FC16A109F7A7ECB9AA7956DCD"
										},
										{
											"begin": 3685,
											"end": 3770,
											"name": "PUSH",
											"value": "2A"
										},
										{
											"begin": 3685,
											"end": 3770,
											"name": "SWAP2"
										},
										{
											"begin": 3685,
											"end": 3770,
											"name": "CODECOPY"
										},
										{
											"begin": 3685,
											"end": 3770,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3685,
											"end": 3770,
											"name": "ADD"
										},
										{
											"begin": 3685,
											"end": 3770,
											"name": "SWAP2"
										},
										{
											"begin": 3685,
											"end": 3770,
											"name": "POP"
										},
										{
											"begin": 3685,
											"end": 3770,
											"name": "POP"
										},
										{
											"begin": 3685,
											"end": 3770,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3685,
											"end": 3770,
											"name": "MLOAD"
										},
										{
											"begin": 3685,
											"end": 3770,
											"name": "DUP1"
										},
										{
											"begin": 3685,
											"end": 3770,
											"name": "SWAP2"
										},
										{
											"begin": 3685,
											"end": 3770,
											"name": "SUB"
										},
										{
											"begin": 3685,
											"end": 3770,
											"name": "SWAP1"
										},
										{
											"begin": 3685,
											"end": 3770,
											"name": "REVERT"
										},
										{
											"begin": 3685,
											"end": 3770,
											"name": "tag",
											"value": "255"
										},
										{
											"begin": 3685,
											"end": 3770,
											"name": "JUMPDEST"
										},
										{
											"begin": 3558,
											"end": 3782,
											"name": "tag",
											"value": "253"
										},
										{
											"begin": 3558,
											"end": 3782,
											"name": "JUMPDEST"
										},
										{
											"begin": 2675,
											"end": 3789,
											"name": "POP"
										},
										{
											"begin": 2675,
											"end": 3789,
											"name": "POP"
										},
										{
											"begin": 2675,
											"end": 3789,
											"name": "POP"
										},
										{
											"begin": 2675,
											"end": 3789,
											"name": "POP"
										},
										{
											"begin": 2675,
											"end": 3789,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 558,
											"end": 980,
											"name": "tag",
											"value": "245"
										},
										{
											"begin": 558,
											"end": 980,
											"name": "JUMPDEST"
										},
										{
											"begin": 618,
											"end": 622,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 826,
											"end": 838,
											"name": "DUP1"
										},
										{
											"begin": 937,
											"end": 944,
											"name": "DUP3"
										},
										{
											"begin": 925,
											"end": 945,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 917,
											"end": 945,
											"name": "SWAP1"
										},
										{
											"begin": 917,
											"end": 945,
											"name": "POP"
										},
										{
											"begin": 971,
											"end": 972,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 964,
											"end": 968,
											"name": "DUP2"
										},
										{
											"begin": 964,
											"end": 972,
											"name": "GT"
										},
										{
											"begin": 957,
											"end": 972,
											"name": "SWAP2"
										},
										{
											"begin": 957,
											"end": 972,
											"name": "POP"
										},
										{
											"begin": 957,
											"end": 972,
											"name": "POP"
										},
										{
											"begin": 558,
											"end": 980,
											"name": "SWAP2"
										},
										{
											"begin": 558,
											"end": 980,
											"name": "SWAP1"
										},
										{
											"begin": 558,
											"end": 980,
											"name": "POP"
										},
										{
											"begin": 558,
											"end": 980,
											"name": "JUMP",
											"value": "[out]"
										}
									],
									".data": {
										"1149E36CD24095BEBC9341EF03810E0E2A00039190624DF6F2D7934141E2233B": "596f75206d757374206265206e6f6d696e61746564206265666f726520796f752063616e20616363657074206f776e657273686970",
										"7F2725172F5941B576A01EC7036D341E0C837E280F27B110CB3E6FD2F2C4A56": "50726576696f7573207265776172647320706572696f64206d75737420626520636f6d706c657465206265666f7265206368616e67696e6720746865206475726174696f6e20666f7220746865206e657720706572696f64",
										"873D2051B76E0142B287297AFDFC273BF1AB5C24EE229ED4EF117F1FF0679A4A": "4f6e6c792074686520636f6e7472616374206f776e6572206d617920706572666f726d207468697320616374696f6e",
										"9113BB53C2876A3805B2C9242029423FC540A728243CE887AB24C82CF119FBA3": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77",
										"B214273CDB244871F55E1966D43AD7FEBCE81860C609DDA0E226C7C1B7959D6F": "5468697320616374696f6e2063616e6e6f7420626520706572666f726d6564207768696c652074686520636f6e747261637420697320706175736564",
										"D50B095422F4CBFCB4C90FBD4D55AAF0967BF1D90E94BB6A1AE9FC4EE7E733DE": "43616c6c6572206973206e6f742052657761726473446973747269627574696f6e20636f6e7472616374",
										"E11AD79D1E4A7F2E5F376964CB99E8E8F7904E3FC16A109F7A7ECB9AA7956DCD": "5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564",
										"F43DE9F2A3539B2AC9CF1844588E9CC0ACD1B2BDB1EC43734F76440993EDE0A9": "43616e6e6f7420776974686472617720746865207374616b696e6720746f6b656e"
									}
								}
							}
						},
						"methodIdentifiers": {
							"acceptOwnership()": "79ba5097",
							"balanceOf(address)": "70a08231",
							"earned(address)": "008cc262",
							"exit()": "e9fad8ee",
							"getReward()": "3d18b912",
							"getRewardForDuration()": "1c1f78eb",
							"lastPauseTime()": "91b4ded9",
							"lastTimeRewardApplicable()": "80faa57d",
							"lastUpdateTime()": "c8f33c91",
							"nominateNewOwner(address)": "1627540c",
							"nominatedOwner()": "53a47bb7",
							"notifyRewardAmount(uint256)": "3c6b16ab",
							"owner()": "8da5cb5b",
							"paused()": "5c975abb",
							"periodFinish()": "ebe2b12b",
							"recoverERC20(address,uint256)": "8980f11f",
							"rewardPerToken()": "cd3daf9d",
							"rewardPerTokenStored()": "df136d65",
							"rewardRate()": "7b0a47ee",
							"rewards(address)": "0700037d",
							"rewardsDistribution()": "3fc6df6e",
							"rewardsDuration()": "386a9525",
							"rewardsToken()": "d1af0c7d",
							"setPaused(bool)": "16c38b3c",
							"setRewardsDistribution(address)": "19762143",
							"setRewardsDuration(uint256)": "cc1a378f",
							"stake(uint256)": "a694fc3a",
							"stakingToken()": "72f702f3",
							"totalSupply()": "18160ddd",
							"userRewardPerTokenPaid(address)": "8b876347",
							"withdraw(uint256)": "2e1a7d4d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_rewardsDistribution\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_rewardsToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_stakingToken\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldOwner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnerChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnerNominated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isPaused\",\"type\":\"bool\"}],\"name\":\"PauseChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Recovered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"}],\"name\":\"RewardAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"}],\"name\":\"RewardPaid\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newDuration\",\"type\":\"uint256\"}],\"name\":\"RewardsDurationUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Staked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdrawn\",\"type\":\"event\"},{\"constant\":false,\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"earned\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"exit\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"getReward\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getRewardForDuration\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"lastPauseTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"lastTimeRewardApplicable\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"lastUpdateTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"nominateNewOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"nominatedOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"}],\"name\":\"notifyRewardAmount\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"periodFinish\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenAmount\",\"type\":\"uint256\"}],\"name\":\"recoverERC20\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"rewardPerToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"rewardPerTokenStored\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"rewardRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"rewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"rewardsDistribution\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"rewardsDuration\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"rewardsToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_paused\",\"type\":\"bool\"}],\"name\":\"setPaused\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_rewardsDistribution\",\"type\":\"address\"}],\"name\":\"setRewardsDistribution\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_rewardsDuration\",\"type\":\"uint256\"}],\"name\":\"setRewardsDuration\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"stake\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"stakingToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userRewardPerTokenPaid\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"setPaused(bool)\":{\"details\":\"Only the contract owner may call this.\"}}},\"userdoc\":{\"methods\":{\"setPaused(bool)\":{\"notice\":\"Change the paused state of the contract\"}}}},\"settings\":{\"compilationTarget\":{\"contracts/StakingRewards.sol\":\"StakingRewards\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Owned.sol\":{\"keccak256\":\"0x62a6e5404c053fc1ec001aee4949691d44393d0b2f33ec81ff064b5603a16c37\",\"urls\":[\"bzz-raw://b1d3636df12de8bb56954159620a311ad5ef76d479777492ab95e4dfa873f5b3\",\"dweb:/ipfs/QmZCoz7YyQ7RMQ2nG7K3asn8c9EJecbcDi28PnCXRXWTG1\"]},\"contracts/Pausable.sol\":{\"keccak256\":\"0x75c6ae735d6a26cd363d0ba8e62757f68c8b46ee840142da5cefec5e2a123ef4\",\"urls\":[\"bzz-raw://b1cea5eb60be0c7c9a09d25087efb8e2784e06d38c56074cb3b78f4d939c0aa5\",\"dweb:/ipfs/QmeMQCohmxnKWUn7CB1Lv6MRKEhMcABxZDDvFPNn6no7SC\"]},\"contracts/RewardsDistributionRecipient.sol\":{\"keccak256\":\"0x4a8e63aaa5da0a64f3acc03c851389be53589d16cc9095d007ec9763538cc7a5\",\"urls\":[\"bzz-raw://675df347bcd37cc76495d486b05dcb71f83f903c08f72593473ea5bc02ff9555\",\"dweb:/ipfs/QmPS3PvvCwmBAJaWsNfgtcVxVpxby33tMFKiVwNW7JGKX4\"]},\"contracts/StakingRewards.sol\":{\"keccak256\":\"0x9a09bb62163741fb31394358a568aedc648c4ef3ca523cff84c224092dafcb99\",\"urls\":[\"bzz-raw://147b3d1a7bd748d477a5abaebc9f407370e301e12b9538633f7d53822898acd0\",\"dweb:/ipfs/QmS6NimhdRYJ5iTykQMy3YLKDBgaJiLoxhHLhAz2YEwWy8\"]},\"contracts/interfaces/IStakingRewards.sol\":{\"keccak256\":\"0xfac36fbb67e4943663d963384e2097d2d18604d6c20dc944230c204e7f10c52a\",\"urls\":[\"bzz-raw://4f93f264832295a14627f42c89529d33d9bd2adb5a738caa19ec32d16c99050b\",\"dweb:/ipfs/QmU61qE6yDii5exb6DA8ozUD5hLPXhALRKwrzywPvjzgU9\"]},\"openzeppelin-solidity-2.3.0/contracts/math/SafeMath.sol\":{\"keccak256\":\"0xc6716e4895f91ee3dcd76485971b5c119987dff40f5b669095314df3f498e343\",\"urls\":[\"bzz-raw://477269b470603d966267165570652da3af5a8cffb3a763f491e9f57103243fa5\",\"dweb:/ipfs/QmNnCspbeDWf6eCpvnpkTXp67A4kvvZuZCKFbWf447g3KK\"]},\"openzeppelin-solidity-2.3.0/contracts/token/ERC20/ERC20Detailed.sol\":{\"keccak256\":\"0x43246a4826ec41bec488c9993d459295a73018fa246a2df97ad78c9ebf94bb6e\",\"urls\":[\"bzz-raw://cf589e78d49f524ebf779748137dbaeb2f6616e652a6bb0f590adee423998f93\",\"dweb:/ipfs/QmXMrqRU3ukaPqXeGdMfGauBWWtQ4MtpLG7wMaZELtriV9\"]},\"openzeppelin-solidity-2.3.0/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9b8060bfbd1e10d85b116441e63da0aae1f4b6a16716fb555f7effbe4f8fb7f9\",\"urls\":[\"bzz-raw://62e12b469aad65c98d45c17a0d43d6a6fe235a699a968bfd9f1e61ca4f11af1a\",\"dweb:/ipfs/QmSjTMbSFwjJrRf5bqZ5RE254F4B7hi3Q9rxpYxAzWKQNh\"]},\"openzeppelin-solidity-2.3.0/contracts/token/ERC20/SafeERC20.sol\":{\"keccak256\":\"0xae7d568ac6b251e1b3278d996f91c6f5d4820108a9931ed94b069e9f517162cc\",\"urls\":[\"bzz-raw://298f502d1fe25c07a4ac5ea8c4ffcc52c43b908e4f95e1fae58ea8edeb15fa65\",\"dweb:/ipfs/Qmc8VQgzxXWBnL4H8Tg39XsEMnT5YGJKtmLpYLxrZpFBh9\"]},\"openzeppelin-solidity-2.3.0/contracts/utils/Address.sol\":{\"keccak256\":\"0x992bce8d5a6b643f20e352e55b07fe3affa771c8e921c4c1e5623c5d4ac3839b\",\"urls\":[\"bzz-raw://b1f673f597788d0dcbe8b25644c8fc602d3f902b78a25fad9352e667987be4e6\",\"dweb:/ipfs/QmNcmAaFuCGTa27mwAgVCXoxSDz8tkCnRKLtjEmtad6hs9\"]},\"openzeppelin-solidity-2.3.0/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x595140e1dd18f1269118ff7de1fc334973de62d607107afe25937713ae11b14d\",\"urls\":[\"bzz-raw://4fb758e8f0de5d4d4f1e3289f62489558281da3c124c440776ff51572d478349\",\"dweb:/ipfs/QmbDaE2EGYKTHcdeQuDgeMmuuVUdLbUKEpCLNJRLWW7XHT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 3,
								"contract": "contracts/StakingRewards.sol:StakingRewards",
								"label": "owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 5,
								"contract": "contracts/StakingRewards.sol:StakingRewards",
								"label": "nominatedOwner",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							},
							{
								"astId": 177,
								"contract": "contracts/StakingRewards.sol:StakingRewards",
								"label": "rewardsDistribution",
								"offset": 0,
								"slot": "2",
								"type": "t_address"
							},
							{
								"astId": 1345,
								"contract": "contracts/StakingRewards.sol:StakingRewards",
								"label": "_guardCounter",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 111,
								"contract": "contracts/StakingRewards.sol:StakingRewards",
								"label": "lastPauseTime",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							},
							{
								"astId": 113,
								"contract": "contracts/StakingRewards.sol:StakingRewards",
								"label": "paused",
								"offset": 0,
								"slot": "5",
								"type": "t_bool"
							},
							{
								"astId": 232,
								"contract": "contracts/StakingRewards.sol:StakingRewards",
								"label": "rewardsToken",
								"offset": 1,
								"slot": "5",
								"type": "t_contract(IERC20)1103"
							},
							{
								"astId": 234,
								"contract": "contracts/StakingRewards.sol:StakingRewards",
								"label": "stakingToken",
								"offset": 0,
								"slot": "6",
								"type": "t_contract(IERC20)1103"
							},
							{
								"astId": 237,
								"contract": "contracts/StakingRewards.sol:StakingRewards",
								"label": "periodFinish",
								"offset": 0,
								"slot": "7",
								"type": "t_uint256"
							},
							{
								"astId": 240,
								"contract": "contracts/StakingRewards.sol:StakingRewards",
								"label": "rewardRate",
								"offset": 0,
								"slot": "8",
								"type": "t_uint256"
							},
							{
								"astId": 243,
								"contract": "contracts/StakingRewards.sol:StakingRewards",
								"label": "rewardsDuration",
								"offset": 0,
								"slot": "9",
								"type": "t_uint256"
							},
							{
								"astId": 245,
								"contract": "contracts/StakingRewards.sol:StakingRewards",
								"label": "lastUpdateTime",
								"offset": 0,
								"slot": "10",
								"type": "t_uint256"
							},
							{
								"astId": 247,
								"contract": "contracts/StakingRewards.sol:StakingRewards",
								"label": "rewardPerTokenStored",
								"offset": 0,
								"slot": "11",
								"type": "t_uint256"
							},
							{
								"astId": 251,
								"contract": "contracts/StakingRewards.sol:StakingRewards",
								"label": "userRewardPerTokenPaid",
								"offset": 0,
								"slot": "12",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 255,
								"contract": "contracts/StakingRewards.sol:StakingRewards",
								"label": "rewards",
								"offset": 0,
								"slot": "13",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 257,
								"contract": "contracts/StakingRewards.sol:StakingRewards",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "14",
								"type": "t_uint256"
							},
							{
								"astId": 261,
								"contract": "contracts/StakingRewards.sol:StakingRewards",
								"label": "_balances",
								"offset": 0,
								"slot": "15",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_contract(IERC20)1103": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"methods": {
							"setPaused(bool)": {
								"notice": "Change the paused state of the contract"
							}
						}
					}
				}
			},
			"contracts/interfaces/IStakingRewards.sol": {
				"IStakingRewards": {
					"abi": [
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "earned",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "exit",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "getReward",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "getRewardForDuration",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "lastTimeRewardApplicable",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "rewardPerToken",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "rewardsDistribution",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "rewardsToken",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "stake",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address)": "70a08231",
							"earned(address)": "008cc262",
							"exit()": "e9fad8ee",
							"getReward()": "3d18b912",
							"getRewardForDuration()": "1c1f78eb",
							"lastTimeRewardApplicable()": "80faa57d",
							"rewardPerToken()": "cd3daf9d",
							"rewardsDistribution()": "3fc6df6e",
							"rewardsToken()": "d1af0c7d",
							"stake(uint256)": "a694fc3a",
							"totalSupply()": "18160ddd",
							"withdraw(uint256)": "2e1a7d4d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"earned\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"exit\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"getReward\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getRewardForDuration\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"lastTimeRewardApplicable\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"rewardPerToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"rewardsDistribution\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"rewardsToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"stake\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IStakingRewards.sol\":\"IStakingRewards\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IStakingRewards.sol\":{\"keccak256\":\"0xfac36fbb67e4943663d963384e2097d2d18604d6c20dc944230c204e7f10c52a\",\"urls\":[\"bzz-raw://4f93f264832295a14627f42c89529d33d9bd2adb5a738caa19ec32d16c99050b\",\"dweb:/ipfs/QmU61qE6yDii5exb6DA8ozUD5hLPXhALRKwrzywPvjzgU9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				}
			},
			"openzeppelin-solidity-2.3.0/contracts/math/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations with added overflow checks.  * Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows.  * Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.",
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"openzeppelin-solidity-2.3.0/contracts/math/SafeMath.sol\":604:3634  library SafeMath {\r... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n    /* \"--CODEGEN--\":132:134   */\n  0x0b\n    /* \"--CODEGEN--\":166:173   */\n  dup3\n    /* \"--CODEGEN--\":155:164   */\n  dup3\n    /* \"--CODEGEN--\":146:153   */\n  dup3\n    /* \"--CODEGEN--\":137:174   */\n  codecopy\n    /* \"--CODEGEN--\":255:262   */\n  dup1\n    /* \"--CODEGEN--\":249:263   */\n  mload\n    /* \"--CODEGEN--\":246:247   */\n  0x00\n    /* \"--CODEGEN--\":241:264   */\n  byte\n    /* \"--CODEGEN--\":235:239   */\n  0x73\n    /* \"--CODEGEN--\":232:265   */\n  eq\n    /* \"--CODEGEN--\":222:224   */\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":269:278   */\n  invalid\n    /* \"--CODEGEN--\":222:224   */\ntag_1:\n    /* \"--CODEGEN--\":293:302   */\n  address\n    /* \"--CODEGEN--\":290:291   */\n  0x00\n    /* \"--CODEGEN--\":283:303   */\n  mstore\n    /* \"--CODEGEN--\":323:327   */\n  0x73\n    /* \"--CODEGEN--\":314:321   */\n  dup2\n    /* \"--CODEGEN--\":306:328   */\n  mstore8\n    /* \"--CODEGEN--\":347:354   */\n  dup3\n    /* \"--CODEGEN--\":338:345   */\n  dup2\n    /* \"--CODEGEN--\":331:355   */\n  return\nstop\n\nsub_0: assembly {\n        /* \"openzeppelin-solidity-2.3.0/contracts/math/SafeMath.sol\":604:3634  library SafeMath {\r... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa265627a7a72315820e10b13b6e9de6c66332152c79d046811c4bbf8dc3bd81453a287be337438e30264736f6c63430005100032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60556023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a72315820e10b13b6e9de6c66332152c79d046811c4bbf8dc3bd81453a287be337438e30264736f6c63430005100032",
							"opcodes": "PUSH1 0x55 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 0xE1 SIGNEXTEND SGT 0xB6 0xE9 0xDE PUSH13 0x66332152C79D046811C4BBF8DC EXTCODESIZE 0xD8 EQ MSTORE8 LOG2 DUP8 0xBE CALLER PUSH21 0x38E30264736F6C6343000510003200000000000000 ",
							"sourceMap": "604:3030:5:-;;132:2:-1;166:7;155:9;146:7;137:37;255:7;249:14;246:1;241:23;235:4;232:33;222:2;;269:9;222:2;293:9;290:1;283:20;323:4;314:7;306:22;347:7;338;331:24"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a72315820e10b13b6e9de6c66332152c79d046811c4bbf8dc3bd81453a287be337438e30264736f6c63430005100032",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 0xE1 SIGNEXTEND SGT 0xB6 0xE9 0xDE PUSH13 0x66332152C79D046811C4BBF8DC EXTCODESIZE 0xD8 EQ MSTORE8 LOG2 DUP8 0xBE CALLER PUSH21 0x38E30264736F6C6343000510003200000000000000 ",
							"sourceMap": "604:3030:5:-;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "94",
								"totalCost": "17094"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 604,
									"end": 3634,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 604,
									"end": 3634,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 132,
									"end": 134,
									"name": "PUSH",
									"value": "B"
								},
								{
									"begin": 166,
									"end": 173,
									"name": "DUP3"
								},
								{
									"begin": 155,
									"end": 164,
									"name": "DUP3"
								},
								{
									"begin": 146,
									"end": 153,
									"name": "DUP3"
								},
								{
									"begin": 137,
									"end": 174,
									"name": "CODECOPY"
								},
								{
									"begin": 255,
									"end": 262,
									"name": "DUP1"
								},
								{
									"begin": 249,
									"end": 263,
									"name": "MLOAD"
								},
								{
									"begin": 246,
									"end": 247,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 241,
									"end": 264,
									"name": "BYTE"
								},
								{
									"begin": 235,
									"end": 239,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 232,
									"end": 265,
									"name": "EQ"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPI"
								},
								{
									"begin": 269,
									"end": 278,
									"name": "INVALID"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPDEST"
								},
								{
									"begin": 293,
									"end": 302,
									"name": "ADDRESS"
								},
								{
									"begin": 290,
									"end": 291,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 283,
									"end": 303,
									"name": "MSTORE"
								},
								{
									"begin": 323,
									"end": 327,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 314,
									"end": 321,
									"name": "DUP2"
								},
								{
									"begin": 306,
									"end": 328,
									"name": "MSTORE8"
								},
								{
									"begin": 347,
									"end": 354,
									"name": "DUP3"
								},
								{
									"begin": 338,
									"end": 345,
									"name": "DUP2"
								},
								{
									"begin": 331,
									"end": 355,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a72315820e10b13b6e9de6c66332152c79d046811c4bbf8dc3bd81453a287be337438e30264736f6c63430005100032",
									".code": [
										{
											"begin": 604,
											"end": 3634,
											"name": "PUSHDEPLOYADDRESS"
										},
										{
											"begin": 604,
											"end": 3634,
											"name": "ADDRESS"
										},
										{
											"begin": 604,
											"end": 3634,
											"name": "EQ"
										},
										{
											"begin": 604,
											"end": 3634,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 604,
											"end": 3634,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 604,
											"end": 3634,
											"name": "MSTORE"
										},
										{
											"begin": 604,
											"end": 3634,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 604,
											"end": 3634,
											"name": "DUP1"
										},
										{
											"begin": 604,
											"end": 3634,
											"name": "REVERT"
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations with added overflow checks.  * Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows.  * Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"openzeppelin-solidity-2.3.0/contracts/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"openzeppelin-solidity-2.3.0/contracts/math/SafeMath.sol\":{\"keccak256\":\"0xc6716e4895f91ee3dcd76485971b5c119987dff40f5b669095314df3f498e343\",\"urls\":[\"bzz-raw://477269b470603d966267165570652da3af5a8cffb3a763f491e9f57103243fa5\",\"dweb:/ipfs/QmNnCspbeDWf6eCpvnpkTXp67A4kvvZuZCKFbWf447g3KK\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				}
			},
			"openzeppelin-solidity-2.3.0/contracts/token/ERC20/ERC20Detailed.sol": {
				"ERC20Detailed": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol",
									"type": "string"
								},
								{
									"internalType": "uint8",
									"name": "decimals",
									"type": "uint8"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Optional functions from the ERC20 standard.",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through `transferFrom`. This is zero by default.      * This value changes when `approve` or `transferFrom` are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens.      * Returns a boolean value indicating whether the operation succeeded.      * > Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729      * Emits an `Approval` event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"constructor": {
								"details": "Sets the values for `name`, `symbol`, and `decimals`. All three of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`).      * Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei.      * > Note that this information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including `IERC20.balanceOf` and `IERC20.transfer`."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`.      * Returns a boolean value indicating whether the operation succeeded.      * Emits a `Transfer` event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance.      * Returns a boolean value indicating whether the operation succeeded.      * Emits a `Transfer` event."
							}
						}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Optional functions from the ERC20 standard.\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through `transferFrom`. This is zero by default.      * This value changes when `approve` or `transferFrom` are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens.      * Returns a boolean value indicating whether the operation succeeded.      * > Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729      * Emits an `Approval` event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"constructor\":{\"details\":\"Sets the values for `name`, `symbol`, and `decimals`. All three of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`).      * Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei.      * > Note that this information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including `IERC20.balanceOf` and `IERC20.transfer`.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`.      * Returns a boolean value indicating whether the operation succeeded.      * Emits a `Transfer` event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance.      * Returns a boolean value indicating whether the operation succeeded.      * Emits a `Transfer` event.\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"openzeppelin-solidity-2.3.0/contracts/token/ERC20/ERC20Detailed.sol\":\"ERC20Detailed\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"openzeppelin-solidity-2.3.0/contracts/token/ERC20/ERC20Detailed.sol\":{\"keccak256\":\"0x43246a4826ec41bec488c9993d459295a73018fa246a2df97ad78c9ebf94bb6e\",\"urls\":[\"bzz-raw://cf589e78d49f524ebf779748137dbaeb2f6616e652a6bb0f590adee423998f93\",\"dweb:/ipfs/QmXMrqRU3ukaPqXeGdMfGauBWWtQ4MtpLG7wMaZELtriV9\"]},\"openzeppelin-solidity-2.3.0/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9b8060bfbd1e10d85b116441e63da0aae1f4b6a16716fb555f7effbe4f8fb7f9\",\"urls\":[\"bzz-raw://62e12b469aad65c98d45c17a0d43d6a6fe235a699a968bfd9f1e61ca4f11af1a\",\"dweb:/ipfs/QmSjTMbSFwjJrRf5bqZ5RE254F4B7hi3Q9rxpYxAzWKQNh\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 983,
								"contract": "openzeppelin-solidity-2.3.0/contracts/token/ERC20/ERC20Detailed.sol:ERC20Detailed",
								"label": "_name",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 985,
								"contract": "openzeppelin-solidity-2.3.0/contracts/token/ERC20/ERC20Detailed.sol:ERC20Detailed",
								"label": "_symbol",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 987,
								"contract": "openzeppelin-solidity-2.3.0/contracts/token/ERC20/ERC20Detailed.sol:ERC20Detailed",
								"label": "_decimals",
								"offset": 0,
								"slot": "2",
								"type": "t_uint8"
							}
						],
						"types": {
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"methods": {}
					}
				}
			},
			"openzeppelin-solidity-2.3.0/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP. Does not include the optional functions; to access them see `ERC20Detailed`.",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through `transferFrom`. This is zero by default.      * This value changes when `approve` or `transferFrom` are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens.      * Returns a boolean value indicating whether the operation succeeded.      * > Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729      * Emits an `Approval` event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`.      * Returns a boolean value indicating whether the operation succeeded.      * Emits a `Transfer` event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance.      * Returns a boolean value indicating whether the operation succeeded.      * Emits a `Transfer` event."
							}
						}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP. Does not include the optional functions; to access them see `ERC20Detailed`.\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through `transferFrom`. This is zero by default.      * This value changes when `approve` or `transferFrom` are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens.      * Returns a boolean value indicating whether the operation succeeded.      * > Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729      * Emits an `Approval` event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`.      * Returns a boolean value indicating whether the operation succeeded.      * Emits a `Transfer` event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance.      * Returns a boolean value indicating whether the operation succeeded.      * Emits a `Transfer` event.\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"openzeppelin-solidity-2.3.0/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"openzeppelin-solidity-2.3.0/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9b8060bfbd1e10d85b116441e63da0aae1f4b6a16716fb555f7effbe4f8fb7f9\",\"urls\":[\"bzz-raw://62e12b469aad65c98d45c17a0d43d6a6fe235a699a968bfd9f1e61ca4f11af1a\",\"dweb:/ipfs/QmSjTMbSFwjJrRf5bqZ5RE254F4B7hi3Q9rxpYxAzWKQNh\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				}
			},
			"openzeppelin-solidity-2.3.0/contracts/token/ERC20/SafeERC20.sol": {
				"SafeERC20": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for ERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"methods": {},
						"title": "SafeERC20"
					},
					"evm": {
						"assembly": "    /* \"openzeppelin-solidity-2.3.0/contracts/token/ERC20/SafeERC20.sol\":589:3792  library SafeERC20 {\r... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n    /* \"--CODEGEN--\":132:134   */\n  0x0b\n    /* \"--CODEGEN--\":166:173   */\n  dup3\n    /* \"--CODEGEN--\":155:164   */\n  dup3\n    /* \"--CODEGEN--\":146:153   */\n  dup3\n    /* \"--CODEGEN--\":137:174   */\n  codecopy\n    /* \"--CODEGEN--\":255:262   */\n  dup1\n    /* \"--CODEGEN--\":249:263   */\n  mload\n    /* \"--CODEGEN--\":246:247   */\n  0x00\n    /* \"--CODEGEN--\":241:264   */\n  byte\n    /* \"--CODEGEN--\":235:239   */\n  0x73\n    /* \"--CODEGEN--\":232:265   */\n  eq\n    /* \"--CODEGEN--\":222:224   */\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":269:278   */\n  invalid\n    /* \"--CODEGEN--\":222:224   */\ntag_1:\n    /* \"--CODEGEN--\":293:302   */\n  address\n    /* \"--CODEGEN--\":290:291   */\n  0x00\n    /* \"--CODEGEN--\":283:303   */\n  mstore\n    /* \"--CODEGEN--\":323:327   */\n  0x73\n    /* \"--CODEGEN--\":314:321   */\n  dup2\n    /* \"--CODEGEN--\":306:328   */\n  mstore8\n    /* \"--CODEGEN--\":347:354   */\n  dup3\n    /* \"--CODEGEN--\":338:345   */\n  dup2\n    /* \"--CODEGEN--\":331:355   */\n  return\nstop\n\nsub_0: assembly {\n        /* \"openzeppelin-solidity-2.3.0/contracts/token/ERC20/SafeERC20.sol\":589:3792  library SafeERC20 {\r... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa265627a7a72315820373ff5f31dd0a2d181844bd6e481a4ee6c0744af7af1bfd5db9f90200e6b069664736f6c63430005100032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60556023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a72315820373ff5f31dd0a2d181844bd6e481a4ee6c0744af7af1bfd5db9f90200e6b069664736f6c63430005100032",
							"opcodes": "PUSH1 0x55 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 CALLDATACOPY EXTCODEHASH CREATE2 RETURN SAR 0xD0 LOG2 0xD1 DUP2 DUP5 0x4B 0xD6 0xE4 DUP2 LOG4 0xEE PUSH13 0x744AF7AF1BFD5DB9F90200E6B MOD SWAP7 PUSH5 0x736F6C6343 STOP SDIV LT STOP ORIGIN ",
							"sourceMap": "589:3203:8:-;;132:2:-1;166:7;155:9;146:7;137:37;255:7;249:14;246:1;241:23;235:4;232:33;222:2;;269:9;222:2;293:9;290:1;283:20;323:4;314:7;306:22;347:7;338;331:24"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a72315820373ff5f31dd0a2d181844bd6e481a4ee6c0744af7af1bfd5db9f90200e6b069664736f6c63430005100032",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 CALLDATACOPY EXTCODEHASH CREATE2 RETURN SAR 0xD0 LOG2 0xD1 DUP2 DUP5 0x4B 0xD6 0xE4 DUP2 LOG4 0xEE PUSH13 0x744AF7AF1BFD5DB9F90200E6B MOD SWAP7 PUSH5 0x736F6C6343 STOP SDIV LT STOP ORIGIN ",
							"sourceMap": "589:3203:8:-;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "94",
								"totalCost": "17094"
							},
							"internal": {
								"callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"safeApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 589,
									"end": 3792,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 589,
									"end": 3792,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 132,
									"end": 134,
									"name": "PUSH",
									"value": "B"
								},
								{
									"begin": 166,
									"end": 173,
									"name": "DUP3"
								},
								{
									"begin": 155,
									"end": 164,
									"name": "DUP3"
								},
								{
									"begin": 146,
									"end": 153,
									"name": "DUP3"
								},
								{
									"begin": 137,
									"end": 174,
									"name": "CODECOPY"
								},
								{
									"begin": 255,
									"end": 262,
									"name": "DUP1"
								},
								{
									"begin": 249,
									"end": 263,
									"name": "MLOAD"
								},
								{
									"begin": 246,
									"end": 247,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 241,
									"end": 264,
									"name": "BYTE"
								},
								{
									"begin": 235,
									"end": 239,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 232,
									"end": 265,
									"name": "EQ"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPI"
								},
								{
									"begin": 269,
									"end": 278,
									"name": "INVALID"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPDEST"
								},
								{
									"begin": 293,
									"end": 302,
									"name": "ADDRESS"
								},
								{
									"begin": 290,
									"end": 291,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 283,
									"end": 303,
									"name": "MSTORE"
								},
								{
									"begin": 323,
									"end": 327,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 314,
									"end": 321,
									"name": "DUP2"
								},
								{
									"begin": 306,
									"end": 328,
									"name": "MSTORE8"
								},
								{
									"begin": 347,
									"end": 354,
									"name": "DUP3"
								},
								{
									"begin": 338,
									"end": 345,
									"name": "DUP2"
								},
								{
									"begin": 331,
									"end": 355,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a72315820373ff5f31dd0a2d181844bd6e481a4ee6c0744af7af1bfd5db9f90200e6b069664736f6c63430005100032",
									".code": [
										{
											"begin": 589,
											"end": 3792,
											"name": "PUSHDEPLOYADDRESS"
										},
										{
											"begin": 589,
											"end": 3792,
											"name": "ADDRESS"
										},
										{
											"begin": 589,
											"end": 3792,
											"name": "EQ"
										},
										{
											"begin": 589,
											"end": 3792,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 589,
											"end": 3792,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 589,
											"end": 3792,
											"name": "MSTORE"
										},
										{
											"begin": 589,
											"end": 3792,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 589,
											"end": 3792,
											"name": "DUP1"
										},
										{
											"begin": 589,
											"end": 3792,
											"name": "REVERT"
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for ERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"methods\":{},\"title\":\"SafeERC20\"},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"openzeppelin-solidity-2.3.0/contracts/token/ERC20/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"openzeppelin-solidity-2.3.0/contracts/math/SafeMath.sol\":{\"keccak256\":\"0xc6716e4895f91ee3dcd76485971b5c119987dff40f5b669095314df3f498e343\",\"urls\":[\"bzz-raw://477269b470603d966267165570652da3af5a8cffb3a763f491e9f57103243fa5\",\"dweb:/ipfs/QmNnCspbeDWf6eCpvnpkTXp67A4kvvZuZCKFbWf447g3KK\"]},\"openzeppelin-solidity-2.3.0/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9b8060bfbd1e10d85b116441e63da0aae1f4b6a16716fb555f7effbe4f8fb7f9\",\"urls\":[\"bzz-raw://62e12b469aad65c98d45c17a0d43d6a6fe235a699a968bfd9f1e61ca4f11af1a\",\"dweb:/ipfs/QmSjTMbSFwjJrRf5bqZ5RE254F4B7hi3Q9rxpYxAzWKQNh\"]},\"openzeppelin-solidity-2.3.0/contracts/token/ERC20/SafeERC20.sol\":{\"keccak256\":\"0xae7d568ac6b251e1b3278d996f91c6f5d4820108a9931ed94b069e9f517162cc\",\"urls\":[\"bzz-raw://298f502d1fe25c07a4ac5ea8c4ffcc52c43b908e4f95e1fae58ea8edeb15fa65\",\"dweb:/ipfs/Qmc8VQgzxXWBnL4H8Tg39XsEMnT5YGJKtmLpYLxrZpFBh9\"]},\"openzeppelin-solidity-2.3.0/contracts/utils/Address.sol\":{\"keccak256\":\"0x992bce8d5a6b643f20e352e55b07fe3affa771c8e921c4c1e5623c5d4ac3839b\",\"urls\":[\"bzz-raw://b1f673f597788d0dcbe8b25644c8fc602d3f902b78a25fad9352e667987be4e6\",\"dweb:/ipfs/QmNcmAaFuCGTa27mwAgVCXoxSDz8tkCnRKLtjEmtad6hs9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				}
			},
			"openzeppelin-solidity-2.3.0/contracts/utils/Address.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type,",
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"openzeppelin-solidity-2.3.0/contracts/utils/Address.sol\":99:983  library Address {\r... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n    /* \"--CODEGEN--\":132:134   */\n  0x0b\n    /* \"--CODEGEN--\":166:173   */\n  dup3\n    /* \"--CODEGEN--\":155:164   */\n  dup3\n    /* \"--CODEGEN--\":146:153   */\n  dup3\n    /* \"--CODEGEN--\":137:174   */\n  codecopy\n    /* \"--CODEGEN--\":255:262   */\n  dup1\n    /* \"--CODEGEN--\":249:263   */\n  mload\n    /* \"--CODEGEN--\":246:247   */\n  0x00\n    /* \"--CODEGEN--\":241:264   */\n  byte\n    /* \"--CODEGEN--\":235:239   */\n  0x73\n    /* \"--CODEGEN--\":232:265   */\n  eq\n    /* \"--CODEGEN--\":222:224   */\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":269:278   */\n  invalid\n    /* \"--CODEGEN--\":222:224   */\ntag_1:\n    /* \"--CODEGEN--\":293:302   */\n  address\n    /* \"--CODEGEN--\":290:291   */\n  0x00\n    /* \"--CODEGEN--\":283:303   */\n  mstore\n    /* \"--CODEGEN--\":323:327   */\n  0x73\n    /* \"--CODEGEN--\":314:321   */\n  dup2\n    /* \"--CODEGEN--\":306:328   */\n  mstore8\n    /* \"--CODEGEN--\":347:354   */\n  dup3\n    /* \"--CODEGEN--\":338:345   */\n  dup2\n    /* \"--CODEGEN--\":331:355   */\n  return\nstop\n\nsub_0: assembly {\n        /* \"openzeppelin-solidity-2.3.0/contracts/utils/Address.sol\":99:983  library Address {\r... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa265627a7a72315820bbe556cedd094e2cd27bc809e78e7cb2a14d8c8070ea05763785c33d61422cfd64736f6c63430005100032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60556023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a72315820bbe556cedd094e2cd27bc809e78e7cb2a14d8c8070ea05763785c33d61422cfd64736f6c63430005100032",
							"opcodes": "PUSH1 0x55 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 0xBB 0xE5 JUMP 0xCE 0xDD MULMOD 0x4E 0x2C 0xD2 PUSH28 0xC809E78E7CB2A14D8C8070EA05763785C33D61422CFD64736F6C6343 STOP SDIV LT STOP ORIGIN ",
							"sourceMap": "99:884:9:-;;132:2:-1;166:7;155:9;146:7;137:37;255:7;249:14;246:1;241:23;235:4;232:33;222:2;;269:9;222:2;293:9;290:1;283:20;323:4;314:7;306:22;347:7;338;331:24"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a72315820bbe556cedd094e2cd27bc809e78e7cb2a14d8c8070ea05763785c33d61422cfd64736f6c63430005100032",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 0xBB 0xE5 JUMP 0xCE 0xDD MULMOD 0x4E 0x2C 0xD2 PUSH28 0xC809E78E7CB2A14D8C8070EA05763785C33D61422CFD64736F6C6343 STOP SDIV LT STOP ORIGIN ",
							"sourceMap": "99:884:9:-;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "94",
								"totalCost": "17094"
							},
							"internal": {
								"isContract(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 99,
									"end": 983,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 99,
									"end": 983,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 132,
									"end": 134,
									"name": "PUSH",
									"value": "B"
								},
								{
									"begin": 166,
									"end": 173,
									"name": "DUP3"
								},
								{
									"begin": 155,
									"end": 164,
									"name": "DUP3"
								},
								{
									"begin": 146,
									"end": 153,
									"name": "DUP3"
								},
								{
									"begin": 137,
									"end": 174,
									"name": "CODECOPY"
								},
								{
									"begin": 255,
									"end": 262,
									"name": "DUP1"
								},
								{
									"begin": 249,
									"end": 263,
									"name": "MLOAD"
								},
								{
									"begin": 246,
									"end": 247,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 241,
									"end": 264,
									"name": "BYTE"
								},
								{
									"begin": 235,
									"end": 239,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 232,
									"end": 265,
									"name": "EQ"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPI"
								},
								{
									"begin": 269,
									"end": 278,
									"name": "INVALID"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPDEST"
								},
								{
									"begin": 293,
									"end": 302,
									"name": "ADDRESS"
								},
								{
									"begin": 290,
									"end": 291,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 283,
									"end": 303,
									"name": "MSTORE"
								},
								{
									"begin": 323,
									"end": 327,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 314,
									"end": 321,
									"name": "DUP2"
								},
								{
									"begin": 306,
									"end": 328,
									"name": "MSTORE8"
								},
								{
									"begin": 347,
									"end": 354,
									"name": "DUP3"
								},
								{
									"begin": 338,
									"end": 345,
									"name": "DUP2"
								},
								{
									"begin": 331,
									"end": 355,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a72315820bbe556cedd094e2cd27bc809e78e7cb2a14d8c8070ea05763785c33d61422cfd64736f6c63430005100032",
									".code": [
										{
											"begin": 99,
											"end": 983,
											"name": "PUSHDEPLOYADDRESS"
										},
										{
											"begin": 99,
											"end": 983,
											"name": "ADDRESS"
										},
										{
											"begin": 99,
											"end": 983,
											"name": "EQ"
										},
										{
											"begin": 99,
											"end": 983,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 99,
											"end": 983,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 99,
											"end": 983,
											"name": "MSTORE"
										},
										{
											"begin": 99,
											"end": 983,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 99,
											"end": 983,
											"name": "DUP1"
										},
										{
											"begin": 99,
											"end": 983,
											"name": "REVERT"
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type,\",\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"openzeppelin-solidity-2.3.0/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"openzeppelin-solidity-2.3.0/contracts/utils/Address.sol\":{\"keccak256\":\"0x992bce8d5a6b643f20e352e55b07fe3affa771c8e921c4c1e5623c5d4ac3839b\",\"urls\":[\"bzz-raw://b1f673f597788d0dcbe8b25644c8fc602d3f902b78a25fad9352e667987be4e6\",\"dweb:/ipfs/QmNcmAaFuCGTa27mwAgVCXoxSDz8tkCnRKLtjEmtad6hs9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				}
			},
			"openzeppelin-solidity-2.3.0/contracts/utils/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [
						{
							"inputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "constructor"
						}
					],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function.  * Inheriting from `ReentrancyGuard` will make the `nonReentrant` modifier available, which can be aplied to functions to make sure there are no nested (reentrant) calls to them.  * Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them.",
						"methods": {}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function.  * Inheriting from `ReentrancyGuard` will make the `nonReentrant` modifier available, which can be aplied to functions to make sure there are no nested (reentrant) calls to them.  * Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them.\",\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"openzeppelin-solidity-2.3.0/contracts/utils/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"openzeppelin-solidity-2.3.0/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x595140e1dd18f1269118ff7de1fc334973de62d607107afe25937713ae11b14d\",\"urls\":[\"bzz-raw://4fb758e8f0de5d4d4f1e3289f62489558281da3c124c440776ff51572d478349\",\"dweb:/ipfs/QmbDaE2EGYKTHcdeQuDgeMmuuVUdLbUKEpCLNJRLWW7XHT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1345,
								"contract": "openzeppelin-solidity-2.3.0/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_guardCounter",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"methods": {}
					}
				}
			}
		},
		"sources": {
			"contracts/Owned.sol": {
				"ast": {
					"absolutePath": "contracts/Owned.sol",
					"exportedSymbols": {
						"Owned": [
							104
						]
					},
					"id": 105,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.5",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "0:24:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 104,
							"linearizedBaseContracts": [
								104
							],
							"name": "Owned",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 3,
									"name": "owner",
									"nodeType": "VariableDeclaration",
									"scope": 104,
									"src": "113:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "113:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 5,
									"name": "nominatedOwner",
									"nodeType": "VariableDeclaration",
									"scope": 104,
									"src": "140:29:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 4,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "140:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 30,
										"nodeType": "Block",
										"src": "213:150:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 15,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 11,
																"name": "_owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 7,
																"src": "232:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 13,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "250:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 12,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "242:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 14,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "242:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "232:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4f776e657220616464726573732063616e6e6f742062652030",
															"id": 16,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "254:27:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cbb17bca9ae641614fb20d9f081dbba535c7a48d3eadd7b25242a97252df8c96",
																"typeString": "literal_string \"Owner address cannot be 0\""
															},
															"value": "Owner address cannot be 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cbb17bca9ae641614fb20d9f081dbba535c7a48d3eadd7b25242a97252df8c96",
																"typeString": "literal_string \"Owner address cannot be 0\""
															}
														],
														"id": 10,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1391,
															1392
														],
														"referencedDeclaration": 1392,
														"src": "224:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 17,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "224:58:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 18,
												"nodeType": "ExpressionStatement",
												"src": "224:58:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 21,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 19,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "293:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 20,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "301:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "293:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 22,
												"nodeType": "ExpressionStatement",
												"src": "293:14:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 25,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "344:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 24,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "336:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 26,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "336:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 27,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 7,
															"src": "348:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 23,
														"name": "OwnerChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 103,
														"src": "323:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 28,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "323:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 29,
												"nodeType": "EmitStatement",
												"src": "318:37:0"
											}
										]
									},
									"documentation": null,
									"id": 31,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 8,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 7,
												"name": "_owner",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "190:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 6,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "190:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "189:16:0"
									},
									"returnParameters": {
										"id": 9,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "213:0:0"
									},
									"scope": 104,
									"src": "178:185:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 46,
										"nodeType": "Block",
										"src": "432:80:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 40,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 38,
														"name": "nominatedOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "443:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 39,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 33,
														"src": "460:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "443:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 41,
												"nodeType": "ExpressionStatement",
												"src": "443:23:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 43,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 33,
															"src": "497:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 42,
														"name": "OwnerNominated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 97,
														"src": "482:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 44,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "482:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 45,
												"nodeType": "EmitStatement",
												"src": "477:27:0"
											}
										]
									},
									"documentation": null,
									"id": 47,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 36,
											"modifierName": {
												"argumentTypes": null,
												"id": 35,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 81,
												"src": "422:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "422:9:0"
										}
									],
									"name": "nominateNewOwner",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 33,
												"name": "_owner",
												"nodeType": "VariableDeclaration",
												"scope": 47,
												"src": "397:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 32,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "397:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "396:16:0"
									},
									"returnParameters": {
										"id": 37,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "432:0:0"
									},
									"scope": 104,
									"src": "371:141:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": {
										"id": 73,
										"nodeType": "Block",
										"src": "556:235:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 54,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 51,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1388,
																	"src": "575:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 52,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "575:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 53,
																"name": "nominatedOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5,
																"src": "589:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "575:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "596f75206d757374206265206e6f6d696e61746564206265666f726520796f752063616e20616363657074206f776e657273686970",
															"id": 55,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "605:55:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1149e36cd24095bebc9341ef03810e0e2a00039190624df6f2d7934141e2233b",
																"typeString": "literal_string \"You must be nominated before you can accept ownership\""
															},
															"value": "You must be nominated before you can accept ownership"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1149e36cd24095bebc9341ef03810e0e2a00039190624df6f2d7934141e2233b",
																"typeString": "literal_string \"You must be nominated before you can accept ownership\""
															}
														],
														"id": 50,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1391,
															1392
														],
														"referencedDeclaration": 1392,
														"src": "567:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 56,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "567:94:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 57,
												"nodeType": "ExpressionStatement",
												"src": "567:94:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 59,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3,
															"src": "690:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 60,
															"name": "nominatedOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5,
															"src": "697:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 58,
														"name": "OwnerChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 103,
														"src": "677:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 61,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "677:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 62,
												"nodeType": "EmitStatement",
												"src": "672:40:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 65,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 63,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "723:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 64,
														"name": "nominatedOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "731:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "723:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 66,
												"nodeType": "ExpressionStatement",
												"src": "723:22:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 71,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 67,
														"name": "nominatedOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "756:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 69,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "781:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 68,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "773:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": "address"
														},
														"id": 70,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "773:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "756:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 72,
												"nodeType": "ExpressionStatement",
												"src": "756:27:0"
											}
										]
									},
									"documentation": null,
									"id": 74,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "acceptOwnership",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "544:2:0"
									},
									"returnParameters": {
										"id": 49,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "556:0:0"
									},
									"scope": 104,
									"src": "520:271:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": {
										"id": 80,
										"nodeType": "Block",
										"src": "818:43:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 76,
														"name": "_onlyOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 93,
														"src": "829:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 77,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "829:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 78,
												"nodeType": "ExpressionStatement",
												"src": "829:12:0"
											},
											{
												"id": 79,
												"nodeType": "PlaceholderStatement",
												"src": "852:1:0"
											}
										]
									},
									"documentation": null,
									"id": 81,
									"name": "onlyOwner",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "818:0:0"
									},
									"src": "799:62:0",
									"visibility": "internal"
								},
								{
									"body": {
										"id": 92,
										"nodeType": "Block",
										"src": "904:98:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 88,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 85,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1388,
																	"src": "923:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 86,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "923:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 87,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3,
																"src": "937:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "923:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4f6e6c792074686520636f6e7472616374206f776e6572206d617920706572666f726d207468697320616374696f6e",
															"id": 89,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "944:49:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_873d2051b76e0142b287297afdfc273bf1ab5c24ee229ed4ef117f1ff0679a4a",
																"typeString": "literal_string \"Only the contract owner may perform this action\""
															},
															"value": "Only the contract owner may perform this action"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_873d2051b76e0142b287297afdfc273bf1ab5c24ee229ed4ef117f1ff0679a4a",
																"typeString": "literal_string \"Only the contract owner may perform this action\""
															}
														],
														"id": 84,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1391,
															1392
														],
														"referencedDeclaration": 1392,
														"src": "915:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 90,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "915:79:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 91,
												"nodeType": "ExpressionStatement",
												"src": "915:79:0"
											}
										]
									},
									"documentation": null,
									"id": 93,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_onlyOwner",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 82,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "888:2:0"
									},
									"returnParameters": {
										"id": 83,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "904:0:0"
									},
									"scope": 104,
									"src": "869:133:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "private"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 97,
									"name": "OwnerNominated",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 95,
												"indexed": false,
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"scope": 97,
												"src": "1031:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 94,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1031:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1030:18:0"
									},
									"src": "1010:39:0"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 103,
									"name": "OwnerChanged",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 99,
												"indexed": false,
												"name": "oldOwner",
												"nodeType": "VariableDeclaration",
												"scope": 103,
												"src": "1074:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 98,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1074:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 101,
												"indexed": false,
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"scope": 103,
												"src": "1092:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1092:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1073:36:0"
									},
									"src": "1055:55:0"
								}
							],
							"scope": 105,
							"src": "91:1022:0"
						}
					],
					"src": "0:1113:0"
				},
				"id": 0
			},
			"contracts/Pausable.sol": {
				"ast": {
					"absolutePath": "contracts/Pausable.sol",
					"exportedSymbols": {
						"Pausable": [
							170
						]
					},
					"id": 171,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 106,
							"literals": [
								"solidity",
								"^",
								"0.5",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "0:24:1"
						},
						{
							"absolutePath": "contracts/Owned.sol",
							"file": "./Owned.sol",
							"id": 107,
							"nodeType": "ImportDirective",
							"scope": 171,
							"sourceUnit": 105,
							"src": "44:21:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 108,
										"name": "Owned",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 104,
										"src": "156:5:1",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Owned_$104",
											"typeString": "contract Owned"
										}
									},
									"id": 109,
									"nodeType": "InheritanceSpecifier",
									"src": "156:5:1"
								}
							],
							"contractDependencies": [
								104
							],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": false,
							"id": 170,
							"linearizedBaseContracts": [
								170,
								104
							],
							"name": "Pausable",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 111,
									"name": "lastPauseTime",
									"nodeType": "VariableDeclaration",
									"scope": 170,
									"src": "169:25:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 110,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "169:4:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 113,
									"name": "paused",
									"nodeType": "VariableDeclaration",
									"scope": 170,
									"src": "201:18:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 112,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "201:4:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "251:230:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 121,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 117,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3,
																"src": "350:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 119,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "367:1:1",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 118,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "359:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 120,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "359:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "350:19:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4f776e6572206d75737420626520736574",
															"id": 122,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "371:19:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c87338ddde5ff52c699ea56bd9b81e21603f0adc0875fd9959e16afe2346ac96",
																"typeString": "literal_string \"Owner must be set\""
															},
															"value": "Owner must be set"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c87338ddde5ff52c699ea56bd9b81e21603f0adc0875fd9959e16afe2346ac96",
																"typeString": "literal_string \"Owner must be set\""
															}
														],
														"id": 116,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1391,
															1392
														],
														"referencedDeclaration": 1392,
														"src": "342:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "342:49:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "342:49:1"
											}
										]
									},
									"documentation": null,
									"id": 126,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 114,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "239:2:1"
									},
									"returnParameters": {
										"id": 115,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "251:0:1"
									},
									"scope": 170,
									"src": "228:253:1",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 154,
										"nodeType": "Block",
										"src": "667:436:1",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 135,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 133,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 128,
														"src": "757:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"id": 134,
														"name": "paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 113,
														"src": "768:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "757:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 138,
												"nodeType": "IfStatement",
												"src": "753:56:1",
												"trueBody": {
													"id": 137,
													"nodeType": "Block",
													"src": "776:33:1",
													"statements": [
														{
															"expression": null,
															"functionReturnParameters": 132,
															"id": 136,
															"nodeType": "Return",
															"src": "791:7:1"
														}
													]
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 141,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 139,
														"name": "paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 113,
														"src": "855:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 140,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 128,
														"src": "864:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "855:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 142,
												"nodeType": "ExpressionStatement",
												"src": "855:16:1"
											},
											{
												"condition": {
													"argumentTypes": null,
													"id": 143,
													"name": "paused",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 113,
													"src": "940:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 149,
												"nodeType": "IfStatement",
												"src": "936:58:1",
												"trueBody": {
													"id": 148,
													"nodeType": "Block",
													"src": "948:46:1",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 146,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 144,
																	"name": "lastPauseTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 111,
																	"src": "963:13:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"id": 145,
																	"name": "now",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1390,
																	"src": "979:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "963:19:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 147,
															"nodeType": "ExpressionStatement",
															"src": "963:19:1"
														}
													]
												}
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 151,
															"name": "paused",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 113,
															"src": "1088:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 150,
														"name": "PauseChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 159,
														"src": "1075:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bool_$returns$__$",
															"typeString": "function (bool)"
														}
													},
													"id": 152,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1075:20:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 153,
												"nodeType": "EmitStatement",
												"src": "1070:25:1"
											}
										]
									},
									"documentation": "@notice Change the paused state of the contract\n@dev Only the contract owner may call this.",
									"id": 155,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 131,
											"modifierName": {
												"argumentTypes": null,
												"id": 130,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 81,
												"src": "657:9:1",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "657:9:1"
										}
									],
									"name": "setPaused",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 129,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 128,
												"name": "_paused",
												"nodeType": "VariableDeclaration",
												"scope": 155,
												"src": "634:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 127,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "634:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "633:14:1"
									},
									"returnParameters": {
										"id": 132,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "667:0:1"
									},
									"scope": 170,
									"src": "615:488:1",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 159,
									"name": "PauseChanged",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 157,
												"indexed": false,
												"name": "isPaused",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "1130:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 156,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1130:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1129:15:1"
									},
									"src": "1111:34:1"
								},
								{
									"body": {
										"id": 168,
										"nodeType": "Block",
										"src": "1172:111:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 163,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "1191:7:1",
															"subExpression": {
																"argumentTypes": null,
																"id": 162,
																"name": "paused",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 113,
																"src": "1192:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "5468697320616374696f6e2063616e6e6f7420626520706572666f726d6564207768696c652074686520636f6e747261637420697320706175736564",
															"id": 164,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1200:62:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b214273cdb244871f55e1966d43ad7febce81860c609dda0e226c7c1b7959d6f",
																"typeString": "literal_string \"This action cannot be performed while the contract is paused\""
															},
															"value": "This action cannot be performed while the contract is paused"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b214273cdb244871f55e1966d43ad7febce81860c609dda0e226c7c1b7959d6f",
																"typeString": "literal_string \"This action cannot be performed while the contract is paused\""
															}
														],
														"id": 161,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1391,
															1392
														],
														"referencedDeclaration": 1392,
														"src": "1183:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 165,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1183:80:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 166,
												"nodeType": "ExpressionStatement",
												"src": "1183:80:1"
											},
											{
												"id": 167,
												"nodeType": "PlaceholderStatement",
												"src": "1274:1:1"
											}
										]
									},
									"documentation": null,
									"id": 169,
									"name": "notPaused",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 160,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1172:0:1"
									},
									"src": "1153:130:1",
									"visibility": "internal"
								}
							],
							"scope": 171,
							"src": "135:1151:1"
						}
					],
					"src": "0:1286:1"
				},
				"id": 1
			},
			"contracts/RewardsDistributionRecipient.sol": {
				"ast": {
					"absolutePath": "contracts/RewardsDistributionRecipient.sol",
					"exportedSymbols": {
						"RewardsDistributionRecipient": [
							207
						]
					},
					"id": 208,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 172,
							"literals": [
								"solidity",
								"^",
								"0.5",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "0:24:2"
						},
						{
							"absolutePath": "contracts/Owned.sol",
							"file": "./Owned.sol",
							"id": 173,
							"nodeType": "ImportDirective",
							"scope": 208,
							"sourceUnit": 105,
							"src": "44:21:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 174,
										"name": "Owned",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 104,
										"src": "196:5:2",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Owned_$104",
											"typeString": "contract Owned"
										}
									},
									"id": 175,
									"nodeType": "InheritanceSpecifier",
									"src": "196:5:2"
								}
							],
							"contractDependencies": [
								104
							],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": false,
							"id": 207,
							"linearizedBaseContracts": [
								207,
								104
							],
							"name": "RewardsDistributionRecipient",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 177,
									"name": "rewardsDistribution",
									"nodeType": "VariableDeclaration",
									"scope": 207,
									"src": "209:34:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 176,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "209:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"body": null,
									"documentation": null,
									"id": 182,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "notifyRewardAmount",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 180,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 179,
												"name": "reward",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "280:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 178,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "280:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "279:16:2"
									},
									"returnParameters": {
										"id": 181,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "304:0:2"
									},
									"scope": 207,
									"src": "252:53:2",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": {
										"id": 193,
										"nodeType": "Block",
										"src": "348:119:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 188,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 185,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1388,
																	"src": "367:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 186,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "367:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 187,
																"name": "rewardsDistribution",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 177,
																"src": "381:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "367:33:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "43616c6c6572206973206e6f742052657761726473446973747269627574696f6e20636f6e7472616374",
															"id": 189,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "402:44:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d50b095422f4cbfcb4c90fbd4d55aaf0967bf1d90e94bb6a1ae9fc4ee7e733de",
																"typeString": "literal_string \"Caller is not RewardsDistribution contract\""
															},
															"value": "Caller is not RewardsDistribution contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d50b095422f4cbfcb4c90fbd4d55aaf0967bf1d90e94bb6a1ae9fc4ee7e733de",
																"typeString": "literal_string \"Caller is not RewardsDistribution contract\""
															}
														],
														"id": 184,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1391,
															1392
														],
														"referencedDeclaration": 1392,
														"src": "359:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 190,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "359:88:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 191,
												"nodeType": "ExpressionStatement",
												"src": "359:88:2"
											},
											{
												"id": 192,
												"nodeType": "PlaceholderStatement",
												"src": "458:1:2"
											}
										]
									},
									"documentation": null,
									"id": 194,
									"name": "onlyRewardsDistribution",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 183,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "345:2:2"
									},
									"src": "313:154:2",
									"visibility": "internal"
								},
								{
									"body": {
										"id": 205,
										"nodeType": "Block",
										"src": "556:61:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 203,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 201,
														"name": "rewardsDistribution",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 177,
														"src": "567:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 202,
														"name": "_rewardsDistribution",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 196,
														"src": "589:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "567:42:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 204,
												"nodeType": "ExpressionStatement",
												"src": "567:42:2"
											}
										]
									},
									"documentation": null,
									"id": 206,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 199,
											"modifierName": {
												"argumentTypes": null,
												"id": 198,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 81,
												"src": "546:9:2",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "546:9:2"
										}
									],
									"name": "setRewardsDistribution",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 197,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 196,
												"name": "_rewardsDistribution",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "507:28:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 195,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "507:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "506:30:2"
									},
									"returnParameters": {
										"id": 200,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "556:0:2"
									},
									"scope": 207,
									"src": "475:142:2",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								}
							],
							"scope": 208,
							"src": "155:465:2"
						}
					],
					"src": "0:620:2"
				},
				"id": 2
			},
			"contracts/StakingRewards.sol": {
				"ast": {
					"absolutePath": "contracts/StakingRewards.sol",
					"exportedSymbols": {
						"StakingRewards": [
							780
						]
					},
					"id": 781,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 209,
							"literals": [
								"solidity",
								"^",
								"0.5",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "0:24:3"
						},
						{
							"absolutePath": "openzeppelin-solidity-2.3.0/contracts/math/SafeMath.sol",
							"file": "openzeppelin-solidity-2.3.0/contracts/math/SafeMath.sol",
							"id": 210,
							"nodeType": "ImportDirective",
							"scope": 781,
							"sourceUnit": 977,
							"src": "28:65:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "openzeppelin-solidity-2.3.0/contracts/token/ERC20/ERC20Detailed.sol",
							"file": "openzeppelin-solidity-2.3.0/contracts/token/ERC20/ERC20Detailed.sol",
							"id": 211,
							"nodeType": "ImportDirective",
							"scope": 781,
							"sourceUnit": 1035,
							"src": "95:77:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "openzeppelin-solidity-2.3.0/contracts/token/ERC20/SafeERC20.sol",
							"file": "openzeppelin-solidity-2.3.0/contracts/token/ERC20/SafeERC20.sol",
							"id": 212,
							"nodeType": "ImportDirective",
							"scope": 781,
							"sourceUnit": 1323,
							"src": "174:73:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "openzeppelin-solidity-2.3.0/contracts/utils/ReentrancyGuard.sol",
							"file": "openzeppelin-solidity-2.3.0/contracts/utils/ReentrancyGuard.sol",
							"id": 213,
							"nodeType": "ImportDirective",
							"scope": 781,
							"sourceUnit": 1374,
							"src": "249:73:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/interfaces/IStakingRewards.sol",
							"file": "./interfaces/IStakingRewards.sol",
							"id": 214,
							"nodeType": "ImportDirective",
							"scope": 781,
							"sourceUnit": 844,
							"src": "342:42:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/RewardsDistributionRecipient.sol",
							"file": "./RewardsDistributionRecipient.sol",
							"id": 215,
							"nodeType": "ImportDirective",
							"scope": 781,
							"sourceUnit": 208,
							"src": "386:44:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/Pausable.sol",
							"file": "./Pausable.sol",
							"id": 216,
							"nodeType": "ImportDirective",
							"scope": 781,
							"sourceUnit": 171,
							"src": "432:24:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 217,
										"name": "IStakingRewards",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 843,
										"src": "559:15:3",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IStakingRewards_$843",
											"typeString": "contract IStakingRewards"
										}
									},
									"id": 218,
									"nodeType": "InheritanceSpecifier",
									"src": "559:15:3"
								},
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 219,
										"name": "RewardsDistributionRecipient",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 207,
										"src": "576:28:3",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_RewardsDistributionRecipient_$207",
											"typeString": "contract RewardsDistributionRecipient"
										}
									},
									"id": 220,
									"nodeType": "InheritanceSpecifier",
									"src": "576:28:3"
								},
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 221,
										"name": "ReentrancyGuard",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1373,
										"src": "606:15:3",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ReentrancyGuard_$1373",
											"typeString": "contract ReentrancyGuard"
										}
									},
									"id": 222,
									"nodeType": "InheritanceSpecifier",
									"src": "606:15:3"
								},
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 223,
										"name": "Pausable",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 170,
										"src": "623:8:3",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Pausable_$170",
											"typeString": "contract Pausable"
										}
									},
									"id": 224,
									"nodeType": "InheritanceSpecifier",
									"src": "623:8:3"
								}
							],
							"contractDependencies": [
								104,
								170,
								207,
								843,
								1373
							],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 780,
							"linearizedBaseContracts": [
								780,
								170,
								1373,
								207,
								104,
								843
							],
							"name": "StakingRewards",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 227,
									"libraryName": {
										"contractScope": null,
										"id": 225,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 976,
										"src": "645:8:3",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$976",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "639:27:3",
									"typeName": {
										"id": 226,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "658:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"id": 230,
									"libraryName": {
										"contractScope": null,
										"id": 228,
										"name": "SafeERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1322,
										"src": "678:9:3",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeERC20_$1322",
											"typeString": "library SafeERC20"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "672:27:3",
									"typeName": {
										"contractScope": null,
										"id": 229,
										"name": "IERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1103,
										"src": "692:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$1103",
											"typeString": "contract IERC20"
										}
									}
								},
								{
									"constant": false,
									"id": 232,
									"name": "rewardsToken",
									"nodeType": "VariableDeclaration",
									"scope": 780,
									"src": "758:26:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$1103",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"contractScope": null,
										"id": 231,
										"name": "IERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1103,
										"src": "758:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$1103",
											"typeString": "contract IERC20"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 234,
									"name": "stakingToken",
									"nodeType": "VariableDeclaration",
									"scope": 780,
									"src": "791:26:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$1103",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"contractScope": null,
										"id": 233,
										"name": "IERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1103,
										"src": "791:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$1103",
											"typeString": "contract IERC20"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 237,
									"name": "periodFinish",
									"nodeType": "VariableDeclaration",
									"scope": 780,
									"src": "824:31:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 235,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "824:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "30",
										"id": 236,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "854:1:3",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 240,
									"name": "rewardRate",
									"nodeType": "VariableDeclaration",
									"scope": 780,
									"src": "862:29:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 238,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "862:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "30",
										"id": 239,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "890:1:3",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 243,
									"name": "rewardsDuration",
									"nodeType": "VariableDeclaration",
									"scope": 780,
									"src": "898:39:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 241,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "898:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "37",
										"id": 242,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "931:6:3",
										"subdenomination": "days",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_604800_by_1",
											"typeString": "int_const 604800"
										},
										"value": "7"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 245,
									"name": "lastUpdateTime",
									"nodeType": "VariableDeclaration",
									"scope": 780,
									"src": "944:29:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 244,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "944:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 247,
									"name": "rewardPerTokenStored",
									"nodeType": "VariableDeclaration",
									"scope": 780,
									"src": "980:35:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 246,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "980:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 251,
									"name": "userRewardPerTokenPaid",
									"nodeType": "VariableDeclaration",
									"scope": 780,
									"src": "1024:57:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 250,
										"keyType": {
											"id": 248,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1032:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1024:27:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 249,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1043:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 255,
									"name": "rewards",
									"nodeType": "VariableDeclaration",
									"scope": 780,
									"src": "1088:42:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 254,
										"keyType": {
											"id": 252,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1096:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1088:27:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 253,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1107:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 257,
									"name": "_totalSupply",
									"nodeType": "VariableDeclaration",
									"scope": 780,
									"src": "1139:28:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 256,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1139:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 261,
									"name": "_balances",
									"nodeType": "VariableDeclaration",
									"scope": 780,
									"src": "1174:45:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 260,
										"keyType": {
											"id": 258,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1182:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1174:27:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 259,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1193:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"body": {
										"id": 291,
										"nodeType": "Block",
										"src": "1443:155:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 279,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 275,
														"name": "rewardsToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 232,
														"src": "1454:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$1103",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 277,
																"name": "_rewardsToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 267,
																"src": "1476:13:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 276,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1103,
															"src": "1469:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$1103_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 278,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1469:21:3",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$1103",
															"typeString": "contract IERC20"
														}
													},
													"src": "1454:36:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$1103",
														"typeString": "contract IERC20"
													}
												},
												"id": 280,
												"nodeType": "ExpressionStatement",
												"src": "1454:36:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 285,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 281,
														"name": "stakingToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 234,
														"src": "1501:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$1103",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 283,
																"name": "_stakingToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 269,
																"src": "1523:13:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 282,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1103,
															"src": "1516:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$1103_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 284,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1516:21:3",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$1103",
															"typeString": "contract IERC20"
														}
													},
													"src": "1501:36:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$1103",
														"typeString": "contract IERC20"
													}
												},
												"id": 286,
												"nodeType": "ExpressionStatement",
												"src": "1501:36:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 289,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 287,
														"name": "rewardsDistribution",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 177,
														"src": "1548:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 288,
														"name": "_rewardsDistribution",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 265,
														"src": "1570:20:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1548:42:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 290,
												"nodeType": "ExpressionStatement",
												"src": "1548:42:3"
											}
										]
									},
									"documentation": null,
									"id": 292,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"argumentTypes": null,
													"id": 272,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 263,
													"src": "1435:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 273,
											"modifierName": {
												"argumentTypes": null,
												"id": 271,
												"name": "Owned",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 104,
												"src": "1429:5:3",
												"typeDescriptions": {
													"typeIdentifier": "t_type$_t_contract$_Owned_$104_$",
													"typeString": "type(contract Owned)"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "1429:13:3"
										}
									],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 263,
												"name": "_owner",
												"nodeType": "VariableDeclaration",
												"scope": 292,
												"src": "1297:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 262,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1297:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 265,
												"name": "_rewardsDistribution",
												"nodeType": "VariableDeclaration",
												"scope": 292,
												"src": "1322:28:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 264,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1322:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 267,
												"name": "_rewardsToken",
												"nodeType": "VariableDeclaration",
												"scope": 292,
												"src": "1361:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 266,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1361:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 269,
												"name": "_stakingToken",
												"nodeType": "VariableDeclaration",
												"scope": 292,
												"src": "1393:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 268,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1393:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1286:135:3"
									},
									"returnParameters": {
										"id": 274,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1443:0:3"
									},
									"scope": 780,
									"src": "1275:323:3",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 299,
										"nodeType": "Block",
										"src": "1702:38:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 297,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 257,
													"src": "1720:12:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 296,
												"id": 298,
												"nodeType": "Return",
												"src": "1713:19:3"
											}
										]
									},
									"documentation": null,
									"id": 300,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 293,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1667:2:3"
									},
									"returnParameters": {
										"id": 296,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 295,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 300,
												"src": "1693:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 294,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1693:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1692:9:3"
									},
									"scope": 780,
									"src": "1647:93:3",
									"stateMutability": "view",
									"superFunction": 826,
									"visibility": "external"
								},
								{
									"body": {
										"id": 311,
										"nodeType": "Block",
										"src": "1816:44:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 307,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 261,
														"src": "1834:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 309,
													"indexExpression": {
														"argumentTypes": null,
														"id": 308,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 302,
														"src": "1844:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1834:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 306,
												"id": 310,
												"nodeType": "Return",
												"src": "1827:25:3"
											}
										]
									},
									"documentation": null,
									"id": 312,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 303,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 302,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 312,
												"src": "1767:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 301,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1767:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1766:17:3"
									},
									"returnParameters": {
										"id": 306,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 305,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 312,
												"src": "1807:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 304,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1807:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1806:9:3"
									},
									"scope": 780,
									"src": "1748:112:3",
									"stateMutability": "view",
									"superFunction": 789,
									"visibility": "external"
								},
								{
									"body": {
										"id": 326,
										"nodeType": "Block",
										"src": "1934:89:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"condition": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 320,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 317,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1378,
																"src": "1952:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 318,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "1952:15:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"argumentTypes": null,
															"id": 319,
															"name": "periodFinish",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 237,
															"src": "1970:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1952:30:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"argumentTypes": null,
														"id": 323,
														"name": "periodFinish",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 237,
														"src": "2003:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 324,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "1952:63:3",
													"trueExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 321,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1378,
															"src": "1985:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 322,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "1985:15:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 316,
												"id": 325,
												"nodeType": "Return",
												"src": "1945:70:3"
											}
										]
									},
									"documentation": null,
									"id": 327,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "lastTimeRewardApplicable",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 313,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1901:2:3"
									},
									"returnParameters": {
										"id": 316,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 315,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 327,
												"src": "1925:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 314,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1925:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1924:9:3"
									},
									"scope": 780,
									"src": "1868:155:3",
									"stateMutability": "view",
									"superFunction": 806,
									"visibility": "public"
								},
								{
									"body": {
										"id": 357,
										"nodeType": "Block",
										"src": "2087:274:3",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 334,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 332,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 257,
														"src": "2102:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 333,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2118:1:3",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2102:17:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 338,
												"nodeType": "IfStatement",
												"src": "2098:77:3",
												"trueBody": {
													"id": 337,
													"nodeType": "Block",
													"src": "2121:54:3",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 335,
																"name": "rewardPerTokenStored",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 247,
																"src": "2143:20:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 331,
															"id": 336,
															"nodeType": "Return",
															"src": "2136:27:3"
														}
													]
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 353,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 257,
																	"src": "2325:12:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"hexValue": "31653138",
																			"id": 350,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2315:4:3",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1000000000000000000_by_1",
																				"typeString": "int_const 1000000000000000000"
																			},
																			"value": "1e18"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_1000000000000000000_by_1",
																				"typeString": "int_const 1000000000000000000"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 347,
																					"name": "rewardRate",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 240,
																					"src": "2299:10:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"arguments": [
																						{
																							"argumentTypes": null,
																							"id": 344,
																							"name": "lastUpdateTime",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 245,
																							"src": "2279:14:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"expression": {
																							"argumentTypes": null,
																							"arguments": [],
																							"expression": {
																								"argumentTypes": [],
																								"id": 341,
																								"name": "lastTimeRewardApplicable",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 327,
																								"src": "2248:24:3",
																								"typeDescriptions": {
																									"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																									"typeString": "function () view returns (uint256)"
																								}
																							},
																							"id": 342,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"kind": "functionCall",
																							"lValueRequested": false,
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "2248:26:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"id": 343,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "sub",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 895,
																						"src": "2248:30:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																							"typeString": "function (uint256,uint256) pure returns (uint256)"
																						}
																					},
																					"id": 345,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "2248:46:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 346,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "mul",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 929,
																				"src": "2248:50:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 348,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2248:62:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 349,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "mul",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 929,
																		"src": "2248:66:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 351,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2248:72:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 352,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "div",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 954,
																"src": "2248:76:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 354,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2248:90:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 339,
															"name": "rewardPerTokenStored",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 247,
															"src": "2205:20:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 340,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 870,
														"src": "2205:24:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 355,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2205:148:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 331,
												"id": 356,
												"nodeType": "Return",
												"src": "2185:168:3"
											}
										]
									},
									"documentation": null,
									"id": 358,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "rewardPerToken",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 328,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2054:2:3"
									},
									"returnParameters": {
										"id": 331,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 330,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 358,
												"src": "2078:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 329,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2078:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2077:9:3"
									},
									"scope": 780,
									"src": "2031:330:3",
									"stateMutability": "view",
									"superFunction": 811,
									"visibility": "public"
								},
								{
									"body": {
										"id": 386,
										"nodeType": "Block",
										"src": "2432:135:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 381,
																"name": "rewards",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 255,
																"src": "2542:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 383,
															"indexExpression": {
																"argumentTypes": null,
																"id": 382,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 360,
																"src": "2550:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2542:16:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "31653138",
																	"id": 378,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2532:4:3",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000000000000000000_by_1",
																		"typeString": "int_const 1000000000000000000"
																	},
																	"value": "1e18"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_1000000000000000000_by_1",
																		"typeString": "int_const 1000000000000000000"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"baseExpression": {
																						"argumentTypes": null,
																						"id": 372,
																						"name": "userRewardPerTokenPaid",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 251,
																						"src": "2494:22:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																							"typeString": "mapping(address => uint256)"
																						}
																					},
																					"id": 374,
																					"indexExpression": {
																						"argumentTypes": null,
																						"id": 373,
																						"name": "account",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 360,
																						"src": "2517:7:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "2494:31:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"arguments": [],
																					"expression": {
																						"argumentTypes": [],
																						"id": 369,
																						"name": "rewardPerToken",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 358,
																						"src": "2473:14:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																							"typeString": "function () view returns (uint256)"
																						}
																					},
																					"id": 370,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "2473:16:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 371,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "sub",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 895,
																				"src": "2473:20:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 375,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2473:53:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"baseExpression": {
																				"argumentTypes": null,
																				"id": 365,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 261,
																				"src": "2450:9:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 367,
																			"indexExpression": {
																				"argumentTypes": null,
																				"id": 366,
																				"name": "account",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 360,
																				"src": "2460:7:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "2450:18:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 368,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "mul",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 929,
																		"src": "2450:22:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 376,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2450:77:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 377,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "div",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 954,
																"src": "2450:81:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 379,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2450:87:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 380,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 870,
														"src": "2450:91:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 384,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2450:109:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 364,
												"id": 385,
												"nodeType": "Return",
												"src": "2443:116:3"
											}
										]
									},
									"documentation": null,
									"id": 387,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "earned",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 361,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 360,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 387,
												"src": "2385:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 359,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2385:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2384:17:3"
									},
									"returnParameters": {
										"id": 364,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 363,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 387,
												"src": "2423:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 362,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2423:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2422:9:3"
									},
									"scope": 780,
									"src": "2369:198:3",
									"stateMutability": "view",
									"superFunction": 796,
									"visibility": "public"
								},
								{
									"body": {
										"id": 397,
										"nodeType": "Block",
										"src": "2639:57:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 394,
															"name": "rewardsDuration",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 243,
															"src": "2672:15:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 392,
															"name": "rewardRate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 240,
															"src": "2657:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 393,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "mul",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 929,
														"src": "2657:14:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 395,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2657:31:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 391,
												"id": 396,
												"nodeType": "Return",
												"src": "2650:38:3"
											}
										]
									},
									"documentation": null,
									"id": 398,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRewardForDuration",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 388,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2604:2:3"
									},
									"returnParameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 390,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 398,
												"src": "2630:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 389,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2630:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2629:9:3"
									},
									"scope": 780,
									"src": "2575:121:3",
									"stateMutability": "view",
									"superFunction": 801,
									"visibility": "external"
								},
								{
									"body": {
										"id": 455,
										"nodeType": "Block",
										"src": "2846:291:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 414,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 412,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 400,
																"src": "2865:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 413,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2874:1:3",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2865:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "43616e6e6f74207374616b652030",
															"id": 415,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2877:16:3",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2972ce884b95fc24c703b7f04fae79e4ca7287e77fa26ed09d1faa4263e887ab",
																"typeString": "literal_string \"Cannot stake 0\""
															},
															"value": "Cannot stake 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2972ce884b95fc24c703b7f04fae79e4ca7287e77fa26ed09d1faa4263e887ab",
																"typeString": "literal_string \"Cannot stake 0\""
															}
														],
														"id": 411,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1391,
															1392
														],
														"referencedDeclaration": 1392,
														"src": "2857:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 416,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2857:37:3",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 417,
												"nodeType": "ExpressionStatement",
												"src": "2857:37:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 423,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 418,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 257,
														"src": "2905:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 421,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 400,
																"src": "2937:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 419,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 257,
																"src": "2920:12:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 420,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 870,
															"src": "2920:16:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 422,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2920:24:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2905:39:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 424,
												"nodeType": "ExpressionStatement",
												"src": "2905:39:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 436,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 425,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 261,
															"src": "2955:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 428,
														"indexExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 426,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1388,
																"src": "2965:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 427,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "2965:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2955:21:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 434,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 400,
																"src": "3005:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 429,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 261,
																	"src": "2979:9:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 432,
																"indexExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 430,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1388,
																		"src": "2989:3:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 431,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "2989:10:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2979:21:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 433,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 870,
															"src": "2979:25:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 435,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2979:33:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2955:57:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 437,
												"nodeType": "ExpressionStatement",
												"src": "2955:57:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 441,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1388,
																"src": "3053:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 442,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "3053:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 444,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1422,
																	"src": "3073:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_StakingRewards_$780",
																		"typeString": "contract StakingRewards"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_StakingRewards_$780",
																		"typeString": "contract StakingRewards"
																	}
																],
																"id": 443,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3065:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 445,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3065:13:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 446,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 400,
															"src": "3080:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 438,
															"name": "stakingToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 234,
															"src": "3023:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$1103",
																"typeString": "contract IERC20"
															}
														},
														"id": 440,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1161,
														"src": "3023:29:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1103_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$1103_$",
															"typeString": "function (contract IERC20,address,address,uint256)"
														}
													},
													"id": 447,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3023:64:3",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 448,
												"nodeType": "ExpressionStatement",
												"src": "3023:64:3"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 450,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1388,
																"src": "3110:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 451,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "3110:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 452,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 400,
															"src": "3122:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 449,
														"name": "Staked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 757,
														"src": "3103:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 453,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3103:26:3",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 454,
												"nodeType": "EmitStatement",
												"src": "3098:31:3"
											}
										]
									},
									"documentation": null,
									"id": 456,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 403,
											"modifierName": {
												"argumentTypes": null,
												"id": 402,
												"name": "nonReentrant",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1372,
												"src": "2798:12:3",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "2798:12:3"
										},
										{
											"arguments": null,
											"id": 405,
											"modifierName": {
												"argumentTypes": null,
												"id": 404,
												"name": "notPaused",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 169,
												"src": "2811:9:3",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "2811:9:3"
										},
										{
											"arguments": [
												{
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 407,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1388,
														"src": "2834:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 408,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "2834:10:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												}
											],
											"id": 409,
											"modifierName": {
												"argumentTypes": null,
												"id": 406,
												"name": "updateReward",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 747,
												"src": "2821:12:3",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$_t_address_$",
													"typeString": "modifier (address)"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "2821:24:3"
										}
									],
									"name": "stake",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 401,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 400,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 456,
												"src": "2773:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 399,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2773:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2772:16:3"
									},
									"returnParameters": {
										"id": 410,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2846:0:3"
									},
									"scope": 780,
									"src": "2758:379:3",
									"stateMutability": "nonpayable",
									"superFunction": 837,
									"visibility": "external"
								},
								{
									"body": {
										"id": 508,
										"nodeType": "Block",
										"src": "3224:278:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 470,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 468,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 458,
																"src": "3243:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 469,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3252:1:3",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3243:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "43616e6e6f742077697468647261772030",
															"id": 471,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3255:19:3",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8d85b8e7f4404d04d93e8d532ad219ceeba0becfbc18622bad46b31e08b1f0b0",
																"typeString": "literal_string \"Cannot withdraw 0\""
															},
															"value": "Cannot withdraw 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8d85b8e7f4404d04d93e8d532ad219ceeba0becfbc18622bad46b31e08b1f0b0",
																"typeString": "literal_string \"Cannot withdraw 0\""
															}
														],
														"id": 467,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1391,
															1392
														],
														"referencedDeclaration": 1392,
														"src": "3235:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 472,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3235:40:3",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 473,
												"nodeType": "ExpressionStatement",
												"src": "3235:40:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 479,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 474,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 257,
														"src": "3286:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 477,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 458,
																"src": "3318:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 475,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 257,
																"src": "3301:12:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 476,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 895,
															"src": "3301:16:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 478,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3301:24:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3286:39:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 480,
												"nodeType": "ExpressionStatement",
												"src": "3286:39:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 492,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 481,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 261,
															"src": "3336:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 484,
														"indexExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 482,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1388,
																"src": "3346:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 483,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "3346:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3336:21:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 490,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 458,
																"src": "3386:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 485,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 261,
																	"src": "3360:9:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 488,
																"indexExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 486,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1388,
																		"src": "3370:3:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 487,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "3370:10:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3360:21:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 489,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 895,
															"src": "3360:25:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 491,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3360:33:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3336:57:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 493,
												"nodeType": "ExpressionStatement",
												"src": "3336:57:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 497,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1388,
																"src": "3430:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 498,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "3430:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 499,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 458,
															"src": "3442:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 494,
															"name": "stakingToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 234,
															"src": "3404:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$1103",
																"typeString": "contract IERC20"
															}
														},
														"id": 496,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1136,
														"src": "3404:25:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1103_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$1103_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 500,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3404:45:3",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 501,
												"nodeType": "ExpressionStatement",
												"src": "3404:45:3"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 503,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1388,
																"src": "3475:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 504,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "3475:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 505,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 458,
															"src": "3487:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 502,
														"name": "Withdrawn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 763,
														"src": "3465:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 506,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3465:29:3",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 507,
												"nodeType": "EmitStatement",
												"src": "3460:34:3"
											}
										]
									},
									"documentation": null,
									"id": 509,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 461,
											"modifierName": {
												"argumentTypes": null,
												"id": 460,
												"name": "nonReentrant",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1372,
												"src": "3186:12:3",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "3186:12:3"
										},
										{
											"arguments": [
												{
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 463,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1388,
														"src": "3212:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 464,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "3212:10:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												}
											],
											"id": 465,
											"modifierName": {
												"argumentTypes": null,
												"id": 462,
												"name": "updateReward",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 747,
												"src": "3199:12:3",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$_t_address_$",
													"typeString": "modifier (address)"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "3199:24:3"
										}
									],
									"name": "withdraw",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 459,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 458,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 509,
												"src": "3163:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 457,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3163:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3162:16:3"
									},
									"returnParameters": {
										"id": 466,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3224:0:3"
									},
									"scope": 780,
									"src": "3145:357:3",
									"stateMutability": "nonpayable",
									"superFunction": 842,
									"visibility": "public"
								},
								{
									"body": {
										"id": 551,
										"nodeType": "Block",
										"src": "3576:241:3",
										"statements": [
											{
												"assignments": [
													519
												],
												"declarations": [
													{
														"constant": false,
														"id": 519,
														"name": "reward",
														"nodeType": "VariableDeclaration",
														"scope": 551,
														"src": "3587:14:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 518,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3587:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 524,
												"initialValue": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 520,
														"name": "rewards",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 255,
														"src": "3604:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 523,
													"indexExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 521,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1388,
															"src": "3612:3:3",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 522,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "3612:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3604:19:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3587:36:3"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 527,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 525,
														"name": "reward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 519,
														"src": "3638:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 526,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3647:1:3",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3638:10:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 550,
												"nodeType": "IfStatement",
												"src": "3634:176:3",
												"trueBody": {
													"id": 549,
													"nodeType": "Block",
													"src": "3650:160:3",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 533,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 528,
																		"name": "rewards",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 255,
																		"src": "3665:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 531,
																	"indexExpression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 529,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1388,
																			"src": "3673:3:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 530,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "3673:10:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "3665:19:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 532,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3687:1:3",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "3665:23:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 534,
															"nodeType": "ExpressionStatement",
															"src": "3665:23:3"
														},
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 538,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1388,
																			"src": "3729:3:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 539,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "3729:10:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 540,
																		"name": "reward",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 519,
																		"src": "3741:6:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"id": 535,
																		"name": "rewardsToken",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 232,
																		"src": "3703:12:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$1103",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 537,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "safeTransfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1136,
																	"src": "3703:25:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1103_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$1103_$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 541,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3703:45:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 542,
															"nodeType": "ExpressionStatement",
															"src": "3703:45:3"
														},
														{
															"eventCall": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 544,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1388,
																			"src": "3779:3:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 545,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "3779:10:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 546,
																		"name": "reward",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 519,
																		"src": "3791:6:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 543,
																	"name": "RewardPaid",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 769,
																	"src": "3768:10:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256)"
																	}
																},
																"id": 547,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3768:30:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 548,
															"nodeType": "EmitStatement",
															"src": "3763:35:3"
														}
													]
												}
											}
										]
									},
									"documentation": null,
									"id": 552,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 512,
											"modifierName": {
												"argumentTypes": null,
												"id": 511,
												"name": "nonReentrant",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1372,
												"src": "3538:12:3",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "3538:12:3"
										},
										{
											"arguments": [
												{
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 514,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1388,
														"src": "3564:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 515,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "3564:10:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												}
											],
											"id": 516,
											"modifierName": {
												"argumentTypes": null,
												"id": 513,
												"name": "updateReward",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 747,
												"src": "3551:12:3",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$_t_address_$",
													"typeString": "modifier (address)"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "3551:24:3"
										}
									],
									"name": "getReward",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 510,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3528:2:3"
									},
									"returnParameters": {
										"id": 517,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3576:0:3"
									},
									"scope": 780,
									"src": "3510:307:3",
									"stateMutability": "nonpayable",
									"superFunction": 832,
									"visibility": "public"
								},
								{
									"body": {
										"id": 565,
										"nodeType": "Block",
										"src": "3850:72:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 556,
																"name": "_balances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 261,
																"src": "3870:9:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 559,
															"indexExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 557,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1388,
																	"src": "3880:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 558,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "3880:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3870:21:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 555,
														"name": "withdraw",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 509,
														"src": "3861:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 560,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3861:31:3",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 561,
												"nodeType": "ExpressionStatement",
												"src": "3861:31:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 562,
														"name": "getReward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 552,
														"src": "3903:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 563,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3903:11:3",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 564,
												"nodeType": "ExpressionStatement",
												"src": "3903:11:3"
											}
										]
									},
									"documentation": null,
									"id": 566,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "exit",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 553,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3838:2:3"
									},
									"returnParameters": {
										"id": 554,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3850:0:3"
									},
									"scope": 780,
									"src": "3825:97:3",
									"stateMutability": "nonpayable",
									"superFunction": 829,
									"visibility": "external"
								},
								{
									"body": {
										"id": 653,
										"nodeType": "Block",
										"src": "4088:981:3",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 581,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 578,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1378,
															"src": "4103:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 579,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "4103:15:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"argumentTypes": null,
														"id": 580,
														"name": "periodFinish",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 237,
														"src": "4122:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4103:31:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 615,
													"nodeType": "Block",
													"src": "4209:208:3",
													"statements": [
														{
															"assignments": [
																591
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 591,
																	"name": "remaining",
																	"nodeType": "VariableDeclaration",
																	"scope": 615,
																	"src": "4224:17:3",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 590,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "4224:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 597,
															"initialValue": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 594,
																			"name": "block",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1378,
																			"src": "4261:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_block",
																				"typeString": "block"
																			}
																		},
																		"id": 595,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "timestamp",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "4261:15:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"id": 592,
																		"name": "periodFinish",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 237,
																		"src": "4244:12:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 593,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sub",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 895,
																	"src": "4244:16:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 596,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4244:33:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "4224:53:3"
														},
														{
															"assignments": [
																599
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 599,
																	"name": "leftover",
																	"nodeType": "VariableDeclaration",
																	"scope": 615,
																	"src": "4292:16:3",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 598,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "4292:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 604,
															"initialValue": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 602,
																		"name": "rewardRate",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 240,
																		"src": "4325:10:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"id": 600,
																		"name": "remaining",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 591,
																		"src": "4311:9:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 601,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "mul",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 929,
																	"src": "4311:13:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 603,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4311:25:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "4292:44:3"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 613,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 605,
																	"name": "rewardRate",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 240,
																	"src": "4351:10:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 611,
																			"name": "rewardsDuration",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 243,
																			"src": "4389:15:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 608,
																					"name": "leftover",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 599,
																					"src": "4375:8:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"id": 606,
																					"name": "reward",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 568,
																					"src": "4364:6:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 607,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "add",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 870,
																				"src": "4364:10:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 609,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "4364:20:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 610,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "div",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 954,
																		"src": "4364:24:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 612,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4364:41:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4351:54:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 614,
															"nodeType": "ExpressionStatement",
															"src": "4351:54:3"
														}
													]
												},
												"id": 616,
												"nodeType": "IfStatement",
												"src": "4099:318:3",
												"trueBody": {
													"id": 589,
													"nodeType": "Block",
													"src": "4136:67:3",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 587,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 582,
																	"name": "rewardRate",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 240,
																	"src": "4151:10:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 585,
																			"name": "rewardsDuration",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 243,
																			"src": "4175:15:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"id": 583,
																			"name": "reward",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 568,
																			"src": "4164:6:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 584,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "div",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 954,
																		"src": "4164:10:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 586,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4164:27:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4151:40:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 588,
															"nodeType": "ExpressionStatement",
															"src": "4151:40:3"
														}
													]
												}
											},
											{
												"assignments": [
													618
												],
												"declarations": [
													{
														"constant": false,
														"id": 618,
														"name": "balance",
														"nodeType": "VariableDeclaration",
														"scope": 653,
														"src": "4777:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 617,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "4777:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 625,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 622,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1422,
																	"src": "4823:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_StakingRewards_$780",
																		"typeString": "contract StakingRewards"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_StakingRewards_$780",
																		"typeString": "contract StakingRewards"
																	}
																],
																"id": 621,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4815:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 623,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4815:13:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 619,
															"name": "rewardsToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 232,
															"src": "4792:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$1103",
																"typeString": "contract IERC20"
															}
														},
														"id": 620,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1048,
														"src": "4792:22:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 624,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4792:37:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4777:52:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 632,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 627,
																"name": "rewardRate",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 240,
																"src": "4848:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 630,
																		"name": "rewardsDuration",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 243,
																		"src": "4874:15:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"id": 628,
																		"name": "balance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 618,
																		"src": "4862:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 629,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "div",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 954,
																	"src": "4862:11:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 631,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4862:28:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4848:42:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "50726f76696465642072657761726420746f6f2068696768",
															"id": 633,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4892:26:3",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_af294828ccb7807394ab9c640e14eb2534ed0e75bb2e1346f1bb81dd84cda810",
																"typeString": "literal_string \"Provided reward too high\""
															},
															"value": "Provided reward too high"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_af294828ccb7807394ab9c640e14eb2534ed0e75bb2e1346f1bb81dd84cda810",
																"typeString": "literal_string \"Provided reward too high\""
															}
														],
														"id": 626,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1391,
															1392
														],
														"referencedDeclaration": 1392,
														"src": "4840:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 634,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4840:79:3",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 635,
												"nodeType": "ExpressionStatement",
												"src": "4840:79:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 639,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 636,
														"name": "lastUpdateTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 245,
														"src": "4932:14:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 637,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1378,
															"src": "4949:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 638,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "4949:15:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4932:32:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 640,
												"nodeType": "ExpressionStatement",
												"src": "4932:32:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 647,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 641,
														"name": "periodFinish",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 237,
														"src": "4975:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 645,
																"name": "rewardsDuration",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 243,
																"src": "5010:15:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 642,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1378,
																	"src": "4990:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 643,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "4990:15:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 644,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 870,
															"src": "4990:19:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 646,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4990:36:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4975:51:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 648,
												"nodeType": "ExpressionStatement",
												"src": "4975:51:3"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 650,
															"name": "reward",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 568,
															"src": "5054:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 649,
														"name": "RewardAdded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 751,
														"src": "5042:11:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 651,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5042:19:3",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 652,
												"nodeType": "EmitStatement",
												"src": "5037:24:3"
											}
										]
									},
									"documentation": null,
									"id": 654,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 571,
											"modifierName": {
												"argumentTypes": null,
												"id": 570,
												"name": "onlyRewardsDistribution",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 194,
												"src": "4039:23:3",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "4039:23:3"
										},
										{
											"arguments": [
												{
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"hexValue": "30",
															"id": 574,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4084:1:3",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 573,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "4076:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": "address"
													},
													"id": 575,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4076:10:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												}
											],
											"id": 576,
											"modifierName": {
												"argumentTypes": null,
												"id": 572,
												"name": "updateReward",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 747,
												"src": "4063:12:3",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$_t_address_$",
													"typeString": "modifier (address)"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "4063:24:3"
										}
									],
									"name": "notifyRewardAmount",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 569,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 568,
												"name": "reward",
												"nodeType": "VariableDeclaration",
												"scope": 654,
												"src": "4014:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 567,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4014:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4013:16:3"
									},
									"returnParameters": {
										"id": 577,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4088:0:3"
									},
									"scope": 780,
									"src": "3986:1083:3",
									"stateMutability": "nonpayable",
									"superFunction": 182,
									"visibility": "external"
								},
								{
									"body": {
										"id": 685,
										"nodeType": "Block",
										"src": "5268:218:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 668,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 664,
																"name": "tokenAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 656,
																"src": "5287:12:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 666,
																		"name": "stakingToken",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 234,
																		"src": "5311:12:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$1103",
																			"typeString": "contract IERC20"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$1103",
																			"typeString": "contract IERC20"
																		}
																	],
																	"id": 665,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5303:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 667,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5303:21:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "5287:37:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "43616e6e6f7420776974686472617720746865207374616b696e6720746f6b656e",
															"id": 669,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5326:35:3",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f43de9f2a3539b2ac9cf1844588e9cc0acd1b2bdb1ec43734f76440993ede0a9",
																"typeString": "literal_string \"Cannot withdraw the staking token\""
															},
															"value": "Cannot withdraw the staking token"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f43de9f2a3539b2ac9cf1844588e9cc0acd1b2bdb1ec43734f76440993ede0a9",
																"typeString": "literal_string \"Cannot withdraw the staking token\""
															}
														],
														"id": 663,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1391,
															1392
														],
														"referencedDeclaration": 1392,
														"src": "5279:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 670,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5279:83:3",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 671,
												"nodeType": "ExpressionStatement",
												"src": "5279:83:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 676,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3,
															"src": "5407:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 677,
															"name": "tokenAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 658,
															"src": "5414:11:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 673,
																	"name": "tokenAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 656,
																	"src": "5380:12:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 672,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1103,
																"src": "5373:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$1103_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 674,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5373:20:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$1103",
																"typeString": "contract IERC20"
															}
														},
														"id": 675,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1136,
														"src": "5373:33:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1103_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$1103_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 678,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5373:53:3",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 679,
												"nodeType": "ExpressionStatement",
												"src": "5373:53:3"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 681,
															"name": "tokenAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 656,
															"src": "5452:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 682,
															"name": "tokenAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 658,
															"src": "5466:11:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 680,
														"name": "Recovered",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 779,
														"src": "5442:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 683,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5442:36:3",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 684,
												"nodeType": "EmitStatement",
												"src": "5437:41:3"
											}
										]
									},
									"documentation": null,
									"id": 686,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 661,
											"modifierName": {
												"argumentTypes": null,
												"id": 660,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 81,
												"src": "5258:9:3",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "5258:9:3"
										}
									],
									"name": "recoverERC20",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 659,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 656,
												"name": "tokenAddress",
												"nodeType": "VariableDeclaration",
												"scope": 686,
												"src": "5206:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 655,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5206:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 658,
												"name": "tokenAmount",
												"nodeType": "VariableDeclaration",
												"scope": 686,
												"src": "5228:19:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 657,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5228:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5205:43:3"
									},
									"returnParameters": {
										"id": 662,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5268:0:3"
									},
									"scope": 780,
									"src": "5184:302:3",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": {
										"id": 709,
										"nodeType": "Block",
										"src": "5567:287:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 697,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 694,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1378,
																	"src": "5600:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 695,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "5600:15:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"id": 696,
																"name": "periodFinish",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 237,
																"src": "5618:12:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5600:30:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "50726576696f7573207265776172647320706572696f64206d75737420626520636f6d706c657465206265666f7265206368616e67696e6720746865206475726174696f6e20666f7220746865206e657720706572696f64",
															"id": 698,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5645:90:3",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_07f2725172f5941b576a01ec7036d341e0c837e280f27b110cb3e6fd2f2c4a56",
																"typeString": "literal_string \"Previous rewards period must be complete before changing the duration for the new period\""
															},
															"value": "Previous rewards period must be complete before changing the duration for the new period"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_07f2725172f5941b576a01ec7036d341e0c837e280f27b110cb3e6fd2f2c4a56",
																"typeString": "literal_string \"Previous rewards period must be complete before changing the duration for the new period\""
															}
														],
														"id": 693,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1391,
															1392
														],
														"referencedDeclaration": 1392,
														"src": "5578:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 699,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5578:168:3",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 700,
												"nodeType": "ExpressionStatement",
												"src": "5578:168:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 703,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 701,
														"name": "rewardsDuration",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 243,
														"src": "5757:15:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 702,
														"name": "_rewardsDuration",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 688,
														"src": "5775:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5757:34:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 704,
												"nodeType": "ExpressionStatement",
												"src": "5757:34:3"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 706,
															"name": "rewardsDuration",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 243,
															"src": "5830:15:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 705,
														"name": "RewardsDurationUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 773,
														"src": "5807:22:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 707,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5807:39:3",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 708,
												"nodeType": "EmitStatement",
												"src": "5802:44:3"
											}
										]
									},
									"documentation": null,
									"id": 710,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 691,
											"modifierName": {
												"argumentTypes": null,
												"id": 690,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 81,
												"src": "5557:9:3",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "5557:9:3"
										}
									],
									"name": "setRewardsDuration",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 689,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 688,
												"name": "_rewardsDuration",
												"nodeType": "VariableDeclaration",
												"scope": 710,
												"src": "5522:24:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 687,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5522:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5521:26:3"
									},
									"returnParameters": {
										"id": 692,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5567:0:3"
									},
									"scope": 780,
									"src": "5494:360:3",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": {
										"id": 746,
										"nodeType": "Block",
										"src": "5946:291:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 717,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 714,
														"name": "rewardPerTokenStored",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 247,
														"src": "5957:20:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 715,
															"name": "rewardPerToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 358,
															"src": "5980:14:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																"typeString": "function () view returns (uint256)"
															}
														},
														"id": 716,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5980:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5957:39:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 718,
												"nodeType": "ExpressionStatement",
												"src": "5957:39:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 722,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 719,
														"name": "lastUpdateTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 245,
														"src": "6007:14:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 720,
															"name": "lastTimeRewardApplicable",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 327,
															"src": "6024:24:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																"typeString": "function () view returns (uint256)"
															}
														},
														"id": 721,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6024:26:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6007:43:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 723,
												"nodeType": "ExpressionStatement",
												"src": "6007:43:3"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 728,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 724,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 712,
														"src": "6065:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 726,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6084:1:3",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 725,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6076:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": "address"
														},
														"id": 727,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6076:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "6065:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 744,
												"nodeType": "IfStatement",
												"src": "6061:157:3",
												"trueBody": {
													"id": 743,
													"nodeType": "Block",
													"src": "6088:130:3",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 735,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 729,
																		"name": "rewards",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 255,
																		"src": "6103:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 731,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 730,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 712,
																		"src": "6111:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "6103:16:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 733,
																			"name": "account",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 712,
																			"src": "6129:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 732,
																		"name": "earned",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 387,
																		"src": "6122:6:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																			"typeString": "function (address) view returns (uint256)"
																		}
																	},
																	"id": 734,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6122:15:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6103:34:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 736,
															"nodeType": "ExpressionStatement",
															"src": "6103:34:3"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 741,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 737,
																		"name": "userRewardPerTokenPaid",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 251,
																		"src": "6152:22:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 739,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 738,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 712,
																		"src": "6175:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "6152:31:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"id": 740,
																	"name": "rewardPerTokenStored",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 247,
																	"src": "6186:20:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6152:54:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 742,
															"nodeType": "ExpressionStatement",
															"src": "6152:54:3"
														}
													]
												}
											},
											{
												"id": 745,
												"nodeType": "PlaceholderStatement",
												"src": "6228:1:3"
											}
										]
									},
									"documentation": null,
									"id": 747,
									"name": "updateReward",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 713,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 712,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 747,
												"src": "5929:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 711,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5929:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5928:17:3"
									},
									"src": "5907:330:3",
									"visibility": "internal"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 751,
									"name": "RewardAdded",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 750,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 749,
												"indexed": false,
												"name": "reward",
												"nodeType": "VariableDeclaration",
												"scope": 751,
												"src": "6305:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 748,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6305:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6304:16:3"
									},
									"src": "6287:34:3"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 757,
									"name": "Staked",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 756,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 753,
												"indexed": true,
												"name": "user",
												"nodeType": "VariableDeclaration",
												"scope": 757,
												"src": "6340:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 752,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6340:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 755,
												"indexed": false,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 757,
												"src": "6362:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 754,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6362:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6339:38:3"
									},
									"src": "6327:51:3"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 763,
									"name": "Withdrawn",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 762,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 759,
												"indexed": true,
												"name": "user",
												"nodeType": "VariableDeclaration",
												"scope": 763,
												"src": "6400:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 758,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6400:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 761,
												"indexed": false,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 763,
												"src": "6422:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 760,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6422:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6399:38:3"
									},
									"src": "6384:54:3"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 769,
									"name": "RewardPaid",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 768,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 765,
												"indexed": true,
												"name": "user",
												"nodeType": "VariableDeclaration",
												"scope": 769,
												"src": "6461:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 764,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6461:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 767,
												"indexed": false,
												"name": "reward",
												"nodeType": "VariableDeclaration",
												"scope": 769,
												"src": "6483:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 766,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6483:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6460:38:3"
									},
									"src": "6444:55:3"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 773,
									"name": "RewardsDurationUpdated",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 772,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 771,
												"indexed": false,
												"name": "newDuration",
												"nodeType": "VariableDeclaration",
												"scope": 773,
												"src": "6534:19:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 770,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6534:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6533:21:3"
									},
									"src": "6505:50:3"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 779,
									"name": "Recovered",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 778,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 775,
												"indexed": false,
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 779,
												"src": "6577:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 774,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6577:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 777,
												"indexed": false,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 779,
												"src": "6592:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 776,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6592:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6576:31:3"
									},
									"src": "6561:47:3"
								}
							],
							"scope": 781,
							"src": "532:6079:3"
						}
					],
					"src": "0:6611:3"
				},
				"id": 3
			},
			"contracts/interfaces/IStakingRewards.sol": {
				"ast": {
					"absolutePath": "contracts/interfaces/IStakingRewards.sol",
					"exportedSymbols": {
						"IStakingRewards": [
							843
						]
					},
					"id": 844,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 782,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".24"
							],
							"nodeType": "PragmaDirective",
							"src": "0:25:4"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": null,
							"fullyImplemented": false,
							"id": 843,
							"linearizedBaseContracts": [
								843
							],
							"name": "IStakingRewards",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": null,
									"id": 789,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 785,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 784,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 789,
												"src": "171:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 783,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "171:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "170:17:4"
									},
									"returnParameters": {
										"id": 788,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 787,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 789,
												"src": "211:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 786,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "211:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "210:9:4"
									},
									"scope": 843,
									"src": "152:68:4",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 796,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "earned",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 792,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 791,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 796,
												"src": "244:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 790,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "244:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "243:17:4"
									},
									"returnParameters": {
										"id": 795,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 794,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 796,
												"src": "284:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 793,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "284:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "283:9:4"
									},
									"scope": 843,
									"src": "228:65:4",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 801,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getRewardForDuration",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 797,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "330:2:4"
									},
									"returnParameters": {
										"id": 800,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 799,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 801,
												"src": "356:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 798,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "356:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "355:9:4"
									},
									"scope": 843,
									"src": "301:64:4",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 806,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "lastTimeRewardApplicable",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 802,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "406:2:4"
									},
									"returnParameters": {
										"id": 805,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 804,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 806,
												"src": "432:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 803,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "432:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "431:9:4"
									},
									"scope": 843,
									"src": "373:68:4",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 811,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "rewardPerToken",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 807,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "472:2:4"
									},
									"returnParameters": {
										"id": 810,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 809,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "498:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 808,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "498:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "497:9:4"
									},
									"scope": 843,
									"src": "449:58:4",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 816,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "rewardsDistribution",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 812,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "543:2:4"
									},
									"returnParameters": {
										"id": 815,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 814,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 816,
												"src": "569:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 813,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "569:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "568:9:4"
									},
									"scope": 843,
									"src": "515:63:4",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 821,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "rewardsToken",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 817,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "607:2:4"
									},
									"returnParameters": {
										"id": 820,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 819,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 821,
												"src": "633:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 818,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "633:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "632:9:4"
									},
									"scope": 843,
									"src": "586:56:4",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 826,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 822,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "670:2:4"
									},
									"returnParameters": {
										"id": 825,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 824,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "696:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 823,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "696:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "695:9:4"
									},
									"scope": 843,
									"src": "650:55:4",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 829,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "exit",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 827,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "745:2:4"
									},
									"returnParameters": {
										"id": 828,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "756:0:4"
									},
									"scope": 843,
									"src": "732:25:4",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 832,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getReward",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 830,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "783:2:4"
									},
									"returnParameters": {
										"id": 831,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:0:4"
									},
									"scope": 843,
									"src": "765:30:4",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 837,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "stake",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 835,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 834,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 837,
												"src": "818:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 833,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "818:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "817:16:4"
									},
									"returnParameters": {
										"id": 836,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "842:0:4"
									},
									"scope": 843,
									"src": "803:40:4",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 842,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "withdraw",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 840,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 839,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 842,
												"src": "869:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 838,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "869:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "868:16:4"
									},
									"returnParameters": {
										"id": 841,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "893:0:4"
									},
									"scope": 843,
									"src": "851:43:4",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								}
							],
							"scope": 844,
							"src": "103:794:4"
						}
					],
					"src": "0:897:4"
				},
				"id": 4
			},
			"openzeppelin-solidity-2.3.0/contracts/math/SafeMath.sol": {
				"ast": {
					"absolutePath": "openzeppelin-solidity-2.3.0/contracts/math/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							976
						]
					},
					"id": 977,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 845,
							"literals": [
								"solidity",
								"^",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:5"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": "@dev Wrappers over Solidity's arithmetic operations with added overflow\nchecks.\n\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\nin bugs, because programmers usually assume that an overflow raises an\nerror, which is the standard behavior in high level programming languages.\n`SafeMath` restores this intuition by reverting the transaction when an\noperation overflows.\n\n * Using this library instead of the unchecked operations eliminates an entire\nclass of bugs, so it's recommended to use it always.",
							"fullyImplemented": true,
							"id": 976,
							"linearizedBaseContracts": [
								976
							],
							"name": "SafeMath",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 869,
										"nodeType": "Block",
										"src": "926:114:5",
										"statements": [
											{
												"assignments": [
													855
												],
												"declarations": [
													{
														"constant": false,
														"id": 855,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 869,
														"src": "937:9:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 854,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "937:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 859,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 858,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 856,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 847,
														"src": "949:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"argumentTypes": null,
														"id": 857,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 849,
														"src": "953:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "949:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "937:17:5"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 863,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 861,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 855,
																"src": "973:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 862,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 847,
																"src": "978:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "973:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206164646974696f6e206f766572666c6f77",
															"id": 864,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "981:29:5",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															},
															"value": "SafeMath: addition overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															}
														],
														"id": 860,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1391,
															1392
														],
														"referencedDeclaration": 1392,
														"src": "965:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 865,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "965:46:5",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 866,
												"nodeType": "ExpressionStatement",
												"src": "965:46:5"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 867,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 855,
													"src": "1031:1:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 853,
												"id": 868,
												"nodeType": "Return",
												"src": "1024:8:5"
											}
										]
									},
									"documentation": "@dev Returns the addition of two unsigned integers, reverting on\noverflow.\n\n     * Counterpart to Solidity's `+` operator.\n\n     * Requirements:\n- Addition cannot overflow.",
									"id": 870,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 850,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 847,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 870,
												"src": "872:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 846,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "872:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 849,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 870,
												"src": "883:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 848,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "883:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "871:22:5"
									},
									"returnParameters": {
										"id": 853,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 852,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 870,
												"src": "917:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 851,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "917:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "916:9:5"
									},
									"scope": 976,
									"src": "859:181:5",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 894,
										"nodeType": "Block",
										"src": "1382:117:5",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 882,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 880,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 874,
																"src": "1401:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 881,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 872,
																"src": "1406:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1401:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a207375627472616374696f6e206f766572666c6f77",
															"id": 883,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1409:32:5",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															},
															"value": "SafeMath: subtraction overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															}
														],
														"id": 879,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1391,
															1392
														],
														"referencedDeclaration": 1392,
														"src": "1393:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 884,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1393:49:5",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 885,
												"nodeType": "ExpressionStatement",
												"src": "1393:49:5"
											},
											{
												"assignments": [
													887
												],
												"declarations": [
													{
														"constant": false,
														"id": 887,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 894,
														"src": "1453:9:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 886,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1453:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 891,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 890,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 888,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 872,
														"src": "1465:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"argumentTypes": null,
														"id": 889,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 874,
														"src": "1469:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1465:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1453:17:5"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 892,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 887,
													"src": "1490:1:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 878,
												"id": 893,
												"nodeType": "Return",
												"src": "1483:8:5"
											}
										]
									},
									"documentation": "@dev Returns the subtraction of two unsigned integers, reverting on\noverflow (when the result is negative).\n\n     * Counterpart to Solidity's `-` operator.\n\n     * Requirements:\n- Subtraction cannot overflow.",
									"id": 895,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 875,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 872,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 895,
												"src": "1328:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 871,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1328:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 874,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 895,
												"src": "1339:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 873,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1339:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1327:22:5"
									},
									"returnParameters": {
										"id": 878,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 877,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 895,
												"src": "1373:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 876,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1373:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1372:9:5"
									},
									"scope": 976,
									"src": "1315:184:5",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 928,
										"nodeType": "Block",
										"src": "1817:404:5",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 906,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 904,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 897,
														"src": "2053:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 905,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2058:1:5",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2053:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 910,
												"nodeType": "IfStatement",
												"src": "2049:47:5",
												"trueBody": {
													"id": 909,
													"nodeType": "Block",
													"src": "2061:35:5",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 907,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2083:1:5",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 903,
															"id": 908,
															"nodeType": "Return",
															"src": "2076:8:5"
														}
													]
												}
											},
											{
												"assignments": [
													912
												],
												"declarations": [
													{
														"constant": false,
														"id": 912,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 928,
														"src": "2108:9:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 911,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2108:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 916,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 915,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 913,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 897,
														"src": "2120:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"argumentTypes": null,
														"id": 914,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 899,
														"src": "2124:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2120:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2108:17:5"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 922,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 920,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 918,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 912,
																	"src": "2144:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 919,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 897,
																	"src": "2148:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2144:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 921,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 899,
																"src": "2153:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2144:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77",
															"id": 923,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2156:35:5",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															},
															"value": "SafeMath: multiplication overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															}
														],
														"id": 917,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1391,
															1392
														],
														"referencedDeclaration": 1392,
														"src": "2136:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 924,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2136:56:5",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 925,
												"nodeType": "ExpressionStatement",
												"src": "2136:56:5"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 926,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 912,
													"src": "2212:1:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 903,
												"id": 927,
												"nodeType": "Return",
												"src": "2205:8:5"
											}
										]
									},
									"documentation": "@dev Returns the multiplication of two unsigned integers, reverting on\noverflow.\n\n     * Counterpart to Solidity's `*` operator.\n\n     * Requirements:\n- Multiplication cannot overflow.",
									"id": 929,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 900,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 897,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 929,
												"src": "1763:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 896,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1763:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 899,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 929,
												"src": "1774:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 898,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1774:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1762:22:5"
									},
									"returnParameters": {
										"id": 903,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 902,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 929,
												"src": "1808:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 901,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1808:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1807:9:5"
									},
									"scope": 976,
									"src": "1750:471:5",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 953,
										"nodeType": "Block",
										"src": "2756:266:5",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 941,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 939,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 933,
																"src": "2842:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 940,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2846:1:5",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2842:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206469766973696f6e206279207a65726f",
															"id": 942,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2849:28:5",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															},
															"value": "SafeMath: division by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															}
														],
														"id": 938,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1391,
															1392
														],
														"referencedDeclaration": 1392,
														"src": "2834:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 943,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2834:44:5",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 944,
												"nodeType": "ExpressionStatement",
												"src": "2834:44:5"
											},
											{
												"assignments": [
													946
												],
												"declarations": [
													{
														"constant": false,
														"id": 946,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 953,
														"src": "2889:9:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 945,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2889:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 950,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 949,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 947,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 931,
														"src": "2901:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"argumentTypes": null,
														"id": 948,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 933,
														"src": "2905:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2901:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2889:17:5"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 951,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 946,
													"src": "3013:1:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 937,
												"id": 952,
												"nodeType": "Return",
												"src": "3006:8:5"
											}
										]
									},
									"documentation": "@dev Returns the integer division of two unsigned integers. Reverts on\ndivision by zero. The result is rounded towards zero.\n\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n`revert` opcode (which leaves remaining gas untouched) while Solidity\nuses an invalid opcode to revert (consuming all remaining gas).\n\n     * Requirements:\n- The divisor cannot be zero.",
									"id": 954,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 934,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 931,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 954,
												"src": "2702:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 930,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2702:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 933,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 954,
												"src": "2713:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 932,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2713:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2701:22:5"
									},
									"returnParameters": {
										"id": 937,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 936,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 954,
												"src": "2747:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 935,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2747:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2746:9:5"
									},
									"scope": 976,
									"src": "2689:333:5",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 974,
										"nodeType": "Block",
										"src": "3546:85:5",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 966,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 964,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 958,
																"src": "3565:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 965,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3570:1:5",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3565:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206d6f64756c6f206279207a65726f",
															"id": 967,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3573:26:5",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															},
															"value": "SafeMath: modulo by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															}
														],
														"id": 963,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1391,
															1392
														],
														"referencedDeclaration": 1392,
														"src": "3557:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 968,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3557:43:5",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 969,
												"nodeType": "ExpressionStatement",
												"src": "3557:43:5"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 972,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 970,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 956,
														"src": "3618:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"argumentTypes": null,
														"id": 971,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 958,
														"src": "3622:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3618:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 962,
												"id": 973,
												"nodeType": "Return",
												"src": "3611:12:5"
											}
										]
									},
									"documentation": "@dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\nReverts when dividing by zero.\n\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\nopcode (which leaves remaining gas untouched) while Solidity uses an\ninvalid opcode to revert (consuming all remaining gas).\n\n     * Requirements:\n- The divisor cannot be zero.",
									"id": 975,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 959,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 956,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 975,
												"src": "3492:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 955,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3492:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 958,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 975,
												"src": "3503:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 957,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3503:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3491:22:5"
									},
									"returnParameters": {
										"id": 962,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 961,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 975,
												"src": "3537:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 960,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3537:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3536:9:5"
									},
									"scope": 976,
									"src": "3479:152:5",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								}
							],
							"scope": 977,
							"src": "604:3030:5"
						}
					],
					"src": "0:3634:5"
				},
				"id": 5
			},
			"openzeppelin-solidity-2.3.0/contracts/token/ERC20/ERC20Detailed.sol": {
				"ast": {
					"absolutePath": "openzeppelin-solidity-2.3.0/contracts/token/ERC20/ERC20Detailed.sol",
					"exportedSymbols": {
						"ERC20Detailed": [
							1034
						]
					},
					"id": 1035,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 978,
							"literals": [
								"solidity",
								"^",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:6"
						},
						{
							"absolutePath": "openzeppelin-solidity-2.3.0/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 979,
							"nodeType": "ImportDirective",
							"scope": 1035,
							"sourceUnit": 1104,
							"src": "27:22:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 980,
										"name": "IERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1103,
										"src": "142:6:6",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$1103",
											"typeString": "contract IERC20"
										}
									},
									"id": 981,
									"nodeType": "InheritanceSpecifier",
									"src": "142:6:6"
								}
							],
							"contractDependencies": [
								1103
							],
							"contractKind": "contract",
							"documentation": "@dev Optional functions from the ERC20 standard.",
							"fullyImplemented": false,
							"id": 1034,
							"linearizedBaseContracts": [
								1034,
								1103
							],
							"name": "ERC20Detailed",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 983,
									"name": "_name",
									"nodeType": "VariableDeclaration",
									"scope": 1034,
									"src": "156:20:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 982,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "156:6:6",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 985,
									"name": "_symbol",
									"nodeType": "VariableDeclaration",
									"scope": 1034,
									"src": "183:22:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 984,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "183:6:6",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 987,
									"name": "_decimals",
									"nodeType": "VariableDeclaration",
									"scope": 1034,
									"src": "212:23:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 986,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "212:5:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1008,
										"nodeType": "Block",
										"src": "511:89:6",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 998,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 996,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 983,
														"src": "522:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 997,
														"name": "name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 989,
														"src": "530:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "522:12:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 999,
												"nodeType": "ExpressionStatement",
												"src": "522:12:6"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1002,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1000,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 985,
														"src": "545:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1001,
														"name": "symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 991,
														"src": "555:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "545:16:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 1003,
												"nodeType": "ExpressionStatement",
												"src": "545:16:6"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1006,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1004,
														"name": "_decimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 987,
														"src": "572:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1005,
														"name": "decimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 993,
														"src": "584:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "572:20:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 1007,
												"nodeType": "ExpressionStatement",
												"src": "572:20:6"
											}
										]
									},
									"documentation": "@dev Sets the values for `name`, `symbol`, and `decimals`. All three of\nthese values are immutable: they can only be set once during\nconstruction.",
									"id": 1009,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 994,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 989,
												"name": "name",
												"nodeType": "VariableDeclaration",
												"scope": 1009,
												"src": "446:18:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 988,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "446:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 991,
												"name": "symbol",
												"nodeType": "VariableDeclaration",
												"scope": 1009,
												"src": "466:20:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 990,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "466:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 993,
												"name": "decimals",
												"nodeType": "VariableDeclaration",
												"scope": 1009,
												"src": "488:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 992,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "488:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "445:58:6"
									},
									"returnParameters": {
										"id": 995,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "511:0:6"
									},
									"scope": 1034,
									"src": "433:167:6",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1016,
										"nodeType": "Block",
										"src": "722:31:6",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 1014,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 983,
													"src": "740:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 1013,
												"id": 1015,
												"nodeType": "Return",
												"src": "733:12:6"
											}
										]
									},
									"documentation": "@dev Returns the name of the token.",
									"id": 1017,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1010,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "683:2:6"
									},
									"returnParameters": {
										"id": 1013,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1012,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1017,
												"src": "707:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1011,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "707:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "706:15:6"
									},
									"scope": 1034,
									"src": "670:83:6",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1024,
										"nodeType": "Block",
										"src": "926:33:6",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 1022,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 985,
													"src": "944:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 1021,
												"id": 1023,
												"nodeType": "Return",
												"src": "937:14:6"
											}
										]
									},
									"documentation": "@dev Returns the symbol of the token, usually a shorter version of the\nname.",
									"id": 1025,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1018,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "887:2:6"
									},
									"returnParameters": {
										"id": 1021,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1020,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1025,
												"src": "911:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1019,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "911:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "910:15:6"
									},
									"scope": 1034,
									"src": "872:87:6",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1032,
										"nodeType": "Block",
										"src": "1576:35:6",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 1030,
													"name": "_decimals",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 987,
													"src": "1594:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"functionReturnParameters": 1029,
												"id": 1031,
												"nodeType": "Return",
												"src": "1587:16:6"
											}
										]
									},
									"documentation": "@dev Returns the number of decimals used to get its user representation.\nFor example, if `decimals` equals `2`, a balance of `505` tokens should\nbe displayed to a user as `5,05` (`505 / 10 ** 2`).\n\n     * Tokens usually opt for a value of 18, imitating the relationship between\nEther and Wei.\n\n     * > Note that this information is only used for _display_ purposes: it in\nno way affects any of the arithmetic of the contract, including\n`IERC20.balanceOf` and `IERC20.transfer`.",
									"id": 1033,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1026,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1545:2:6"
									},
									"returnParameters": {
										"id": 1029,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1028,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1033,
												"src": "1569:5:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1027,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1569:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1568:7:6"
									},
									"scope": 1034,
									"src": "1528:83:6",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								}
							],
							"scope": 1035,
							"src": "116:1498:6"
						}
					],
					"src": "0:1614:6"
				},
				"id": 6
			},
			"openzeppelin-solidity-2.3.0/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "openzeppelin-solidity-2.3.0/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							1103
						]
					},
					"id": 1104,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1036,
							"literals": [
								"solidity",
								"^",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:7"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": "@dev Interface of the ERC20 standard as defined in the EIP. Does not include\nthe optional functions; to access them see `ERC20Detailed`.",
							"fullyImplemented": false,
							"id": 1103,
							"linearizedBaseContracts": [
								1103
							],
							"name": "IERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": "@dev Returns the amount of tokens in existence.",
									"id": 1041,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1037,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "300:2:7"
									},
									"returnParameters": {
										"id": 1040,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1039,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1041,
												"src": "326:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1038,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "326:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "325:9:7"
									},
									"scope": 1103,
									"src": "280:55:7",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": "@dev Returns the amount of tokens owned by `account`.",
									"id": 1048,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1044,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1043,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 1048,
												"src": "442:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1042,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "442:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "441:17:7"
									},
									"returnParameters": {
										"id": 1047,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1046,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1048,
												"src": "482:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1045,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "482:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "481:9:7"
									},
									"scope": 1103,
									"src": "423:68:7",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": "@dev Moves `amount` tokens from the caller's account to `recipient`.\n\n     * Returns a boolean value indicating whether the operation succeeded.\n\n     * Emits a `Transfer` event.",
									"id": 1057,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1053,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1050,
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 1057,
												"src": "738:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1049,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "738:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1052,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 1057,
												"src": "757:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1051,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "757:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "737:35:7"
									},
									"returnParameters": {
										"id": 1056,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1055,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1057,
												"src": "791:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1054,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "791:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "790:6:7"
									},
									"scope": 1103,
									"src": "720:77:7",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": "@dev Returns the remaining number of tokens that `spender` will be\nallowed to spend on behalf of `owner` through `transferFrom`. This is\nzero by default.\n\n     * This value changes when `approve` or `transferFrom` are called.",
									"id": 1066,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1062,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1059,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 1066,
												"src": "1100:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1058,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1100:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1061,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 1066,
												"src": "1115:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1060,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1115:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1099:32:7"
									},
									"returnParameters": {
										"id": 1065,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1064,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1066,
												"src": "1155:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1063,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1155:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1154:9:7"
									},
									"scope": 1103,
									"src": "1081:83:7",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": "@dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n\n     * Returns a boolean value indicating whether the operation succeeded.\n\n     * > Beware that changing an allowance with this method brings the risk\nthat someone may use both the old and the new allowance by unfortunate\ntransaction ordering. One possible solution to mitigate this race\ncondition is to first reduce the spender's allowance to 0 and set the\ndesired value afterwards:\nhttps://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n\n     * Emits an `Approval` event.",
									"id": 1075,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1071,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1068,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 1075,
												"src": "1841:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1067,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1841:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1070,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 1075,
												"src": "1858:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1069,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1858:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1840:33:7"
									},
									"returnParameters": {
										"id": 1074,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1073,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1075,
												"src": "1892:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1072,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1892:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1891:6:7"
									},
									"scope": 1103,
									"src": "1824:74:7",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": "@dev Moves `amount` tokens from `sender` to `recipient` using the\nallowance mechanism. `amount` is then deducted from the caller's\nallowance.\n\n     * Returns a boolean value indicating whether the operation succeeded.\n\n     * Emits a `Transfer` event.",
									"id": 1086,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1082,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1077,
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 1086,
												"src": "2238:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1076,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2238:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1079,
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 1086,
												"src": "2254:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1078,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2254:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1081,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 1086,
												"src": "2273:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1080,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2273:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2237:51:7"
									},
									"returnParameters": {
										"id": 1085,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1084,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1086,
												"src": "2307:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1083,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2307:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2306:6:7"
									},
									"scope": 1103,
									"src": "2216:97:7",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": "@dev Emitted when `value` tokens are moved from one account (`from`) to\nanother (`to`).\n\n     * Note that `value` may be zero.",
									"id": 1094,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1093,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1088,
												"indexed": true,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 1094,
												"src": "2505:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1087,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2505:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1090,
												"indexed": true,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1094,
												"src": "2527:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1089,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2527:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1092,
												"indexed": false,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1094,
												"src": "2547:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1091,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2547:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2504:57:7"
									},
									"src": "2490:72:7"
								},
								{
									"anonymous": false,
									"documentation": "@dev Emitted when the allowance of a `spender` for an `owner` is set by\na call to `approve`. `value` is the new allowance.",
									"id": 1102,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1101,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1096,
												"indexed": true,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 1102,
												"src": "2742:21:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1095,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2742:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1098,
												"indexed": true,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 1102,
												"src": "2765:23:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1097,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2765:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1100,
												"indexed": false,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1102,
												"src": "2790:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1099,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2790:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2741:63:7"
									},
									"src": "2727:78:7"
								}
							],
							"scope": 1104,
							"src": "182:2626:7"
						}
					],
					"src": "0:2808:7"
				},
				"id": 7
			},
			"openzeppelin-solidity-2.3.0/contracts/token/ERC20/SafeERC20.sol": {
				"ast": {
					"absolutePath": "openzeppelin-solidity-2.3.0/contracts/token/ERC20/SafeERC20.sol",
					"exportedSymbols": {
						"SafeERC20": [
							1322
						]
					},
					"id": 1323,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1105,
							"literals": [
								"solidity",
								"^",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:8"
						},
						{
							"absolutePath": "openzeppelin-solidity-2.3.0/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 1106,
							"nodeType": "ImportDirective",
							"scope": 1323,
							"sourceUnit": 1104,
							"src": "27:22:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "openzeppelin-solidity-2.3.0/contracts/math/SafeMath.sol",
							"file": "../../math/SafeMath.sol",
							"id": 1107,
							"nodeType": "ImportDirective",
							"scope": 1323,
							"sourceUnit": 977,
							"src": "51:33:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "openzeppelin-solidity-2.3.0/contracts/utils/Address.sol",
							"file": "../../utils/Address.sol",
							"id": 1108,
							"nodeType": "ImportDirective",
							"scope": 1323,
							"sourceUnit": 1342,
							"src": "86:33:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": "@title SafeERC20\n@dev Wrappers around ERC20 operations that throw on failure (when the token\ncontract returns false). Tokens that return no value (and instead revert or\nthrow on failure) are also supported, non-reverting calls are assumed to be\nsuccessful.\nTo use this library you can add a `using SafeERC20 for ERC20;` statement to your contract,\nwhich allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
							"fullyImplemented": true,
							"id": 1322,
							"linearizedBaseContracts": [
								1322
							],
							"name": "SafeERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 1111,
									"libraryName": {
										"contractScope": null,
										"id": 1109,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 976,
										"src": "620:8:8",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$976",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "614:27:8",
									"typeName": {
										"id": 1110,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "633:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"id": 1114,
									"libraryName": {
										"contractScope": null,
										"id": 1112,
										"name": "Address",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1341,
										"src": "653:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Address_$1341",
											"typeString": "library Address"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "647:26:8",
									"typeName": {
										"id": 1113,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "665:7:8",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"body": {
										"id": 1135,
										"nodeType": "Block",
										"src": "753:104:8",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1124,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1116,
															"src": "783:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$1103",
																"typeString": "contract IERC20"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1127,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1116,
																			"src": "813:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$1103",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 1128,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "transfer",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1057,
																		"src": "813:14:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 1129,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "813:23:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 1130,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1118,
																	"src": "838:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 1131,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1120,
																	"src": "842:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 1125,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1375,
																	"src": "790:3:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1126,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "790:22:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 1132,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "790:58:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$1103",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1123,
														"name": "callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1321,
														"src": "764:18:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1103_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 1133,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "764:85:8",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1134,
												"nodeType": "ExpressionStatement",
												"src": "764:85:8"
											}
										]
									},
									"documentation": null,
									"id": 1136,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1121,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1116,
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 1136,
												"src": "703:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$1103",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"contractScope": null,
													"id": 1115,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 1103,
													"src": "703:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$1103",
														"typeString": "contract IERC20"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1118,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1136,
												"src": "717:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1117,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "717:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1120,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1136,
												"src": "729:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1119,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "729:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "702:41:8"
									},
									"returnParameters": {
										"id": 1122,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "753:0:8"
									},
									"scope": 1322,
									"src": "681:176:8",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1160,
										"nodeType": "Block",
										"src": "955:114:8",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1148,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1138,
															"src": "985:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$1103",
																"typeString": "contract IERC20"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1151,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1138,
																			"src": "1015:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$1103",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 1152,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "transferFrom",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1086,
																		"src": "1015:18:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,address,uint256) external returns (bool)"
																		}
																	},
																	"id": 1153,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "1015:27:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 1154,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1140,
																	"src": "1044:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 1155,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1142,
																	"src": "1050:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 1156,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1144,
																	"src": "1054:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 1149,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1375,
																	"src": "992:3:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1150,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "992:22:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 1157,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "992:68:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$1103",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1147,
														"name": "callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1321,
														"src": "966:18:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1103_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 1158,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "966:95:8",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1159,
												"nodeType": "ExpressionStatement",
												"src": "966:95:8"
											}
										]
									},
									"documentation": null,
									"id": 1161,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1145,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1138,
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 1161,
												"src": "891:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$1103",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"contractScope": null,
													"id": 1137,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 1103,
													"src": "891:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$1103",
														"typeString": "contract IERC20"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1140,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 1161,
												"src": "905:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1139,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "905:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1142,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1161,
												"src": "919:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1141,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "919:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1144,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1161,
												"src": "931:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1143,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "890:55:8"
									},
									"returnParameters": {
										"id": 1146,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "955:0:8"
									},
									"scope": 1322,
									"src": "865:204:8",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1201,
										"nodeType": "Block",
										"src": "1153:545:8",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1185,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"components": [
																	{
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1173,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"id": 1171,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1167,
																			"src": "1447:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"argumentTypes": null,
																			"hexValue": "30",
																			"id": 1172,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1456:1:8",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1447:10:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 1174,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1446:12:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"argumentTypes": null,
																"components": [
																	{
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1183,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"arguments": [
																						{
																							"argumentTypes": null,
																							"id": 1178,
																							"name": "this",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1416,
																							"src": "1487:4:8",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_SafeERC20_$1322",
																								"typeString": "library SafeERC20"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_contract$_SafeERC20_$1322",
																								"typeString": "library SafeERC20"
																							}
																						],
																						"id": 1177,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "1479:7:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": "address"
																					},
																					"id": 1179,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "1479:13:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"id": 1180,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1165,
																					"src": "1494:7:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"id": 1175,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1163,
																					"src": "1463:5:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$1103",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 1176,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "allowance",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1066,
																				"src": "1463:15:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																					"typeString": "function (address,address) view external returns (uint256)"
																				}
																			},
																			"id": 1181,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1463:39:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"argumentTypes": null,
																			"hexValue": "30",
																			"id": 1182,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1506:1:8",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1463:44:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 1184,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1462:46:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1446:62:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365",
															"id": 1186,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1523:56:8",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															},
															"value": "SafeERC20: approve from non-zero to non-zero allowance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															}
														],
														"id": 1170,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1391,
															1392
														],
														"referencedDeclaration": 1392,
														"src": "1438:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1187,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1438:152:8",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1188,
												"nodeType": "ExpressionStatement",
												"src": "1438:152:8"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1190,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1163,
															"src": "1620:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$1103",
																"typeString": "contract IERC20"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1193,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1163,
																			"src": "1650:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$1103",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 1194,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1075,
																		"src": "1650:13:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 1195,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "1650:22:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 1196,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1165,
																	"src": "1674:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 1197,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1167,
																	"src": "1683:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 1191,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1375,
																	"src": "1627:3:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1192,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "1627:22:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 1198,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1627:62:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$1103",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1189,
														"name": "callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1321,
														"src": "1601:18:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1103_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 1199,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1601:89:8",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1200,
												"nodeType": "ExpressionStatement",
												"src": "1601:89:8"
											}
										]
									},
									"documentation": null,
									"id": 1202,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeApprove",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1163,
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 1202,
												"src": "1098:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$1103",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"contractScope": null,
													"id": 1162,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 1103,
													"src": "1098:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$1103",
														"typeString": "contract IERC20"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1165,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 1202,
												"src": "1112:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1164,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1112:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1167,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1202,
												"src": "1129:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1166,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1129:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1097:46:8"
									},
									"returnParameters": {
										"id": 1169,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1153:0:8"
									},
									"scope": 1322,
									"src": "1077:621:8",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1236,
										"nodeType": "Block",
										"src": "1792:199:8",
										"statements": [
											{
												"assignments": [
													1212
												],
												"declarations": [
													{
														"constant": false,
														"id": 1212,
														"name": "newAllowance",
														"nodeType": "VariableDeclaration",
														"scope": 1236,
														"src": "1803:20:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1211,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1803:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1223,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1221,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1208,
															"src": "1870:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 1216,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1416,
																			"src": "1850:4:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$1322",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$1322",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 1215,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1842:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": "address"
																	},
																	"id": 1217,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1842:13:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 1218,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1206,
																	"src": "1857:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 1213,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1204,
																	"src": "1826:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$1103",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 1214,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1066,
																"src": "1826:15:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 1219,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1826:39:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1220,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 870,
														"src": "1826:43:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1222,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1826:50:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1803:73:8"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1225,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1204,
															"src": "1906:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$1103",
																"typeString": "contract IERC20"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1228,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1204,
																			"src": "1936:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$1103",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 1229,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1075,
																		"src": "1936:13:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 1230,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "1936:22:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 1231,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1206,
																	"src": "1960:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 1232,
																	"name": "newAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1212,
																	"src": "1969:12:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 1226,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1375,
																	"src": "1913:3:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1227,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "1913:22:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 1233,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1913:69:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$1103",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1224,
														"name": "callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1321,
														"src": "1887:18:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1103_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 1234,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1887:96:8",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1235,
												"nodeType": "ExpressionStatement",
												"src": "1887:96:8"
											}
										]
									},
									"documentation": null,
									"id": 1237,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1209,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1204,
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 1237,
												"src": "1737:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$1103",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"contractScope": null,
													"id": 1203,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 1103,
													"src": "1737:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$1103",
														"typeString": "contract IERC20"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1206,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 1237,
												"src": "1751:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1205,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1751:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1208,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1237,
												"src": "1768:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1207,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1768:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1736:46:8"
									},
									"returnParameters": {
										"id": 1210,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1792:0:8"
									},
									"scope": 1322,
									"src": "1706:285:8",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1271,
										"nodeType": "Block",
										"src": "2085:199:8",
										"statements": [
											{
												"assignments": [
													1247
												],
												"declarations": [
													{
														"constant": false,
														"id": 1247,
														"name": "newAllowance",
														"nodeType": "VariableDeclaration",
														"scope": 1271,
														"src": "2096:20:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1246,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2096:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1258,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1256,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1243,
															"src": "2163:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 1251,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1416,
																			"src": "2143:4:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$1322",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$1322",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 1250,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2135:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": "address"
																	},
																	"id": 1252,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2135:13:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 1253,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1241,
																	"src": "2150:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 1248,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1239,
																	"src": "2119:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$1103",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 1249,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1066,
																"src": "2119:15:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 1254,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2119:39:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1255,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 895,
														"src": "2119:43:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1257,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2119:50:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2096:73:8"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1260,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1239,
															"src": "2199:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$1103",
																"typeString": "contract IERC20"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1263,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1239,
																			"src": "2229:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$1103",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 1264,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1075,
																		"src": "2229:13:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 1265,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "2229:22:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 1266,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1241,
																	"src": "2253:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 1267,
																	"name": "newAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1247,
																	"src": "2262:12:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 1261,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1375,
																	"src": "2206:3:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1262,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "2206:22:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 1268,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2206:69:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$1103",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1259,
														"name": "callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1321,
														"src": "2180:18:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1103_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 1269,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2180:96:8",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1270,
												"nodeType": "ExpressionStatement",
												"src": "2180:96:8"
											}
										]
									},
									"documentation": null,
									"id": 1272,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1244,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1239,
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 1272,
												"src": "2030:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$1103",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"contractScope": null,
													"id": 1238,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 1103,
													"src": "2030:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$1103",
														"typeString": "contract IERC20"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1241,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 1272,
												"src": "2044:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1240,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2044:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1243,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1272,
												"src": "2061:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1242,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2061:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2029:46:8"
									},
									"returnParameters": {
										"id": 1245,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2085:0:8"
									},
									"scope": 1322,
									"src": "1999:285:8",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1320,
										"nodeType": "Block",
										"src": "2744:1045:8",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"expression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 1281,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1274,
																			"src": "3287:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$1103",
																				"typeString": "contract IERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_IERC20_$1103",
																				"typeString": "contract IERC20"
																			}
																		],
																		"id": 1280,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3279:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": "address"
																	},
																	"id": 1282,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3279:14:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1283,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "isContract",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1340,
																"src": "3279:25:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$bound_to$_t_address_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 1284,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3279:27:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "5361666545524332303a2063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 1285,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3308:33:8",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f6ce7bfd656f35145dec774d6f7e67f4cba158373d2dd7a0f8273e232f86148d",
																"typeString": "literal_string \"SafeERC20: call to non-contract\""
															},
															"value": "SafeERC20: call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f6ce7bfd656f35145dec774d6f7e67f4cba158373d2dd7a0f8273e232f86148d",
																"typeString": "literal_string \"SafeERC20: call to non-contract\""
															}
														],
														"id": 1279,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1391,
															1392
														],
														"referencedDeclaration": 1392,
														"src": "3271:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1286,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3271:71:8",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1287,
												"nodeType": "ExpressionStatement",
												"src": "3271:71:8"
											},
											{
												"assignments": [
													1289,
													1291
												],
												"declarations": [
													{
														"constant": false,
														"id": 1289,
														"name": "success",
														"nodeType": "VariableDeclaration",
														"scope": 1320,
														"src": "3416:12:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1288,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3416:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"value": null,
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1291,
														"name": "returndata",
														"nodeType": "VariableDeclaration",
														"scope": 1320,
														"src": "3430:23:8",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1290,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3430:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1298,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1296,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1276,
															"src": "3477:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1293,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1274,
																	"src": "3465:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$1103",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$1103",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 1292,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3457:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 1294,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3457:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1295,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "call",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "3457:19:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1297,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3457:25:8",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3415:67:8"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1300,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1289,
															"src": "3501:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 1301,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3510:34:8",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															},
															"value": "SafeERC20: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															}
														],
														"id": 1299,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1391,
															1392
														],
														"referencedDeclaration": 1392,
														"src": "3493:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1302,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3493:52:8",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1303,
												"nodeType": "ExpressionStatement",
												"src": "3493:52:8"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1307,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1304,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1291,
															"src": "3562:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1305,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "3562:17:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 1306,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3582:1:8",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3562:21:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1319,
												"nodeType": "IfStatement",
												"src": "3558:224:8",
												"trueBody": {
													"id": 1318,
													"nodeType": "Block",
													"src": "3585:197:8",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 1311,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1291,
																				"src": "3704:10:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			{
																				"argumentTypes": null,
																				"components": [
																					{
																						"argumentTypes": null,
																						"id": 1312,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "3717:4:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bool_$",
																							"typeString": "type(bool)"
																						},
																						"typeName": "bool"
																					}
																				],
																				"id": 1313,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "3716:6:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				},
																				{
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			],
																			"expression": {
																				"argumentTypes": null,
																				"id": 1309,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1375,
																				"src": "3693:3:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 1310,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberName": "decode",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": null,
																			"src": "3693:10:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 1314,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3693:30:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564",
																		"id": 1315,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3725:44:8",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		},
																		"value": "SafeERC20: ERC20 operation did not succeed"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		}
																	],
																	"id": 1308,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		1391,
																		1392
																	],
																	"referencedDeclaration": 1392,
																	"src": "3685:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1316,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3685:85:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1317,
															"nodeType": "ExpressionStatement",
															"src": "3685:85:8"
														}
													]
												}
											}
										]
									},
									"documentation": "@dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\non the return value: the return value is optional (but if data is returned, it must not be false).\n@param token The token targeted by the call.\n@param data The call data (encoded using abi.encode or one of its variants).",
									"id": 1321,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "callOptionalReturn",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1277,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1274,
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 1321,
												"src": "2703:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$1103",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"contractScope": null,
													"id": 1273,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 1103,
													"src": "2703:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$1103",
														"typeString": "contract IERC20"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1276,
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 1321,
												"src": "2717:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1275,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2717:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2702:33:8"
									},
									"returnParameters": {
										"id": 1278,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2744:0:8"
									},
									"scope": 1322,
									"src": "2675:1114:8",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "private"
								}
							],
							"scope": 1323,
							"src": "589:3203:8"
						}
					],
					"src": "0:3792:8"
				},
				"id": 8
			},
			"openzeppelin-solidity-2.3.0/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "openzeppelin-solidity-2.3.0/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							1341
						]
					},
					"id": 1342,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1324,
							"literals": [
								"solidity",
								"^",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:9"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": "@dev Collection of functions related to the address type,",
							"fullyImplemented": true,
							"id": 1341,
							"linearizedBaseContracts": [
								1341
							],
							"name": "Address",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1339,
										"nodeType": "Block",
										"src": "624:356:9",
										"statements": [
											{
												"assignments": [
													1332
												],
												"declarations": [
													{
														"constant": false,
														"id": 1332,
														"name": "size",
														"nodeType": "VariableDeclaration",
														"scope": 1339,
														"src": "826:12:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1331,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "826:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1333,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "826:12:9"
											},
											{
												"externalReferences": [
													{
														"size": {
															"declaration": 1332,
															"isOffset": false,
															"isSlot": false,
															"src": "917:4:9",
															"valueSize": 1
														}
													},
													{
														"account": {
															"declaration": 1326,
															"isOffset": false,
															"isSlot": false,
															"src": "937:7:9",
															"valueSize": 1
														}
													}
												],
												"id": 1334,
												"nodeType": "InlineAssembly",
												"operations": "{ size := extcodesize(account) }",
												"src": "906:41:9"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1337,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1335,
														"name": "size",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1332,
														"src": "964:4:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 1336,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "971:1:9",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "964:8:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1330,
												"id": 1338,
												"nodeType": "Return",
												"src": "957:15:9"
											}
										]
									},
									"documentation": "@dev Returns true if `account` is a contract.\n\n     * This test is non-exhaustive, and there may be false-negatives: during the\nexecution of a contract's constructor, its address will be reported as\nnot containing a contract.\n\n     * > It is unsafe to assume that an address for which this function returns\nfalse is an externally-owned account (EOA) and not a contract.",
									"id": 1340,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1327,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1326,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 1340,
												"src": "578:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1325,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "578:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "577:17:9"
									},
									"returnParameters": {
										"id": 1330,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1329,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1340,
												"src": "618:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1328,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "618:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "617:6:9"
									},
									"scope": 1341,
									"src": "558:422:9",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "internal"
								}
							],
							"scope": 1342,
							"src": "99:884:9"
						}
					],
					"src": "0:983:9"
				},
				"id": 9
			},
			"openzeppelin-solidity-2.3.0/contracts/utils/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "openzeppelin-solidity-2.3.0/contracts/utils/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							1373
						]
					},
					"id": 1374,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1343,
							"literals": [
								"solidity",
								"^",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:10"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": "@dev Contract module that helps prevent reentrant calls to a function.\n\n * Inheriting from `ReentrancyGuard` will make the `nonReentrant` modifier\navailable, which can be aplied to functions to make sure there are no nested\n(reentrant) calls to them.\n\n * Note that because there is a single `nonReentrant` guard, functions marked as\n`nonReentrant` may not call one another. This can be worked around by making\nthose functions `private`, and then adding `external` `nonReentrant` entry\npoints to them.",
							"fullyImplemented": true,
							"id": 1373,
							"linearizedBaseContracts": [
								1373
							],
							"name": "ReentrancyGuard",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 1345,
									"name": "_guardCounter",
									"nodeType": "VariableDeclaration",
									"scope": 1373,
									"src": "675:29:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1344,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "675:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1352,
										"nodeType": "Block",
										"src": "737:177:10",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 1350,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1348,
														"name": "_guardCounter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1345,
														"src": "889:13:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "31",
														"id": 1349,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "905:1:10",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "889:17:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1351,
												"nodeType": "ExpressionStatement",
												"src": "889:17:10"
											}
										]
									},
									"documentation": null,
									"id": 1353,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1346,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "725:2:10"
									},
									"returnParameters": {
										"id": 1347,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "737:0:10"
									},
									"scope": 1373,
									"src": "713:201:10",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1371,
										"nodeType": "Block",
										"src": "1322:180:10",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 1357,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1355,
														"name": "_guardCounter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1345,
														"src": "1333:13:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "31",
														"id": 1356,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1350:1:10",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "1333:18:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1358,
												"nodeType": "ExpressionStatement",
												"src": "1333:18:10"
											},
											{
												"assignments": [
													1360
												],
												"declarations": [
													{
														"constant": false,
														"id": 1360,
														"name": "localCounter",
														"nodeType": "VariableDeclaration",
														"scope": 1371,
														"src": "1362:20:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1359,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1362:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1362,
												"initialValue": {
													"argumentTypes": null,
													"id": 1361,
													"name": "_guardCounter",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1345,
													"src": "1385:13:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1362:36:10"
											},
											{
												"id": 1363,
												"nodeType": "PlaceholderStatement",
												"src": "1409:1:10"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1367,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1365,
																"name": "localCounter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1360,
																"src": "1429:12:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 1366,
																"name": "_guardCounter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1345,
																"src": "1445:13:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1429:29:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 1368,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1460:33:10",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 1364,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1391,
															1392
														],
														"referencedDeclaration": 1392,
														"src": "1421:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1369,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1421:73:10",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1370,
												"nodeType": "ExpressionStatement",
												"src": "1421:73:10"
											}
										]
									},
									"documentation": "@dev Prevents a contract from calling itself, directly or indirectly.\nCalling a `nonReentrant` function from another `nonReentrant`\nfunction is not supported. It is possible to prevent this from happening\nby making the `nonReentrant` function external, and make it call a\n`private` function that does the actual work.",
									"id": 1372,
									"name": "nonReentrant",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1354,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1319:2:10"
									},
									"src": "1298:204:10",
									"visibility": "internal"
								}
							],
							"scope": 1374,
							"src": "570:935:10"
						}
					],
					"src": "0:1505:10"
				},
				"id": 10
			}
		}
	}
}